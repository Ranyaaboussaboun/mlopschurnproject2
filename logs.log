2023-12-03 14:16:32,730:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-03 14:16:32,730:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-03 14:16:32,730:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-03 14:16:32,730:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-03 14:16:33,211:INFO:PyCaret ClassificationExperiment
2023-12-03 14:16:33,211:INFO:Logging name: churn1
2023-12-03 14:16:33,211:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-12-03 14:16:33,251:INFO:version 3.2.0
2023-12-03 14:16:33,251:INFO:Initializing setup()
2023-12-03 14:16:33,251:INFO:self.USI: 693d
2023-12-03 14:16:33,251:INFO:self._variable_keys: {'X_train', 'logging_param', 'pipeline', 'fold_shuffle_param', 'html_param', 'data', 'log_plots_param', 'exp_name_log', 'fold_generator', '_ml_usecase', 'target_param', 'y_train', 'X', 'exp_id', 'X_test', 'is_multiclass', 'y', 'idx', 'fix_imbalance', 'seed', 'USI', 'gpu_param', '_available_plots', 'gpu_n_jobs_param', 'n_jobs_param', 'fold_groups_param', 'y_test', 'memory'}
2023-12-03 14:16:33,251:INFO:Checking environment
2023-12-03 14:16:33,251:INFO:python_version: 3.10.9
2023-12-03 14:16:33,251:INFO:python_build: ('main', 'Mar  8 2023 10:42:25')
2023-12-03 14:16:33,251:INFO:machine: AMD64
2023-12-03 14:16:33,267:INFO:platform: Windows-10-10.0.22621-SP0
2023-12-03 14:16:33,267:INFO:Memory: svmem(total=16866873344, available=9315078144, percent=44.8, used=7551795200, free=9315078144)
2023-12-03 14:16:33,267:INFO:Physical Core: 8
2023-12-03 14:16:33,267:INFO:Logical Core: 16
2023-12-03 14:16:33,267:INFO:Checking libraries
2023-12-03 14:16:33,267:INFO:System:
2023-12-03 14:16:33,267:INFO:    python: 3.10.9 | packaged by Anaconda, Inc. | (main, Mar  8 2023, 10:42:25) [MSC v.1916 64 bit (AMD64)]
2023-12-03 14:16:33,267:INFO:executable: C:\Users\Rania\anaconda3\envs\mlops\python.exe
2023-12-03 14:16:33,267:INFO:   machine: Windows-10-10.0.22621-SP0
2023-12-03 14:16:33,267:INFO:PyCaret required dependencies:
2023-12-03 14:16:33,305:INFO:                 pip: 23.2.1
2023-12-03 14:16:33,305:INFO:          setuptools: 68.0.0
2023-12-03 14:16:33,305:INFO:             pycaret: 3.2.0
2023-12-03 14:16:33,305:INFO:             IPython: 8.18.1
2023-12-03 14:16:33,305:INFO:          ipywidgets: 7.8.1
2023-12-03 14:16:33,305:INFO:                tqdm: 4.66.1
2023-12-03 14:16:33,305:INFO:               numpy: 1.25.2
2023-12-03 14:16:33,305:INFO:              pandas: 1.5.3
2023-12-03 14:16:33,305:INFO:              jinja2: 3.1.2
2023-12-03 14:16:33,305:INFO:               scipy: 1.10.1
2023-12-03 14:16:33,305:INFO:              joblib: 1.3.2
2023-12-03 14:16:33,305:INFO:             sklearn: 1.3.1
2023-12-03 14:16:33,305:INFO:                pyod: 1.1.2
2023-12-03 14:16:33,305:INFO:            imblearn: 0.11.0
2023-12-03 14:16:33,305:INFO:   category_encoders: 2.6.2
2023-12-03 14:16:33,305:INFO:            lightgbm: 4.1.0
2023-12-03 14:16:33,305:INFO:               numba: 0.58.1
2023-12-03 14:16:33,305:INFO:            requests: 2.31.0
2023-12-03 14:16:33,305:INFO:          matplotlib: 3.8.0
2023-12-03 14:16:33,305:INFO:          scikitplot: 0.3.7
2023-12-03 14:16:33,305:INFO:         yellowbrick: 1.5
2023-12-03 14:16:33,305:INFO:              plotly: 5.17.0
2023-12-03 14:16:33,305:INFO:    plotly-resampler: Not installed
2023-12-03 14:16:33,305:INFO:             kaleido: 0.2.1
2023-12-03 14:16:33,305:INFO:           schemdraw: 0.15
2023-12-03 14:16:33,305:INFO:         statsmodels: 0.14.0
2023-12-03 14:16:33,305:INFO:              sktime: 0.21.1
2023-12-03 14:16:33,305:INFO:               tbats: 1.1.3
2023-12-03 14:16:33,305:INFO:            pmdarima: 2.0.4
2023-12-03 14:16:33,305:INFO:              psutil: 5.9.5
2023-12-03 14:16:33,305:INFO:          markupsafe: 2.1.3
2023-12-03 14:16:33,305:INFO:             pickle5: Not installed
2023-12-03 14:16:33,305:INFO:         cloudpickle: 2.2.1
2023-12-03 14:16:33,305:INFO:         deprecation: 2.1.0
2023-12-03 14:16:33,305:INFO:              xxhash: 3.4.1
2023-12-03 14:16:33,305:INFO:           wurlitzer: Not installed
2023-12-03 14:16:33,305:INFO:PyCaret optional dependencies:
2023-12-03 14:16:33,733:INFO:                shap: 0.43.0
2023-12-03 14:16:33,733:INFO:           interpret: Not installed
2023-12-03 14:16:33,733:INFO:                umap: 0.5.5
2023-12-03 14:16:33,733:INFO:     ydata_profiling: Not installed
2023-12-03 14:16:33,733:INFO:  explainerdashboard: Not installed
2023-12-03 14:16:33,733:INFO:             autoviz: Not installed
2023-12-03 14:16:33,733:INFO:           fairlearn: Not installed
2023-12-03 14:16:33,733:INFO:          deepchecks: 0.17.4
2023-12-03 14:16:33,733:INFO:             xgboost: 2.0.0
2023-12-03 14:16:33,733:INFO:            catboost: 1.2.2
2023-12-03 14:16:33,733:INFO:              kmodes: Not installed
2023-12-03 14:16:33,733:INFO:             mlxtend: Not installed
2023-12-03 14:16:33,733:INFO:       statsforecast: Not installed
2023-12-03 14:16:33,733:INFO:        tune_sklearn: Not installed
2023-12-03 14:16:33,733:INFO:                 ray: Not installed
2023-12-03 14:16:33,733:INFO:            hyperopt: Not installed
2023-12-03 14:16:33,733:INFO:              optuna: 3.4.0
2023-12-03 14:16:33,733:INFO:               skopt: Not installed
2023-12-03 14:16:33,733:INFO:              mlflow: 2.8.1
2023-12-03 14:16:33,733:INFO:              gradio: Not installed
2023-12-03 14:16:33,733:INFO:             fastapi: 0.103.2
2023-12-03 14:16:33,733:INFO:             uvicorn: 0.23.2
2023-12-03 14:16:33,733:INFO:              m2cgen: Not installed
2023-12-03 14:16:33,733:INFO:           evidently: Not installed
2023-12-03 14:16:33,733:INFO:               fugue: Not installed
2023-12-03 14:16:33,733:INFO:           streamlit: 1.27.1
2023-12-03 14:16:33,733:INFO:             prophet: Not installed
2023-12-03 14:16:33,733:INFO:None
2023-12-03 14:16:33,733:INFO:Set up data.
2023-12-03 14:16:33,758:INFO:Set up folding strategy.
2023-12-03 14:16:33,758:INFO:Set up train/test split.
2023-12-03 14:16:33,845:INFO:Set up index.
2023-12-03 14:16:33,845:INFO:Assigning column types.
2023-12-03 14:16:33,845:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-12-03 14:16:33,896:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-03 14:16:33,896:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-03 14:16:33,923:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:16:33,923:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:16:33,980:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-03 14:16:33,980:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-03 14:16:34,011:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:16:34,026:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:16:34,026:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-12-03 14:16:34,057:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-03 14:16:34,092:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:16:34,092:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:16:34,136:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-03 14:16:34,151:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:16:34,151:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:16:34,151:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-12-03 14:16:34,225:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:16:34,225:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:16:34,277:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:16:34,277:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:16:34,277:INFO:Preparing preprocessing pipeline...
2023-12-03 14:16:34,277:INFO:Set up label encoding.
2023-12-03 14:16:34,277:INFO:Set up simple imputation.
2023-12-03 14:16:34,292:INFO:Set up encoding of ordinal features.
2023-12-03 14:16:34,292:INFO:Set up encoding of categorical features.
2023-12-03 14:16:34,292:INFO:Set up column name cleaning.
2023-12-03 14:16:34,520:INFO:Finished creating preprocessing pipeline.
2023-12-03 14:16:34,610:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Rania\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'SeniorCitizen',
                                             'tenure', 'MonthlyCharges',
                                             'TotalCharges'],
                                    transformer=SimpleImputer(add_...
                                                                    'DeviceProtection',
                                                                    'TechSupport',
                                                                    'StreamingTV',
                                                                    'StreamingMovies',
                                                                    'Contract',
                                                                    'PaymentMethod'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-12-03 14:16:34,610:INFO:Creating final display dataframe.
2023-12-03 14:16:35,413:INFO:Setup _display_container:                     Description            Value
0                    Session id              123
1                        Target            Churn
2                   Target type           Binary
3                Target mapping    No: 0, Yes: 1
4           Original data shape       (7043, 22)
5        Transformed data shape       (7043, 42)
6   Transformed train set shape       (4930, 42)
7    Transformed test set shape       (2113, 42)
8               Ignore features                1
9              Ordinal features                5
10             Numeric features                5
11         Categorical features               15
12     Rows with missing values             0.2%
13                   Preprocess             True
14              Imputation type           simple
15           Numeric imputation             mean
16       Categorical imputation             mode
17     Maximum one-hot encoding               25
18              Encoding method             None
19               Fold Generator  StratifiedKFold
20                  Fold Number               10
21                     CPU Jobs               -1
22                      Use GPU            False
23               Log Experiment     MlflowLogger
24              Experiment Name           churn1
25                          USI             693d
2023-12-03 14:16:35,502:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:16:35,502:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:16:35,550:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:16:35,566:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:16:35,566:INFO:Logging experiment in loggers
2023-12-03 14:16:35,909:INFO:SubProcess save_model() called ==================================
2023-12-03 14:16:36,027:INFO:Initializing save_model()
2023-12-03 14:16:36,027:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\Rania\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'SeniorCitizen',
                                             'tenure', 'MonthlyCharges',
                                             'TotalCharges'],
                                    transformer=SimpleImputer(add_...
                                                                    'DeviceProtection',
                                                                    'TechSupport',
                                                                    'StreamingTV',
                                                                    'StreamingMovies',
                                                                    'Contract',
                                                                    'PaymentMethod'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), model_name=C:\Users\Rania\AppData\Local\Temp\tmp9j4a9wxb\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Rania\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'SeniorCitizen',
                                             'tenure', 'MonthlyCharges',
                                             'TotalCharges'],
                                    transformer=SimpleImputer(add_...
                                                                    'DeviceProtection',
                                                                    'TechSupport',
                                                                    'StreamingTV',
                                                                    'StreamingMovies',
                                                                    'Contract',
                                                                    'PaymentMethod'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2023-12-03 14:16:36,027:INFO:Adding model into prep_pipe
2023-12-03 14:16:36,027:WARNING:Only Model saved as it was a pipeline.
2023-12-03 14:16:36,043:INFO:C:\Users\Rania\AppData\Local\Temp\tmp9j4a9wxb\Transformation Pipeline.pkl saved in current working directory
2023-12-03 14:16:36,099:INFO:Pipeline(memory=FastMemory(location=C:\Users\Rania\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'SeniorCitizen',
                                             'tenure', 'MonthlyCharges',
                                             'TotalCharges'],
                                    transformer=SimpleImputer(add_...
                                                                    'DeviceProtection',
                                                                    'TechSupport',
                                                                    'StreamingTV',
                                                                    'StreamingMovies',
                                                                    'Contract',
                                                                    'PaymentMethod'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-12-03 14:16:36,099:INFO:save_model() successfully completed......................................
2023-12-03 14:16:36,177:INFO:SubProcess save_model() end ==================================
2023-12-03 14:16:36,293:INFO:setup() successfully completed in 2.37s...............
2023-12-03 14:19:24,708:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-03 14:19:24,708:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-03 14:19:24,708:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-03 14:19:24,708:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-03 14:19:25,527:INFO:PyCaret ClassificationExperiment
2023-12-03 14:19:25,527:INFO:Logging name: churn1
2023-12-03 14:19:25,534:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-12-03 14:19:25,534:INFO:version 3.2.0
2023-12-03 14:19:25,534:INFO:Initializing setup()
2023-12-03 14:19:25,534:INFO:self.USI: 5bdd
2023-12-03 14:19:25,534:INFO:self._variable_keys: {'seed', 'pipeline', 'y', 'y_test', '_available_plots', 'logging_param', 'exp_id', 'html_param', 'n_jobs_param', 'X', 'X_train', '_ml_usecase', 'data', 'fold_generator', 'y_train', 'memory', 'exp_name_log', 'fold_shuffle_param', 'fix_imbalance', 'idx', 'X_test', 'USI', 'is_multiclass', 'gpu_param', 'target_param', 'gpu_n_jobs_param', 'fold_groups_param', 'log_plots_param'}
2023-12-03 14:19:25,534:INFO:Checking environment
2023-12-03 14:19:25,534:INFO:python_version: 3.10.9
2023-12-03 14:19:25,534:INFO:python_build: ('main', 'Mar  8 2023 10:42:25')
2023-12-03 14:19:25,534:INFO:machine: AMD64
2023-12-03 14:19:25,542:INFO:platform: Windows-10-10.0.22621-SP0
2023-12-03 14:19:25,542:INFO:Memory: svmem(total=16866873344, available=8975732736, percent=46.8, used=7891140608, free=8975732736)
2023-12-03 14:19:25,542:INFO:Physical Core: 8
2023-12-03 14:19:25,542:INFO:Logical Core: 16
2023-12-03 14:19:25,542:INFO:Checking libraries
2023-12-03 14:19:25,542:INFO:System:
2023-12-03 14:19:25,542:INFO:    python: 3.10.9 | packaged by Anaconda, Inc. | (main, Mar  8 2023, 10:42:25) [MSC v.1916 64 bit (AMD64)]
2023-12-03 14:19:25,542:INFO:executable: C:\Users\Rania\anaconda3\envs\mlops\python.exe
2023-12-03 14:19:25,542:INFO:   machine: Windows-10-10.0.22621-SP0
2023-12-03 14:19:25,542:INFO:PyCaret required dependencies:
2023-12-03 14:19:25,607:INFO:                 pip: 23.2.1
2023-12-03 14:19:25,607:INFO:          setuptools: 68.0.0
2023-12-03 14:19:25,607:INFO:             pycaret: 3.2.0
2023-12-03 14:19:25,607:INFO:             IPython: 8.18.1
2023-12-03 14:19:25,607:INFO:          ipywidgets: 7.8.1
2023-12-03 14:19:25,607:INFO:                tqdm: 4.66.1
2023-12-03 14:19:25,607:INFO:               numpy: 1.25.2
2023-12-03 14:19:25,607:INFO:              pandas: 1.5.3
2023-12-03 14:19:25,607:INFO:              jinja2: 3.1.2
2023-12-03 14:19:25,607:INFO:               scipy: 1.10.1
2023-12-03 14:19:25,607:INFO:              joblib: 1.3.2
2023-12-03 14:19:25,607:INFO:             sklearn: 1.3.1
2023-12-03 14:19:25,607:INFO:                pyod: 1.1.2
2023-12-03 14:19:25,607:INFO:            imblearn: 0.11.0
2023-12-03 14:19:25,607:INFO:   category_encoders: 2.6.2
2023-12-03 14:19:25,607:INFO:            lightgbm: 4.1.0
2023-12-03 14:19:25,607:INFO:               numba: 0.58.1
2023-12-03 14:19:25,607:INFO:            requests: 2.31.0
2023-12-03 14:19:25,607:INFO:          matplotlib: 3.8.0
2023-12-03 14:19:25,607:INFO:          scikitplot: 0.3.7
2023-12-03 14:19:25,607:INFO:         yellowbrick: 1.5
2023-12-03 14:19:25,607:INFO:              plotly: 5.17.0
2023-12-03 14:19:25,607:INFO:    plotly-resampler: Not installed
2023-12-03 14:19:25,607:INFO:             kaleido: 0.2.1
2023-12-03 14:19:25,607:INFO:           schemdraw: 0.15
2023-12-03 14:19:25,607:INFO:         statsmodels: 0.14.0
2023-12-03 14:19:25,607:INFO:              sktime: 0.21.1
2023-12-03 14:19:25,607:INFO:               tbats: 1.1.3
2023-12-03 14:19:25,607:INFO:            pmdarima: 2.0.4
2023-12-03 14:19:25,607:INFO:              psutil: 5.9.5
2023-12-03 14:19:25,607:INFO:          markupsafe: 2.1.3
2023-12-03 14:19:25,607:INFO:             pickle5: Not installed
2023-12-03 14:19:25,607:INFO:         cloudpickle: 2.2.1
2023-12-03 14:19:25,607:INFO:         deprecation: 2.1.0
2023-12-03 14:19:25,607:INFO:              xxhash: 3.4.1
2023-12-03 14:19:25,607:INFO:           wurlitzer: Not installed
2023-12-03 14:19:25,607:INFO:PyCaret optional dependencies:
2023-12-03 14:19:26,198:INFO:                shap: 0.43.0
2023-12-03 14:19:26,198:INFO:           interpret: Not installed
2023-12-03 14:19:26,198:INFO:                umap: 0.5.5
2023-12-03 14:19:26,198:INFO:     ydata_profiling: Not installed
2023-12-03 14:19:26,198:INFO:  explainerdashboard: Not installed
2023-12-03 14:19:26,198:INFO:             autoviz: Not installed
2023-12-03 14:19:26,198:INFO:           fairlearn: Not installed
2023-12-03 14:19:26,198:INFO:          deepchecks: 0.17.4
2023-12-03 14:19:26,198:INFO:             xgboost: 2.0.0
2023-12-03 14:19:26,198:INFO:            catboost: 1.2.2
2023-12-03 14:19:26,198:INFO:              kmodes: Not installed
2023-12-03 14:19:26,198:INFO:             mlxtend: Not installed
2023-12-03 14:19:26,198:INFO:       statsforecast: Not installed
2023-12-03 14:19:26,198:INFO:        tune_sklearn: Not installed
2023-12-03 14:19:26,198:INFO:                 ray: Not installed
2023-12-03 14:19:26,198:INFO:            hyperopt: Not installed
2023-12-03 14:19:26,198:INFO:              optuna: 3.4.0
2023-12-03 14:19:26,198:INFO:               skopt: Not installed
2023-12-03 14:19:26,198:INFO:              mlflow: 2.8.1
2023-12-03 14:19:26,198:INFO:              gradio: Not installed
2023-12-03 14:19:26,198:INFO:             fastapi: 0.103.2
2023-12-03 14:19:26,198:INFO:             uvicorn: 0.23.2
2023-12-03 14:19:26,198:INFO:              m2cgen: Not installed
2023-12-03 14:19:26,198:INFO:           evidently: Not installed
2023-12-03 14:19:26,198:INFO:               fugue: Not installed
2023-12-03 14:19:26,198:INFO:           streamlit: 1.27.1
2023-12-03 14:19:26,198:INFO:             prophet: Not installed
2023-12-03 14:19:26,198:INFO:None
2023-12-03 14:19:26,198:INFO:Set up data.
2023-12-03 14:19:26,233:INFO:Set up folding strategy.
2023-12-03 14:19:26,233:INFO:Set up train/test split.
2023-12-03 14:19:26,323:INFO:Set up index.
2023-12-03 14:19:26,323:INFO:Assigning column types.
2023-12-03 14:19:26,338:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-12-03 14:19:26,394:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-03 14:19:26,400:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-03 14:19:26,427:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:19:26,435:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:19:26,495:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-03 14:19:26,497:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-03 14:19:26,523:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:19:26,523:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:19:26,523:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-12-03 14:19:26,565:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-03 14:19:26,585:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:19:26,596:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:19:26,648:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-03 14:19:26,696:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:19:26,703:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:19:26,703:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-12-03 14:19:26,776:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:19:26,780:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:19:26,834:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:19:26,834:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:19:26,834:INFO:Preparing preprocessing pipeline...
2023-12-03 14:19:26,850:INFO:Set up label encoding.
2023-12-03 14:19:26,850:INFO:Set up simple imputation.
2023-12-03 14:19:26,850:INFO:Set up encoding of ordinal features.
2023-12-03 14:19:26,850:INFO:Set up encoding of categorical features.
2023-12-03 14:19:26,850:INFO:Set up column name cleaning.
2023-12-03 14:19:27,181:INFO:Finished creating preprocessing pipeline.
2023-12-03 14:19:27,263:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Rania\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'SeniorCitizen',
                                             'tenure', 'MonthlyCharges',
                                             'TotalCharges'],
                                    transformer=SimpleImputer(add_...
                                                                    'DeviceProtection',
                                                                    'TechSupport',
                                                                    'StreamingTV',
                                                                    'StreamingMovies',
                                                                    'Contract',
                                                                    'PaymentMethod'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-12-03 14:19:27,263:INFO:Creating final display dataframe.
2023-12-03 14:19:27,438:INFO:Setup _display_container:                     Description            Value
0                    Session id              123
1                        Target            Churn
2                   Target type           Binary
3                Target mapping    No: 0, Yes: 1
4           Original data shape       (7043, 22)
5        Transformed data shape       (7043, 42)
6   Transformed train set shape       (4930, 42)
7    Transformed test set shape       (2113, 42)
8               Ignore features                1
9              Ordinal features                5
10             Numeric features                5
11         Categorical features               15
12     Rows with missing values             0.2%
13                   Preprocess             True
14              Imputation type           simple
15           Numeric imputation             mean
16       Categorical imputation             mode
17     Maximum one-hot encoding               25
18              Encoding method             None
19               Fold Generator  StratifiedKFold
20                  Fold Number               10
21                     CPU Jobs               -1
22                      Use GPU            False
23               Log Experiment     MlflowLogger
24              Experiment Name           churn1
25                          USI             5bdd
2023-12-03 14:19:27,536:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:19:27,544:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:19:27,624:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:19:27,624:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:19:27,624:INFO:Logging experiment in loggers
2023-12-03 14:19:27,982:INFO:SubProcess save_model() called ==================================
2023-12-03 14:19:28,176:INFO:Initializing save_model()
2023-12-03 14:19:28,176:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\Rania\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'SeniorCitizen',
                                             'tenure', 'MonthlyCharges',
                                             'TotalCharges'],
                                    transformer=SimpleImputer(add_...
                                                                    'DeviceProtection',
                                                                    'TechSupport',
                                                                    'StreamingTV',
                                                                    'StreamingMovies',
                                                                    'Contract',
                                                                    'PaymentMethod'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), model_name=C:\Users\Rania\AppData\Local\Temp\tmplsy764jt\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Rania\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'SeniorCitizen',
                                             'tenure', 'MonthlyCharges',
                                             'TotalCharges'],
                                    transformer=SimpleImputer(add_...
                                                                    'DeviceProtection',
                                                                    'TechSupport',
                                                                    'StreamingTV',
                                                                    'StreamingMovies',
                                                                    'Contract',
                                                                    'PaymentMethod'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2023-12-03 14:19:28,176:INFO:Adding model into prep_pipe
2023-12-03 14:19:28,176:WARNING:Only Model saved as it was a pipeline.
2023-12-03 14:19:28,197:INFO:C:\Users\Rania\AppData\Local\Temp\tmplsy764jt\Transformation Pipeline.pkl saved in current working directory
2023-12-03 14:19:28,305:INFO:Pipeline(memory=FastMemory(location=C:\Users\Rania\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'SeniorCitizen',
                                             'tenure', 'MonthlyCharges',
                                             'TotalCharges'],
                                    transformer=SimpleImputer(add_...
                                                                    'DeviceProtection',
                                                                    'TechSupport',
                                                                    'StreamingTV',
                                                                    'StreamingMovies',
                                                                    'Contract',
                                                                    'PaymentMethod'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-12-03 14:19:28,305:INFO:save_model() successfully completed......................................
2023-12-03 14:19:28,398:INFO:SubProcess save_model() end ==================================
2023-12-03 14:19:28,441:INFO:setup() successfully completed in 2.1s...............
2023-12-03 14:20:01,375:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-03 14:20:01,375:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-03 14:20:01,375:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-03 14:20:01,375:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-03 14:20:02,200:INFO:PyCaret ClassificationExperiment
2023-12-03 14:20:02,200:INFO:Logging name: churn1
2023-12-03 14:20:02,200:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-12-03 14:20:02,200:INFO:version 3.2.0
2023-12-03 14:20:02,200:INFO:Initializing setup()
2023-12-03 14:20:02,200:INFO:self.USI: 2718
2023-12-03 14:20:02,200:INFO:self._variable_keys: {'y', 'pipeline', 'fix_imbalance', 'data', '_ml_usecase', 'X', 'idx', 'exp_id', 'y_train', 'html_param', 'target_param', 'seed', 'fold_generator', 'n_jobs_param', 'USI', 'fold_shuffle_param', 'X_train', 'gpu_n_jobs_param', 'fold_groups_param', 'exp_name_log', 'gpu_param', 'X_test', 'is_multiclass', 'memory', 'logging_param', 'y_test', '_available_plots', 'log_plots_param'}
2023-12-03 14:20:02,200:INFO:Checking environment
2023-12-03 14:20:02,200:INFO:python_version: 3.10.9
2023-12-03 14:20:02,200:INFO:python_build: ('main', 'Mar  8 2023 10:42:25')
2023-12-03 14:20:02,200:INFO:machine: AMD64
2023-12-03 14:20:02,207:INFO:platform: Windows-10-10.0.22621-SP0
2023-12-03 14:20:02,207:INFO:Memory: svmem(total=16866873344, available=9002242048, percent=46.6, used=7864631296, free=9002242048)
2023-12-03 14:20:02,207:INFO:Physical Core: 8
2023-12-03 14:20:02,207:INFO:Logical Core: 16
2023-12-03 14:20:02,207:INFO:Checking libraries
2023-12-03 14:20:02,207:INFO:System:
2023-12-03 14:20:02,207:INFO:    python: 3.10.9 | packaged by Anaconda, Inc. | (main, Mar  8 2023, 10:42:25) [MSC v.1916 64 bit (AMD64)]
2023-12-03 14:20:02,207:INFO:executable: C:\Users\Rania\anaconda3\envs\mlops\python.exe
2023-12-03 14:20:02,207:INFO:   machine: Windows-10-10.0.22621-SP0
2023-12-03 14:20:02,207:INFO:PyCaret required dependencies:
2023-12-03 14:20:02,275:INFO:                 pip: 23.2.1
2023-12-03 14:20:02,276:INFO:          setuptools: 68.0.0
2023-12-03 14:20:02,276:INFO:             pycaret: 3.2.0
2023-12-03 14:20:02,276:INFO:             IPython: 8.18.1
2023-12-03 14:20:02,276:INFO:          ipywidgets: 7.8.1
2023-12-03 14:20:02,276:INFO:                tqdm: 4.66.1
2023-12-03 14:20:02,276:INFO:               numpy: 1.25.2
2023-12-03 14:20:02,276:INFO:              pandas: 1.5.3
2023-12-03 14:20:02,276:INFO:              jinja2: 3.1.2
2023-12-03 14:20:02,276:INFO:               scipy: 1.10.1
2023-12-03 14:20:02,276:INFO:              joblib: 1.3.2
2023-12-03 14:20:02,276:INFO:             sklearn: 1.3.1
2023-12-03 14:20:02,276:INFO:                pyod: 1.1.2
2023-12-03 14:20:02,276:INFO:            imblearn: 0.11.0
2023-12-03 14:20:02,276:INFO:   category_encoders: 2.6.2
2023-12-03 14:20:02,276:INFO:            lightgbm: 4.1.0
2023-12-03 14:20:02,276:INFO:               numba: 0.58.1
2023-12-03 14:20:02,276:INFO:            requests: 2.31.0
2023-12-03 14:20:02,276:INFO:          matplotlib: 3.8.0
2023-12-03 14:20:02,276:INFO:          scikitplot: 0.3.7
2023-12-03 14:20:02,276:INFO:         yellowbrick: 1.5
2023-12-03 14:20:02,276:INFO:              plotly: 5.17.0
2023-12-03 14:20:02,276:INFO:    plotly-resampler: Not installed
2023-12-03 14:20:02,276:INFO:             kaleido: 0.2.1
2023-12-03 14:20:02,276:INFO:           schemdraw: 0.15
2023-12-03 14:20:02,276:INFO:         statsmodels: 0.14.0
2023-12-03 14:20:02,276:INFO:              sktime: 0.21.1
2023-12-03 14:20:02,276:INFO:               tbats: 1.1.3
2023-12-03 14:20:02,276:INFO:            pmdarima: 2.0.4
2023-12-03 14:20:02,276:INFO:              psutil: 5.9.5
2023-12-03 14:20:02,276:INFO:          markupsafe: 2.1.3
2023-12-03 14:20:02,276:INFO:             pickle5: Not installed
2023-12-03 14:20:02,276:INFO:         cloudpickle: 2.2.1
2023-12-03 14:20:02,276:INFO:         deprecation: 2.1.0
2023-12-03 14:20:02,276:INFO:              xxhash: 3.4.1
2023-12-03 14:20:02,276:INFO:           wurlitzer: Not installed
2023-12-03 14:20:02,276:INFO:PyCaret optional dependencies:
2023-12-03 14:20:02,804:INFO:                shap: 0.43.0
2023-12-03 14:20:02,804:INFO:           interpret: Not installed
2023-12-03 14:20:02,804:INFO:                umap: 0.5.5
2023-12-03 14:20:02,804:INFO:     ydata_profiling: Not installed
2023-12-03 14:20:02,804:INFO:  explainerdashboard: Not installed
2023-12-03 14:20:02,804:INFO:             autoviz: Not installed
2023-12-03 14:20:02,804:INFO:           fairlearn: Not installed
2023-12-03 14:20:02,804:INFO:          deepchecks: 0.17.4
2023-12-03 14:20:02,804:INFO:             xgboost: 2.0.0
2023-12-03 14:20:02,804:INFO:            catboost: 1.2.2
2023-12-03 14:20:02,804:INFO:              kmodes: Not installed
2023-12-03 14:20:02,804:INFO:             mlxtend: Not installed
2023-12-03 14:20:02,804:INFO:       statsforecast: Not installed
2023-12-03 14:20:02,804:INFO:        tune_sklearn: Not installed
2023-12-03 14:20:02,804:INFO:                 ray: Not installed
2023-12-03 14:20:02,804:INFO:            hyperopt: Not installed
2023-12-03 14:20:02,804:INFO:              optuna: 3.4.0
2023-12-03 14:20:02,804:INFO:               skopt: Not installed
2023-12-03 14:20:02,804:INFO:              mlflow: 2.8.1
2023-12-03 14:20:02,804:INFO:              gradio: Not installed
2023-12-03 14:20:02,804:INFO:             fastapi: 0.103.2
2023-12-03 14:20:02,804:INFO:             uvicorn: 0.23.2
2023-12-03 14:20:02,804:INFO:              m2cgen: Not installed
2023-12-03 14:20:02,804:INFO:           evidently: Not installed
2023-12-03 14:20:02,804:INFO:               fugue: Not installed
2023-12-03 14:20:02,804:INFO:           streamlit: 1.27.1
2023-12-03 14:20:02,804:INFO:             prophet: Not installed
2023-12-03 14:20:02,804:INFO:None
2023-12-03 14:20:02,804:INFO:Set up data.
2023-12-03 14:20:02,831:INFO:Set up folding strategy.
2023-12-03 14:20:02,831:INFO:Set up train/test split.
2023-12-03 14:20:02,930:INFO:Set up index.
2023-12-03 14:20:02,930:INFO:Assigning column types.
2023-12-03 14:20:02,936:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-12-03 14:20:02,991:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-03 14:20:03,001:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-03 14:20:03,047:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:20:03,054:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:20:03,134:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-03 14:20:03,134:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-03 14:20:03,171:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:20:03,171:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:20:03,171:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-12-03 14:20:03,220:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-03 14:20:03,248:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:20:03,255:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:20:03,301:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-03 14:20:03,345:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:20:03,345:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:20:03,345:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-12-03 14:20:03,421:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:20:03,421:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:20:03,498:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:20:03,501:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:20:03,501:INFO:Preparing preprocessing pipeline...
2023-12-03 14:20:03,505:INFO:Set up label encoding.
2023-12-03 14:20:03,505:INFO:Set up simple imputation.
2023-12-03 14:20:03,512:INFO:Set up encoding of ordinal features.
2023-12-03 14:20:03,518:INFO:Set up encoding of categorical features.
2023-12-03 14:20:03,518:INFO:Set up column name cleaning.
2023-12-03 14:20:03,789:INFO:Finished creating preprocessing pipeline.
2023-12-03 14:20:03,854:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Rania\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'SeniorCitizen',
                                             'tenure', 'MonthlyCharges',
                                             'TotalCharges'],
                                    transformer=SimpleImputer(add_...
                                                                    'DeviceProtection',
                                                                    'TechSupport',
                                                                    'StreamingTV',
                                                                    'StreamingMovies',
                                                                    'Contract',
                                                                    'PaymentMethod'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-12-03 14:20:03,854:INFO:Creating final display dataframe.
2023-12-03 14:20:04,019:INFO:Setup _display_container:                     Description            Value
0                    Session id              123
1                        Target            Churn
2                   Target type           Binary
3                Target mapping    No: 0, Yes: 1
4           Original data shape       (7043, 22)
5        Transformed data shape       (7043, 42)
6   Transformed train set shape       (4930, 42)
7    Transformed test set shape       (2113, 42)
8               Ignore features                1
9              Ordinal features                5
10             Numeric features                5
11         Categorical features               15
12     Rows with missing values             0.2%
13                   Preprocess             True
14              Imputation type           simple
15           Numeric imputation             mean
16       Categorical imputation             mode
17     Maximum one-hot encoding               25
18              Encoding method             None
19               Fold Generator  StratifiedKFold
20                  Fold Number               10
21                     CPU Jobs               -1
22                      Use GPU            False
23               Log Experiment     MlflowLogger
24              Experiment Name           churn1
25                          USI             2718
2023-12-03 14:20:04,129:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:20:04,129:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:20:04,184:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:20:04,184:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:20:04,199:INFO:Logging experiment in loggers
2023-12-03 14:20:04,527:INFO:SubProcess save_model() called ==================================
2023-12-03 14:20:04,715:INFO:Initializing save_model()
2023-12-03 14:20:04,715:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\Rania\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'SeniorCitizen',
                                             'tenure', 'MonthlyCharges',
                                             'TotalCharges'],
                                    transformer=SimpleImputer(add_...
                                                                    'DeviceProtection',
                                                                    'TechSupport',
                                                                    'StreamingTV',
                                                                    'StreamingMovies',
                                                                    'Contract',
                                                                    'PaymentMethod'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), model_name=C:\Users\Rania\AppData\Local\Temp\tmpf56igz5r\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Rania\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'SeniorCitizen',
                                             'tenure', 'MonthlyCharges',
                                             'TotalCharges'],
                                    transformer=SimpleImputer(add_...
                                                                    'DeviceProtection',
                                                                    'TechSupport',
                                                                    'StreamingTV',
                                                                    'StreamingMovies',
                                                                    'Contract',
                                                                    'PaymentMethod'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2023-12-03 14:20:04,715:INFO:Adding model into prep_pipe
2023-12-03 14:20:04,715:WARNING:Only Model saved as it was a pipeline.
2023-12-03 14:20:04,732:INFO:C:\Users\Rania\AppData\Local\Temp\tmpf56igz5r\Transformation Pipeline.pkl saved in current working directory
2023-12-03 14:20:04,811:INFO:Pipeline(memory=FastMemory(location=C:\Users\Rania\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'SeniorCitizen',
                                             'tenure', 'MonthlyCharges',
                                             'TotalCharges'],
                                    transformer=SimpleImputer(add_...
                                                                    'DeviceProtection',
                                                                    'TechSupport',
                                                                    'StreamingTV',
                                                                    'StreamingMovies',
                                                                    'Contract',
                                                                    'PaymentMethod'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-12-03 14:20:04,811:INFO:save_model() successfully completed......................................
2023-12-03 14:20:04,918:INFO:SubProcess save_model() end ==================================
2023-12-03 14:20:04,956:INFO:setup() successfully completed in 2.0s...............
2023-12-03 14:23:11,233:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-03 14:23:11,248:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-03 14:23:11,248:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-03 14:23:11,248:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-03 14:23:26,037:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-03 14:23:26,053:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-03 14:23:26,053:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-03 14:23:26,053:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-03 14:23:26,563:INFO:PyCaret ClassificationExperiment
2023-12-03 14:23:26,563:INFO:Logging name: churn1
2023-12-03 14:23:26,563:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-12-03 14:23:26,563:INFO:version 3.2.0
2023-12-03 14:23:26,563:INFO:Initializing setup()
2023-12-03 14:23:26,563:INFO:self.USI: 23b3
2023-12-03 14:23:26,563:INFO:self._variable_keys: {'fold_groups_param', 'USI', 'is_multiclass', 'log_plots_param', 'gpu_param', 'X_train', 'gpu_n_jobs_param', 'logging_param', 'X_test', 'y_train', 'fold_generator', 'fold_shuffle_param', 'memory', 'y', 'X', '_available_plots', 'html_param', 'idx', 'y_test', 'data', 'exp_id', 'n_jobs_param', 'exp_name_log', 'seed', 'target_param', 'pipeline', '_ml_usecase', 'fix_imbalance'}
2023-12-03 14:23:26,563:INFO:Checking environment
2023-12-03 14:23:26,563:INFO:python_version: 3.10.9
2023-12-03 14:23:26,563:INFO:python_build: ('main', 'Mar  8 2023 10:42:25')
2023-12-03 14:23:26,563:INFO:machine: AMD64
2023-12-03 14:23:26,582:INFO:platform: Windows-10-10.0.22621-SP0
2023-12-03 14:23:26,582:INFO:Memory: svmem(total=16866873344, available=9238708224, percent=45.2, used=7628165120, free=9238708224)
2023-12-03 14:23:26,582:INFO:Physical Core: 8
2023-12-03 14:23:26,582:INFO:Logical Core: 16
2023-12-03 14:23:26,582:INFO:Checking libraries
2023-12-03 14:23:26,582:INFO:System:
2023-12-03 14:23:26,582:INFO:    python: 3.10.9 | packaged by Anaconda, Inc. | (main, Mar  8 2023, 10:42:25) [MSC v.1916 64 bit (AMD64)]
2023-12-03 14:23:26,582:INFO:executable: C:\Users\Rania\anaconda3\envs\mlops\python.exe
2023-12-03 14:23:26,582:INFO:   machine: Windows-10-10.0.22621-SP0
2023-12-03 14:23:26,582:INFO:PyCaret required dependencies:
2023-12-03 14:23:26,626:INFO:                 pip: 23.2.1
2023-12-03 14:23:26,626:INFO:          setuptools: 68.0.0
2023-12-03 14:23:26,626:INFO:             pycaret: 3.2.0
2023-12-03 14:23:26,626:INFO:             IPython: 8.18.1
2023-12-03 14:23:26,626:INFO:          ipywidgets: 7.8.1
2023-12-03 14:23:26,626:INFO:                tqdm: 4.66.1
2023-12-03 14:23:26,626:INFO:               numpy: 1.25.2
2023-12-03 14:23:26,626:INFO:              pandas: 1.5.3
2023-12-03 14:23:26,626:INFO:              jinja2: 3.1.2
2023-12-03 14:23:26,626:INFO:               scipy: 1.10.1
2023-12-03 14:23:26,626:INFO:              joblib: 1.3.2
2023-12-03 14:23:26,626:INFO:             sklearn: 1.3.1
2023-12-03 14:23:26,626:INFO:                pyod: 1.1.2
2023-12-03 14:23:26,626:INFO:            imblearn: 0.11.0
2023-12-03 14:23:26,626:INFO:   category_encoders: 2.6.2
2023-12-03 14:23:26,626:INFO:            lightgbm: 4.1.0
2023-12-03 14:23:26,626:INFO:               numba: 0.58.1
2023-12-03 14:23:26,626:INFO:            requests: 2.31.0
2023-12-03 14:23:26,626:INFO:          matplotlib: 3.8.0
2023-12-03 14:23:26,626:INFO:          scikitplot: 0.3.7
2023-12-03 14:23:26,626:INFO:         yellowbrick: 1.5
2023-12-03 14:23:26,626:INFO:              plotly: 5.17.0
2023-12-03 14:23:26,626:INFO:    plotly-resampler: Not installed
2023-12-03 14:23:26,626:INFO:             kaleido: 0.2.1
2023-12-03 14:23:26,626:INFO:           schemdraw: 0.15
2023-12-03 14:23:26,626:INFO:         statsmodels: 0.14.0
2023-12-03 14:23:26,626:INFO:              sktime: 0.21.1
2023-12-03 14:23:26,626:INFO:               tbats: 1.1.3
2023-12-03 14:23:26,626:INFO:            pmdarima: 2.0.4
2023-12-03 14:23:26,626:INFO:              psutil: 5.9.5
2023-12-03 14:23:26,626:INFO:          markupsafe: 2.1.3
2023-12-03 14:23:26,626:INFO:             pickle5: Not installed
2023-12-03 14:23:26,626:INFO:         cloudpickle: 2.2.1
2023-12-03 14:23:26,626:INFO:         deprecation: 2.1.0
2023-12-03 14:23:26,626:INFO:              xxhash: 3.4.1
2023-12-03 14:23:26,626:INFO:           wurlitzer: Not installed
2023-12-03 14:23:26,626:INFO:PyCaret optional dependencies:
2023-12-03 14:23:26,979:INFO:                shap: 0.43.0
2023-12-03 14:23:26,979:INFO:           interpret: Not installed
2023-12-03 14:23:26,979:INFO:                umap: 0.5.5
2023-12-03 14:23:26,979:INFO:     ydata_profiling: Not installed
2023-12-03 14:23:26,979:INFO:  explainerdashboard: Not installed
2023-12-03 14:23:26,979:INFO:             autoviz: Not installed
2023-12-03 14:23:26,979:INFO:           fairlearn: Not installed
2023-12-03 14:23:26,979:INFO:          deepchecks: 0.17.4
2023-12-03 14:23:26,979:INFO:             xgboost: 2.0.0
2023-12-03 14:23:26,979:INFO:            catboost: 1.2.2
2023-12-03 14:23:26,979:INFO:              kmodes: Not installed
2023-12-03 14:23:26,979:INFO:             mlxtend: Not installed
2023-12-03 14:23:26,979:INFO:       statsforecast: Not installed
2023-12-03 14:23:26,979:INFO:        tune_sklearn: Not installed
2023-12-03 14:23:26,979:INFO:                 ray: Not installed
2023-12-03 14:23:26,979:INFO:            hyperopt: Not installed
2023-12-03 14:23:26,979:INFO:              optuna: 3.4.0
2023-12-03 14:23:26,979:INFO:               skopt: Not installed
2023-12-03 14:23:26,979:INFO:              mlflow: 2.8.1
2023-12-03 14:23:26,979:INFO:              gradio: Not installed
2023-12-03 14:23:26,979:INFO:             fastapi: 0.103.2
2023-12-03 14:23:26,979:INFO:             uvicorn: 0.23.2
2023-12-03 14:23:26,979:INFO:              m2cgen: Not installed
2023-12-03 14:23:26,979:INFO:           evidently: Not installed
2023-12-03 14:23:26,979:INFO:               fugue: Not installed
2023-12-03 14:23:26,979:INFO:           streamlit: 1.27.1
2023-12-03 14:23:26,979:INFO:             prophet: Not installed
2023-12-03 14:23:26,979:INFO:None
2023-12-03 14:23:26,979:INFO:Set up data.
2023-12-03 14:23:27,010:INFO:Set up folding strategy.
2023-12-03 14:23:27,010:INFO:Set up train/test split.
2023-12-03 14:23:27,088:INFO:Set up index.
2023-12-03 14:23:27,088:INFO:Assigning column types.
2023-12-03 14:23:27,088:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-12-03 14:23:27,135:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-03 14:23:27,135:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-03 14:23:27,151:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:23:27,167:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:23:27,213:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-03 14:23:27,213:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-03 14:23:27,229:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:23:27,229:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:23:27,229:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-12-03 14:23:27,276:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-03 14:23:27,296:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:23:27,296:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:23:27,336:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-03 14:23:27,352:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:23:27,352:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:23:27,352:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-12-03 14:23:27,415:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:23:27,415:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:23:27,477:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:23:27,477:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:23:27,477:INFO:Preparing preprocessing pipeline...
2023-12-03 14:23:27,477:INFO:Set up label encoding.
2023-12-03 14:23:27,477:INFO:Set up simple imputation.
2023-12-03 14:23:27,493:INFO:Set up encoding of ordinal features.
2023-12-03 14:23:27,493:INFO:Set up encoding of categorical features.
2023-12-03 14:23:27,493:INFO:Set up column name cleaning.
2023-12-03 14:23:27,696:INFO:Finished creating preprocessing pipeline.
2023-12-03 14:23:27,774:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Rania\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'SeniorCitizen',
                                             'tenure', 'MonthlyCharges',
                                             'TotalCharges'],
                                    transformer=SimpleImputer(add_...
                                                                    'DeviceProtection',
                                                                    'TechSupport',
                                                                    'StreamingTV',
                                                                    'StreamingMovies',
                                                                    'Contract',
                                                                    'PaymentMethod'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-12-03 14:23:27,774:INFO:Creating final display dataframe.
2023-12-03 14:23:27,907:INFO:Setup _display_container:                     Description            Value
0                    Session id              123
1                        Target            Churn
2                   Target type           Binary
3                Target mapping    No: 0, Yes: 1
4           Original data shape       (7043, 22)
5        Transformed data shape       (7043, 42)
6   Transformed train set shape       (4930, 42)
7    Transformed test set shape       (2113, 42)
8               Ignore features                1
9              Ordinal features                5
10             Numeric features                5
11         Categorical features               15
12     Rows with missing values             0.2%
13                   Preprocess             True
14              Imputation type           simple
15           Numeric imputation             mean
16       Categorical imputation             mode
17     Maximum one-hot encoding               25
18              Encoding method             None
19               Fold Generator  StratifiedKFold
20                  Fold Number               10
21                     CPU Jobs               -1
22                      Use GPU            False
23               Log Experiment     MlflowLogger
24              Experiment Name           churn1
25                          USI             23b3
2023-12-03 14:23:27,996:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:23:28,005:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:23:28,052:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:23:28,052:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:23:28,052:INFO:Logging experiment in loggers
2023-12-03 14:23:28,303:INFO:SubProcess save_model() called ==================================
2023-12-03 14:23:28,427:INFO:Initializing save_model()
2023-12-03 14:23:28,427:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\Rania\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'SeniorCitizen',
                                             'tenure', 'MonthlyCharges',
                                             'TotalCharges'],
                                    transformer=SimpleImputer(add_...
                                                                    'DeviceProtection',
                                                                    'TechSupport',
                                                                    'StreamingTV',
                                                                    'StreamingMovies',
                                                                    'Contract',
                                                                    'PaymentMethod'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), model_name=C:\Users\Rania\AppData\Local\Temp\tmp6fkcbv9n\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Rania\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'SeniorCitizen',
                                             'tenure', 'MonthlyCharges',
                                             'TotalCharges'],
                                    transformer=SimpleImputer(add_...
                                                                    'DeviceProtection',
                                                                    'TechSupport',
                                                                    'StreamingTV',
                                                                    'StreamingMovies',
                                                                    'Contract',
                                                                    'PaymentMethod'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2023-12-03 14:23:28,427:INFO:Adding model into prep_pipe
2023-12-03 14:23:28,427:WARNING:Only Model saved as it was a pipeline.
2023-12-03 14:23:28,442:INFO:C:\Users\Rania\AppData\Local\Temp\tmp6fkcbv9n\Transformation Pipeline.pkl saved in current working directory
2023-12-03 14:23:28,489:INFO:Pipeline(memory=FastMemory(location=C:\Users\Rania\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'SeniorCitizen',
                                             'tenure', 'MonthlyCharges',
                                             'TotalCharges'],
                                    transformer=SimpleImputer(add_...
                                                                    'DeviceProtection',
                                                                    'TechSupport',
                                                                    'StreamingTV',
                                                                    'StreamingMovies',
                                                                    'Contract',
                                                                    'PaymentMethod'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-12-03 14:23:28,489:INFO:save_model() successfully completed......................................
2023-12-03 14:23:28,567:INFO:SubProcess save_model() end ==================================
2023-12-03 14:23:28,583:INFO:setup() successfully completed in 1.49s...............
2023-12-03 14:24:08,844:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-03 14:24:08,844:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-03 14:24:08,844:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-03 14:24:08,844:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-03 14:24:09,586:INFO:PyCaret ClassificationExperiment
2023-12-03 14:24:09,586:INFO:Logging name: churn1
2023-12-03 14:24:09,586:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-12-03 14:24:09,586:INFO:version 3.2.0
2023-12-03 14:24:09,586:INFO:Initializing setup()
2023-12-03 14:24:09,586:INFO:self.USI: 2bd7
2023-12-03 14:24:09,600:INFO:self._variable_keys: {'data', 'X', 'is_multiclass', 'fix_imbalance', 'exp_id', 'n_jobs_param', 'exp_name_log', 'log_plots_param', 'USI', 'seed', 'fold_groups_param', 'y_test', 'idx', 'logging_param', 'memory', 'X_test', 'html_param', 'pipeline', '_ml_usecase', 'y', 'gpu_n_jobs_param', '_available_plots', 'y_train', 'fold_shuffle_param', 'fold_generator', 'gpu_param', 'X_train', 'target_param'}
2023-12-03 14:24:09,600:INFO:Checking environment
2023-12-03 14:24:09,600:INFO:python_version: 3.10.9
2023-12-03 14:24:09,600:INFO:python_build: ('main', 'Mar  8 2023 10:42:25')
2023-12-03 14:24:09,600:INFO:machine: AMD64
2023-12-03 14:24:09,604:INFO:platform: Windows-10-10.0.22621-SP0
2023-12-03 14:24:09,604:INFO:Memory: svmem(total=16866873344, available=9030557696, percent=46.5, used=7836315648, free=9030557696)
2023-12-03 14:24:09,604:INFO:Physical Core: 8
2023-12-03 14:24:09,604:INFO:Logical Core: 16
2023-12-03 14:24:09,604:INFO:Checking libraries
2023-12-03 14:24:09,604:INFO:System:
2023-12-03 14:24:09,604:INFO:    python: 3.10.9 | packaged by Anaconda, Inc. | (main, Mar  8 2023, 10:42:25) [MSC v.1916 64 bit (AMD64)]
2023-12-03 14:24:09,604:INFO:executable: C:\Users\Rania\anaconda3\envs\mlops\python.exe
2023-12-03 14:24:09,604:INFO:   machine: Windows-10-10.0.22621-SP0
2023-12-03 14:24:09,604:INFO:PyCaret required dependencies:
2023-12-03 14:24:09,662:INFO:                 pip: 23.2.1
2023-12-03 14:24:09,662:INFO:          setuptools: 68.0.0
2023-12-03 14:24:09,662:INFO:             pycaret: 3.2.0
2023-12-03 14:24:09,662:INFO:             IPython: 8.18.1
2023-12-03 14:24:09,662:INFO:          ipywidgets: 7.8.1
2023-12-03 14:24:09,662:INFO:                tqdm: 4.66.1
2023-12-03 14:24:09,662:INFO:               numpy: 1.25.2
2023-12-03 14:24:09,662:INFO:              pandas: 1.5.3
2023-12-03 14:24:09,662:INFO:              jinja2: 3.1.2
2023-12-03 14:24:09,662:INFO:               scipy: 1.10.1
2023-12-03 14:24:09,662:INFO:              joblib: 1.3.2
2023-12-03 14:24:09,662:INFO:             sklearn: 1.3.1
2023-12-03 14:24:09,662:INFO:                pyod: 1.1.2
2023-12-03 14:24:09,662:INFO:            imblearn: 0.11.0
2023-12-03 14:24:09,662:INFO:   category_encoders: 2.6.2
2023-12-03 14:24:09,662:INFO:            lightgbm: 4.1.0
2023-12-03 14:24:09,662:INFO:               numba: 0.58.1
2023-12-03 14:24:09,662:INFO:            requests: 2.31.0
2023-12-03 14:24:09,662:INFO:          matplotlib: 3.8.0
2023-12-03 14:24:09,662:INFO:          scikitplot: 0.3.7
2023-12-03 14:24:09,662:INFO:         yellowbrick: 1.5
2023-12-03 14:24:09,662:INFO:              plotly: 5.17.0
2023-12-03 14:24:09,662:INFO:    plotly-resampler: Not installed
2023-12-03 14:24:09,662:INFO:             kaleido: 0.2.1
2023-12-03 14:24:09,662:INFO:           schemdraw: 0.15
2023-12-03 14:24:09,662:INFO:         statsmodels: 0.14.0
2023-12-03 14:24:09,662:INFO:              sktime: 0.21.1
2023-12-03 14:24:09,662:INFO:               tbats: 1.1.3
2023-12-03 14:24:09,662:INFO:            pmdarima: 2.0.4
2023-12-03 14:24:09,662:INFO:              psutil: 5.9.5
2023-12-03 14:24:09,662:INFO:          markupsafe: 2.1.3
2023-12-03 14:24:09,662:INFO:             pickle5: Not installed
2023-12-03 14:24:09,662:INFO:         cloudpickle: 2.2.1
2023-12-03 14:24:09,662:INFO:         deprecation: 2.1.0
2023-12-03 14:24:09,662:INFO:              xxhash: 3.4.1
2023-12-03 14:24:09,662:INFO:           wurlitzer: Not installed
2023-12-03 14:24:09,662:INFO:PyCaret optional dependencies:
2023-12-03 14:24:10,180:INFO:                shap: 0.43.0
2023-12-03 14:24:10,180:INFO:           interpret: Not installed
2023-12-03 14:24:10,180:INFO:                umap: 0.5.5
2023-12-03 14:24:10,180:INFO:     ydata_profiling: Not installed
2023-12-03 14:24:10,180:INFO:  explainerdashboard: Not installed
2023-12-03 14:24:10,180:INFO:             autoviz: Not installed
2023-12-03 14:24:10,180:INFO:           fairlearn: Not installed
2023-12-03 14:24:10,180:INFO:          deepchecks: 0.17.4
2023-12-03 14:24:10,180:INFO:             xgboost: 2.0.0
2023-12-03 14:24:10,180:INFO:            catboost: 1.2.2
2023-12-03 14:24:10,180:INFO:              kmodes: Not installed
2023-12-03 14:24:10,180:INFO:             mlxtend: Not installed
2023-12-03 14:24:10,180:INFO:       statsforecast: Not installed
2023-12-03 14:24:10,180:INFO:        tune_sklearn: Not installed
2023-12-03 14:24:10,180:INFO:                 ray: Not installed
2023-12-03 14:24:10,180:INFO:            hyperopt: Not installed
2023-12-03 14:24:10,180:INFO:              optuna: 3.4.0
2023-12-03 14:24:10,180:INFO:               skopt: Not installed
2023-12-03 14:24:10,180:INFO:              mlflow: 2.8.1
2023-12-03 14:24:10,180:INFO:              gradio: Not installed
2023-12-03 14:24:10,180:INFO:             fastapi: 0.103.2
2023-12-03 14:24:10,180:INFO:             uvicorn: 0.23.2
2023-12-03 14:24:10,180:INFO:              m2cgen: Not installed
2023-12-03 14:24:10,180:INFO:           evidently: Not installed
2023-12-03 14:24:10,180:INFO:               fugue: Not installed
2023-12-03 14:24:10,180:INFO:           streamlit: 1.27.1
2023-12-03 14:24:10,180:INFO:             prophet: Not installed
2023-12-03 14:24:10,180:INFO:None
2023-12-03 14:24:10,180:INFO:Set up data.
2023-12-03 14:24:10,195:INFO:Set up folding strategy.
2023-12-03 14:24:10,195:INFO:Set up train/test split.
2023-12-03 14:24:10,284:INFO:Set up index.
2023-12-03 14:24:10,284:INFO:Assigning column types.
2023-12-03 14:24:10,289:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-12-03 14:24:10,328:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-03 14:24:10,328:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-03 14:24:10,353:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:24:10,353:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:24:10,416:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-03 14:24:10,416:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-03 14:24:10,439:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:24:10,439:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:24:10,439:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-12-03 14:24:10,479:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-03 14:24:10,495:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:24:10,495:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:24:10,573:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-03 14:24:10,620:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:24:10,620:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:24:10,620:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-12-03 14:24:10,713:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:24:10,729:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:24:10,839:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:24:10,854:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:24:10,854:INFO:Preparing preprocessing pipeline...
2023-12-03 14:24:10,854:INFO:Set up label encoding.
2023-12-03 14:24:10,854:INFO:Set up simple imputation.
2023-12-03 14:24:10,854:INFO:Set up encoding of ordinal features.
2023-12-03 14:24:10,870:INFO:Set up encoding of categorical features.
2023-12-03 14:24:10,870:INFO:Set up column name cleaning.
2023-12-03 14:24:11,126:INFO:Finished creating preprocessing pipeline.
2023-12-03 14:24:11,188:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Rania\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'SeniorCitizen',
                                             'tenure', 'MonthlyCharges',
                                             'TotalCharges'],
                                    transformer=SimpleImputer(add_...
                                                                    'DeviceProtection',
                                                                    'TechSupport',
                                                                    'StreamingTV',
                                                                    'StreamingMovies',
                                                                    'Contract',
                                                                    'PaymentMethod'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-12-03 14:24:11,188:INFO:Creating final display dataframe.
2023-12-03 14:24:11,376:INFO:Setup _display_container:                     Description            Value
0                    Session id              123
1                        Target            Churn
2                   Target type           Binary
3                Target mapping    No: 0, Yes: 1
4           Original data shape       (7043, 22)
5        Transformed data shape       (7043, 42)
6   Transformed train set shape       (4930, 42)
7    Transformed test set shape       (2113, 42)
8               Ignore features                1
9              Ordinal features                5
10             Numeric features                5
11         Categorical features               15
12     Rows with missing values             0.2%
13                   Preprocess             True
14              Imputation type           simple
15           Numeric imputation             mean
16       Categorical imputation             mode
17     Maximum one-hot encoding               25
18              Encoding method             None
19               Fold Generator  StratifiedKFold
20                  Fold Number               10
21                     CPU Jobs               -1
22                      Use GPU            False
23               Log Experiment     MlflowLogger
24              Experiment Name           churn1
25                          USI             2bd7
2023-12-03 14:24:11,461:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:24:11,461:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:24:11,525:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:24:11,536:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:24:11,536:INFO:Logging experiment in loggers
2023-12-03 14:24:11,799:INFO:SubProcess save_model() called ==================================
2023-12-03 14:24:11,909:INFO:Initializing save_model()
2023-12-03 14:24:11,909:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\Rania\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'SeniorCitizen',
                                             'tenure', 'MonthlyCharges',
                                             'TotalCharges'],
                                    transformer=SimpleImputer(add_...
                                                                    'DeviceProtection',
                                                                    'TechSupport',
                                                                    'StreamingTV',
                                                                    'StreamingMovies',
                                                                    'Contract',
                                                                    'PaymentMethod'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), model_name=C:\Users\Rania\AppData\Local\Temp\tmpon5mlc4d\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Rania\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'SeniorCitizen',
                                             'tenure', 'MonthlyCharges',
                                             'TotalCharges'],
                                    transformer=SimpleImputer(add_...
                                                                    'DeviceProtection',
                                                                    'TechSupport',
                                                                    'StreamingTV',
                                                                    'StreamingMovies',
                                                                    'Contract',
                                                                    'PaymentMethod'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2023-12-03 14:24:11,909:INFO:Adding model into prep_pipe
2023-12-03 14:24:11,909:WARNING:Only Model saved as it was a pipeline.
2023-12-03 14:24:11,924:INFO:C:\Users\Rania\AppData\Local\Temp\tmpon5mlc4d\Transformation Pipeline.pkl saved in current working directory
2023-12-03 14:24:11,971:INFO:Pipeline(memory=FastMemory(location=C:\Users\Rania\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'SeniorCitizen',
                                             'tenure', 'MonthlyCharges',
                                             'TotalCharges'],
                                    transformer=SimpleImputer(add_...
                                                                    'DeviceProtection',
                                                                    'TechSupport',
                                                                    'StreamingTV',
                                                                    'StreamingMovies',
                                                                    'Contract',
                                                                    'PaymentMethod'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-12-03 14:24:11,971:INFO:save_model() successfully completed......................................
2023-12-03 14:24:12,065:INFO:SubProcess save_model() end ==================================
2023-12-03 14:24:12,096:INFO:setup() successfully completed in 1.95s...............
2023-12-03 14:25:24,644:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-03 14:25:24,644:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-03 14:25:24,644:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-03 14:25:24,644:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-03 14:25:25,176:INFO:PyCaret ClassificationExperiment
2023-12-03 14:25:25,176:INFO:Logging name: churn1
2023-12-03 14:25:25,176:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-12-03 14:25:25,176:INFO:version 3.2.0
2023-12-03 14:25:25,176:INFO:Initializing setup()
2023-12-03 14:25:25,176:INFO:self.USI: 1796
2023-12-03 14:25:25,176:INFO:self._variable_keys: {'gpu_param', 'X_train', 'USI', 'log_plots_param', 'X', '_ml_usecase', 'fold_groups_param', 'exp_name_log', 'is_multiclass', 'gpu_n_jobs_param', 'fix_imbalance', 'memory', 'idx', 'target_param', 'seed', 'fold_generator', '_available_plots', 'html_param', 'exp_id', 'n_jobs_param', 'X_test', 'logging_param', 'y', 'pipeline', 'y_train', 'fold_shuffle_param', 'y_test', 'data'}
2023-12-03 14:25:25,176:INFO:Checking environment
2023-12-03 14:25:25,176:INFO:python_version: 3.10.9
2023-12-03 14:25:25,176:INFO:python_build: ('main', 'Mar  8 2023 10:42:25')
2023-12-03 14:25:25,176:INFO:machine: AMD64
2023-12-03 14:25:25,189:INFO:platform: Windows-10-10.0.22621-SP0
2023-12-03 14:25:25,189:INFO:Memory: svmem(total=16866873344, available=9188999168, percent=45.5, used=7677874176, free=9188999168)
2023-12-03 14:25:25,189:INFO:Physical Core: 8
2023-12-03 14:25:25,189:INFO:Logical Core: 16
2023-12-03 14:25:25,189:INFO:Checking libraries
2023-12-03 14:25:25,189:INFO:System:
2023-12-03 14:25:25,189:INFO:    python: 3.10.9 | packaged by Anaconda, Inc. | (main, Mar  8 2023, 10:42:25) [MSC v.1916 64 bit (AMD64)]
2023-12-03 14:25:25,189:INFO:executable: C:\Users\Rania\anaconda3\envs\mlops\python.exe
2023-12-03 14:25:25,189:INFO:   machine: Windows-10-10.0.22621-SP0
2023-12-03 14:25:25,189:INFO:PyCaret required dependencies:
2023-12-03 14:25:25,239:INFO:                 pip: 23.2.1
2023-12-03 14:25:25,239:INFO:          setuptools: 68.0.0
2023-12-03 14:25:25,239:INFO:             pycaret: 3.2.0
2023-12-03 14:25:25,239:INFO:             IPython: 8.18.1
2023-12-03 14:25:25,239:INFO:          ipywidgets: 7.8.1
2023-12-03 14:25:25,239:INFO:                tqdm: 4.66.1
2023-12-03 14:25:25,239:INFO:               numpy: 1.25.2
2023-12-03 14:25:25,239:INFO:              pandas: 1.5.3
2023-12-03 14:25:25,239:INFO:              jinja2: 3.1.2
2023-12-03 14:25:25,239:INFO:               scipy: 1.10.1
2023-12-03 14:25:25,239:INFO:              joblib: 1.3.2
2023-12-03 14:25:25,239:INFO:             sklearn: 1.3.1
2023-12-03 14:25:25,239:INFO:                pyod: 1.1.2
2023-12-03 14:25:25,239:INFO:            imblearn: 0.11.0
2023-12-03 14:25:25,239:INFO:   category_encoders: 2.6.2
2023-12-03 14:25:25,239:INFO:            lightgbm: 4.1.0
2023-12-03 14:25:25,239:INFO:               numba: 0.58.1
2023-12-03 14:25:25,239:INFO:            requests: 2.31.0
2023-12-03 14:25:25,239:INFO:          matplotlib: 3.8.0
2023-12-03 14:25:25,239:INFO:          scikitplot: 0.3.7
2023-12-03 14:25:25,239:INFO:         yellowbrick: 1.5
2023-12-03 14:25:25,239:INFO:              plotly: 5.17.0
2023-12-03 14:25:25,239:INFO:    plotly-resampler: Not installed
2023-12-03 14:25:25,239:INFO:             kaleido: 0.2.1
2023-12-03 14:25:25,239:INFO:           schemdraw: 0.15
2023-12-03 14:25:25,239:INFO:         statsmodels: 0.14.0
2023-12-03 14:25:25,239:INFO:              sktime: 0.21.1
2023-12-03 14:25:25,239:INFO:               tbats: 1.1.3
2023-12-03 14:25:25,239:INFO:            pmdarima: 2.0.4
2023-12-03 14:25:25,239:INFO:              psutil: 5.9.5
2023-12-03 14:25:25,239:INFO:          markupsafe: 2.1.3
2023-12-03 14:25:25,239:INFO:             pickle5: Not installed
2023-12-03 14:25:25,239:INFO:         cloudpickle: 2.2.1
2023-12-03 14:25:25,239:INFO:         deprecation: 2.1.0
2023-12-03 14:25:25,239:INFO:              xxhash: 3.4.1
2023-12-03 14:25:25,239:INFO:           wurlitzer: Not installed
2023-12-03 14:25:25,239:INFO:PyCaret optional dependencies:
2023-12-03 14:25:25,628:INFO:                shap: 0.43.0
2023-12-03 14:25:25,640:INFO:           interpret: Not installed
2023-12-03 14:25:25,640:INFO:                umap: 0.5.5
2023-12-03 14:25:25,640:INFO:     ydata_profiling: Not installed
2023-12-03 14:25:25,640:INFO:  explainerdashboard: Not installed
2023-12-03 14:25:25,640:INFO:             autoviz: Not installed
2023-12-03 14:25:25,640:INFO:           fairlearn: Not installed
2023-12-03 14:25:25,640:INFO:          deepchecks: 0.17.4
2023-12-03 14:25:25,640:INFO:             xgboost: 2.0.0
2023-12-03 14:25:25,640:INFO:            catboost: 1.2.2
2023-12-03 14:25:25,640:INFO:              kmodes: Not installed
2023-12-03 14:25:25,640:INFO:             mlxtend: Not installed
2023-12-03 14:25:25,640:INFO:       statsforecast: Not installed
2023-12-03 14:25:25,640:INFO:        tune_sklearn: Not installed
2023-12-03 14:25:25,640:INFO:                 ray: Not installed
2023-12-03 14:25:25,640:INFO:            hyperopt: Not installed
2023-12-03 14:25:25,640:INFO:              optuna: 3.4.0
2023-12-03 14:25:25,640:INFO:               skopt: Not installed
2023-12-03 14:25:25,640:INFO:              mlflow: 2.8.1
2023-12-03 14:25:25,640:INFO:              gradio: Not installed
2023-12-03 14:25:25,640:INFO:             fastapi: 0.103.2
2023-12-03 14:25:25,640:INFO:             uvicorn: 0.23.2
2023-12-03 14:25:25,640:INFO:              m2cgen: Not installed
2023-12-03 14:25:25,640:INFO:           evidently: Not installed
2023-12-03 14:25:25,640:INFO:               fugue: Not installed
2023-12-03 14:25:25,640:INFO:           streamlit: 1.27.1
2023-12-03 14:25:25,640:INFO:             prophet: Not installed
2023-12-03 14:25:25,640:INFO:None
2023-12-03 14:25:25,640:INFO:Set up data.
2023-12-03 14:25:25,670:INFO:Set up folding strategy.
2023-12-03 14:25:25,670:INFO:Set up train/test split.
2023-12-03 14:25:25,749:INFO:Set up index.
2023-12-03 14:25:25,749:INFO:Assigning column types.
2023-12-03 14:25:25,749:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-12-03 14:25:25,795:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-03 14:25:25,812:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-03 14:25:25,835:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:25:25,835:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:25:25,897:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-03 14:25:25,897:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-03 14:25:25,913:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:25:25,913:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:25:25,913:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-12-03 14:25:25,960:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-03 14:25:25,975:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:25:25,975:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:25:26,022:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-03 14:25:26,038:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:25:26,038:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:25:26,038:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-12-03 14:25:26,100:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:25:26,100:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:25:26,163:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:25:26,163:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:25:26,163:INFO:Preparing preprocessing pipeline...
2023-12-03 14:25:26,163:INFO:Set up label encoding.
2023-12-03 14:25:26,163:INFO:Set up simple imputation.
2023-12-03 14:25:26,163:INFO:Set up encoding of ordinal features.
2023-12-03 14:25:26,178:INFO:Set up encoding of categorical features.
2023-12-03 14:25:26,178:INFO:Set up column name cleaning.
2023-12-03 14:25:26,375:INFO:Finished creating preprocessing pipeline.
2023-12-03 14:25:26,453:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Rania\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'SeniorCitizen',
                                             'tenure', 'MonthlyCharges',
                                             'TotalCharges'],
                                    transformer=SimpleImputer(add_...
                                                                    'DeviceProtection',
                                                                    'TechSupport',
                                                                    'StreamingTV',
                                                                    'StreamingMovies',
                                                                    'Contract',
                                                                    'PaymentMethod'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-12-03 14:25:26,453:INFO:Creating final display dataframe.
2023-12-03 14:25:26,579:INFO:Setup _display_container:                     Description            Value
0                    Session id              123
1                        Target            Churn
2                   Target type           Binary
3                Target mapping    No: 0, Yes: 1
4           Original data shape       (7043, 22)
5        Transformed data shape       (7043, 42)
6   Transformed train set shape       (4930, 42)
7    Transformed test set shape       (2113, 42)
8               Ignore features                1
9              Ordinal features                5
10             Numeric features                5
11         Categorical features               15
12     Rows with missing values             0.2%
13                   Preprocess             True
14              Imputation type           simple
15           Numeric imputation             mean
16       Categorical imputation             mode
17     Maximum one-hot encoding               25
18              Encoding method             None
19               Fold Generator  StratifiedKFold
20                  Fold Number               10
21                     CPU Jobs               -1
22                      Use GPU            False
23               Log Experiment     MlflowLogger
24              Experiment Name           churn1
25                          USI             1796
2023-12-03 14:25:26,683:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:25:26,683:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:25:26,755:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:25:26,763:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:25:26,763:INFO:Logging experiment in loggers
2023-12-03 14:25:27,041:INFO:SubProcess save_model() called ==================================
2023-12-03 14:25:27,235:INFO:Initializing save_model()
2023-12-03 14:25:27,235:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\Rania\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'SeniorCitizen',
                                             'tenure', 'MonthlyCharges',
                                             'TotalCharges'],
                                    transformer=SimpleImputer(add_...
                                                                    'DeviceProtection',
                                                                    'TechSupport',
                                                                    'StreamingTV',
                                                                    'StreamingMovies',
                                                                    'Contract',
                                                                    'PaymentMethod'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), model_name=C:\Users\Rania\AppData\Local\Temp\tmpgo3agwmt\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Rania\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'SeniorCitizen',
                                             'tenure', 'MonthlyCharges',
                                             'TotalCharges'],
                                    transformer=SimpleImputer(add_...
                                                                    'DeviceProtection',
                                                                    'TechSupport',
                                                                    'StreamingTV',
                                                                    'StreamingMovies',
                                                                    'Contract',
                                                                    'PaymentMethod'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2023-12-03 14:25:27,235:INFO:Adding model into prep_pipe
2023-12-03 14:25:27,235:WARNING:Only Model saved as it was a pipeline.
2023-12-03 14:25:27,250:INFO:C:\Users\Rania\AppData\Local\Temp\tmpgo3agwmt\Transformation Pipeline.pkl saved in current working directory
2023-12-03 14:25:27,344:INFO:Pipeline(memory=FastMemory(location=C:\Users\Rania\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'SeniorCitizen',
                                             'tenure', 'MonthlyCharges',
                                             'TotalCharges'],
                                    transformer=SimpleImputer(add_...
                                                                    'DeviceProtection',
                                                                    'TechSupport',
                                                                    'StreamingTV',
                                                                    'StreamingMovies',
                                                                    'Contract',
                                                                    'PaymentMethod'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-12-03 14:25:27,344:INFO:save_model() successfully completed......................................
2023-12-03 14:25:27,414:INFO:SubProcess save_model() end ==================================
2023-12-03 14:25:27,436:INFO:setup() successfully completed in 1.6s...............
2023-12-03 14:25:27,436:INFO:Initializing compare_models()
2023-12-03 14:25:27,436:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B70C205840>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000002B70C205840>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-12-03 14:25:27,436:INFO:Checking exceptions
2023-12-03 14:25:27,436:INFO:Preparing display monitor
2023-12-03 14:25:27,452:INFO:Initializing Logistic Regression
2023-12-03 14:25:27,452:INFO:Total runtime is 0.0 minutes
2023-12-03 14:25:27,452:INFO:SubProcess create_model() called ==================================
2023-12-03 14:25:27,452:INFO:Initializing create_model()
2023-12-03 14:25:27,452:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B70C205840>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B70C7C3B20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-03 14:25:27,452:INFO:Checking exceptions
2023-12-03 14:25:27,452:INFO:Importing libraries
2023-12-03 14:25:27,452:INFO:Copying training dataset
2023-12-03 14:25:27,452:INFO:Defining folds
2023-12-03 14:25:27,452:INFO:Declaring metric variables
2023-12-03 14:25:27,452:INFO:Importing untrained model
2023-12-03 14:25:27,452:INFO:Logistic Regression Imported successfully
2023-12-03 14:25:27,452:INFO:Starting cross validation
2023-12-03 14:25:27,452:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-03 14:25:33,904:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:33,920:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:33,920:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:33,935:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:33,935:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:33,935:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:33,998:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:33,998:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:33,998:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:33,998:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:33,998:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:34,014:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:34,014:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:34,014:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:34,014:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:34,029:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:34,029:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:34,029:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:34,045:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:34,045:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:34,045:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:34,045:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:34,045:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:34,045:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:34,045:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:34,060:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:34,060:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:34,092:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:34,092:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:34,107:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:34,123:INFO:Calculating mean and std
2023-12-03 14:25:34,123:INFO:Creating metrics dataframe
2023-12-03 14:25:34,123:INFO:Uploading results into container
2023-12-03 14:25:34,123:INFO:Uploading model into container now
2023-12-03 14:25:34,123:INFO:_master_model_container: 1
2023-12-03 14:25:34,123:INFO:_display_container: 2
2023-12-03 14:25:34,123:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-12-03 14:25:34,123:INFO:create_model() successfully completed......................................
2023-12-03 14:25:34,203:INFO:SubProcess create_model() end ==================================
2023-12-03 14:25:34,203:INFO:Creating metrics dataframe
2023-12-03 14:25:34,203:INFO:Initializing K Neighbors Classifier
2023-12-03 14:25:34,203:INFO:Total runtime is 0.11251486539840698 minutes
2023-12-03 14:25:34,203:INFO:SubProcess create_model() called ==================================
2023-12-03 14:25:34,203:INFO:Initializing create_model()
2023-12-03 14:25:34,203:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B70C205840>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B70C7C3B20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-03 14:25:34,203:INFO:Checking exceptions
2023-12-03 14:25:34,203:INFO:Importing libraries
2023-12-03 14:25:34,203:INFO:Copying training dataset
2023-12-03 14:25:34,218:INFO:Defining folds
2023-12-03 14:25:34,218:INFO:Declaring metric variables
2023-12-03 14:25:34,218:INFO:Importing untrained model
2023-12-03 14:25:34,218:INFO:K Neighbors Classifier Imported successfully
2023-12-03 14:25:34,218:INFO:Starting cross validation
2023-12-03 14:25:34,218:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-03 14:25:35,169:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:35,189:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:35,189:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:35,189:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:35,189:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:35,204:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:35,204:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:35,204:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:35,204:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:35,204:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:39,047:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:39,047:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:39,065:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:39,102:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:39,102:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:39,122:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:39,122:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:39,122:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:39,134:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:39,134:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:39,134:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:39,134:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:39,154:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:39,162:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:39,170:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:39,170:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:39,178:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:39,178:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:39,194:INFO:Calculating mean and std
2023-12-03 14:25:39,194:INFO:Creating metrics dataframe
2023-12-03 14:25:39,202:INFO:Uploading results into container
2023-12-03 14:25:39,202:INFO:Uploading model into container now
2023-12-03 14:25:39,202:INFO:_master_model_container: 2
2023-12-03 14:25:39,202:INFO:_display_container: 2
2023-12-03 14:25:39,202:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-12-03 14:25:39,202:INFO:create_model() successfully completed......................................
2023-12-03 14:25:39,290:INFO:SubProcess create_model() end ==================================
2023-12-03 14:25:39,290:INFO:Creating metrics dataframe
2023-12-03 14:25:39,290:INFO:Initializing Naive Bayes
2023-12-03 14:25:39,290:INFO:Total runtime is 0.1973082145055135 minutes
2023-12-03 14:25:39,290:INFO:SubProcess create_model() called ==================================
2023-12-03 14:25:39,290:INFO:Initializing create_model()
2023-12-03 14:25:39,290:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B70C205840>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B70C7C3B20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-03 14:25:39,290:INFO:Checking exceptions
2023-12-03 14:25:39,290:INFO:Importing libraries
2023-12-03 14:25:39,290:INFO:Copying training dataset
2023-12-03 14:25:39,306:INFO:Defining folds
2023-12-03 14:25:39,306:INFO:Declaring metric variables
2023-12-03 14:25:39,306:INFO:Importing untrained model
2023-12-03 14:25:39,306:INFO:Naive Bayes Imported successfully
2023-12-03 14:25:39,306:INFO:Starting cross validation
2023-12-03 14:25:39,306:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-03 14:25:39,837:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:39,850:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:39,850:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:39,859:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:39,866:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:39,874:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:39,908:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:39,917:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:39,927:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:39,929:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:39,935:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:39,941:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:39,969:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:39,976:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:39,976:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:39,983:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:39,983:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:39,991:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:39,997:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:39,997:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:39,997:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:39,999:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:40,003:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:40,004:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:40,007:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:40,011:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:40,011:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:40,011:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:40,016:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:40,018:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:40,032:INFO:Calculating mean and std
2023-12-03 14:25:40,032:INFO:Creating metrics dataframe
2023-12-03 14:25:40,032:INFO:Uploading results into container
2023-12-03 14:25:40,032:INFO:Uploading model into container now
2023-12-03 14:25:40,032:INFO:_master_model_container: 3
2023-12-03 14:25:40,032:INFO:_display_container: 2
2023-12-03 14:25:40,032:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-12-03 14:25:40,032:INFO:create_model() successfully completed......................................
2023-12-03 14:25:40,108:INFO:SubProcess create_model() end ==================================
2023-12-03 14:25:40,108:INFO:Creating metrics dataframe
2023-12-03 14:25:40,115:INFO:Initializing Decision Tree Classifier
2023-12-03 14:25:40,115:INFO:Total runtime is 0.2110533833503723 minutes
2023-12-03 14:25:40,115:INFO:SubProcess create_model() called ==================================
2023-12-03 14:25:40,121:INFO:Initializing create_model()
2023-12-03 14:25:40,121:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B70C205840>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B70C7C3B20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-03 14:25:40,122:INFO:Checking exceptions
2023-12-03 14:25:40,122:INFO:Importing libraries
2023-12-03 14:25:40,122:INFO:Copying training dataset
2023-12-03 14:25:40,128:INFO:Defining folds
2023-12-03 14:25:40,128:INFO:Declaring metric variables
2023-12-03 14:25:40,128:INFO:Importing untrained model
2023-12-03 14:25:40,128:INFO:Decision Tree Classifier Imported successfully
2023-12-03 14:25:40,128:INFO:Starting cross validation
2023-12-03 14:25:40,130:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-03 14:25:40,841:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:40,851:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:40,858:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:40,864:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:40,875:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:40,883:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:40,887:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:40,894:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:40,900:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:40,900:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:40,900:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:40,909:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:40,909:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:40,913:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:40,917:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:40,919:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:40,919:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:40,925:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:40,925:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:40,925:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:40,941:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:40,941:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:40,941:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:40,950:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:40,950:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:40,950:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:40,957:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:40,957:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:40,957:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:40,965:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:40,973:INFO:Calculating mean and std
2023-12-03 14:25:40,974:INFO:Creating metrics dataframe
2023-12-03 14:25:40,977:INFO:Uploading results into container
2023-12-03 14:25:40,977:INFO:Uploading model into container now
2023-12-03 14:25:40,981:INFO:_master_model_container: 4
2023-12-03 14:25:40,981:INFO:_display_container: 2
2023-12-03 14:25:40,981:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best')
2023-12-03 14:25:40,981:INFO:create_model() successfully completed......................................
2023-12-03 14:25:41,079:INFO:SubProcess create_model() end ==================================
2023-12-03 14:25:41,079:INFO:Creating metrics dataframe
2023-12-03 14:25:41,088:INFO:Initializing SVM - Linear Kernel
2023-12-03 14:25:41,088:INFO:Total runtime is 0.2272798418998718 minutes
2023-12-03 14:25:41,088:INFO:SubProcess create_model() called ==================================
2023-12-03 14:25:41,088:INFO:Initializing create_model()
2023-12-03 14:25:41,088:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B70C205840>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B70C7C3B20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-03 14:25:41,088:INFO:Checking exceptions
2023-12-03 14:25:41,088:INFO:Importing libraries
2023-12-03 14:25:41,088:INFO:Copying training dataset
2023-12-03 14:25:41,095:INFO:Defining folds
2023-12-03 14:25:41,095:INFO:Declaring metric variables
2023-12-03 14:25:41,095:INFO:Importing untrained model
2023-12-03 14:25:41,095:INFO:SVM - Linear Kernel Imported successfully
2023-12-03 14:25:41,095:INFO:Starting cross validation
2023-12-03 14:25:41,095:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-03 14:25:41,769:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-03 14:25:41,769:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:41,785:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:41,785:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:41,785:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-03 14:25:41,800:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:41,800:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:41,800:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:41,800:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-03 14:25:41,817:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:41,817:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-03 14:25:41,817:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:41,817:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:41,817:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-03 14:25:41,832:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:41,832:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:41,832:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:41,832:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:41,832:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:41,847:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-03 14:25:41,847:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:41,847:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:41,847:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-03 14:25:41,847:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:41,863:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:41,863:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:41,863:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:41,863:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-03 14:25:41,879:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:41,879:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-03 14:25:41,879:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:41,879:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:41,879:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:41,879:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:41,879:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-03 14:25:41,879:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:41,879:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:41,879:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:41,894:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:41,894:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:41,910:INFO:Calculating mean and std
2023-12-03 14:25:41,910:INFO:Creating metrics dataframe
2023-12-03 14:25:41,910:INFO:Uploading results into container
2023-12-03 14:25:41,910:INFO:Uploading model into container now
2023-12-03 14:25:41,910:INFO:_master_model_container: 5
2023-12-03 14:25:41,910:INFO:_display_container: 2
2023-12-03 14:25:41,910:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-12-03 14:25:41,910:INFO:create_model() successfully completed......................................
2023-12-03 14:25:41,993:INFO:SubProcess create_model() end ==================================
2023-12-03 14:25:42,004:INFO:Creating metrics dataframe
2023-12-03 14:25:42,004:INFO:Initializing Ridge Classifier
2023-12-03 14:25:42,004:INFO:Total runtime is 0.2425459265708923 minutes
2023-12-03 14:25:42,004:INFO:SubProcess create_model() called ==================================
2023-12-03 14:25:42,004:INFO:Initializing create_model()
2023-12-03 14:25:42,004:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B70C205840>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B70C7C3B20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-03 14:25:42,004:INFO:Checking exceptions
2023-12-03 14:25:42,004:INFO:Importing libraries
2023-12-03 14:25:42,004:INFO:Copying training dataset
2023-12-03 14:25:42,004:INFO:Defining folds
2023-12-03 14:25:42,004:INFO:Declaring metric variables
2023-12-03 14:25:42,004:INFO:Importing untrained model
2023-12-03 14:25:42,020:INFO:Ridge Classifier Imported successfully
2023-12-03 14:25:42,020:INFO:Starting cross validation
2023-12-03 14:25:42,020:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-03 14:25:42,608:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-03 14:25:42,608:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:42,608:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:42,624:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-03 14:25:42,624:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:42,624:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:42,624:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-03 14:25:42,639:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-03 14:25:42,639:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:42,639:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:42,639:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-03 14:25:42,639:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:42,639:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:42,639:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:42,639:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-03 14:25:42,639:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:42,639:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:42,639:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:42,655:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:42,655:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:42,655:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:42,655:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:42,655:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:42,655:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:42,655:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-03 14:25:42,655:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-03 14:25:42,670:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:42,670:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:42,670:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:42,670:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:42,670:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:42,670:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-03 14:25:42,686:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:42,686:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:42,686:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:42,686:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:42,686:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-03 14:25:42,686:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:42,702:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:42,702:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:42,717:INFO:Calculating mean and std
2023-12-03 14:25:42,717:INFO:Creating metrics dataframe
2023-12-03 14:25:42,717:INFO:Uploading results into container
2023-12-03 14:25:42,717:INFO:Uploading model into container now
2023-12-03 14:25:42,717:INFO:_master_model_container: 6
2023-12-03 14:25:42,717:INFO:_display_container: 2
2023-12-03 14:25:42,717:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2023-12-03 14:25:42,717:INFO:create_model() successfully completed......................................
2023-12-03 14:25:42,794:INFO:SubProcess create_model() end ==================================
2023-12-03 14:25:42,794:INFO:Creating metrics dataframe
2023-12-03 14:25:42,805:INFO:Initializing Random Forest Classifier
2023-12-03 14:25:42,805:INFO:Total runtime is 0.25588374535242714 minutes
2023-12-03 14:25:42,805:INFO:SubProcess create_model() called ==================================
2023-12-03 14:25:42,805:INFO:Initializing create_model()
2023-12-03 14:25:42,805:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B70C205840>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B70C7C3B20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-03 14:25:42,805:INFO:Checking exceptions
2023-12-03 14:25:42,805:INFO:Importing libraries
2023-12-03 14:25:42,805:INFO:Copying training dataset
2023-12-03 14:25:42,805:INFO:Defining folds
2023-12-03 14:25:42,805:INFO:Declaring metric variables
2023-12-03 14:25:42,805:INFO:Importing untrained model
2023-12-03 14:25:42,805:INFO:Random Forest Classifier Imported successfully
2023-12-03 14:25:42,805:INFO:Starting cross validation
2023-12-03 14:25:42,805:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-03 14:25:44,220:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:44,237:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:44,252:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:44,252:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:44,267:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:44,267:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:44,283:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:44,283:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:44,299:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:44,419:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:44,444:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:44,450:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:44,497:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:44,500:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:44,515:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:44,515:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:44,530:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:44,530:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:44,545:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:44,561:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:44,561:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:44,670:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:44,670:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:44,670:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:44,670:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:44,670:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:44,686:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:44,686:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:44,686:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:44,686:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:44,718:INFO:Calculating mean and std
2023-12-03 14:25:44,718:INFO:Creating metrics dataframe
2023-12-03 14:25:44,718:INFO:Uploading results into container
2023-12-03 14:25:44,718:INFO:Uploading model into container now
2023-12-03 14:25:44,718:INFO:_master_model_container: 7
2023-12-03 14:25:44,718:INFO:_display_container: 2
2023-12-03 14:25:44,718:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2023-12-03 14:25:44,718:INFO:create_model() successfully completed......................................
2023-12-03 14:25:44,812:INFO:SubProcess create_model() end ==================================
2023-12-03 14:25:44,812:INFO:Creating metrics dataframe
2023-12-03 14:25:44,812:INFO:Initializing Quadratic Discriminant Analysis
2023-12-03 14:25:44,812:INFO:Total runtime is 0.28933254480361936 minutes
2023-12-03 14:25:44,812:INFO:SubProcess create_model() called ==================================
2023-12-03 14:25:44,812:INFO:Initializing create_model()
2023-12-03 14:25:44,812:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B70C205840>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B70C7C3B20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-03 14:25:44,812:INFO:Checking exceptions
2023-12-03 14:25:44,812:INFO:Importing libraries
2023-12-03 14:25:44,812:INFO:Copying training dataset
2023-12-03 14:25:44,812:INFO:Defining folds
2023-12-03 14:25:44,812:INFO:Declaring metric variables
2023-12-03 14:25:44,827:INFO:Importing untrained model
2023-12-03 14:25:44,827:INFO:Quadratic Discriminant Analysis Imported successfully
2023-12-03 14:25:44,827:INFO:Starting cross validation
2023-12-03 14:25:44,827:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-03 14:25:45,352:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-03 14:25:45,375:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-03 14:25:45,391:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-03 14:25:45,397:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-03 14:25:45,397:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-03 14:25:45,407:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-03 14:25:45,407:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-03 14:25:45,407:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-03 14:25:45,425:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-03 14:25:45,425:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-03 14:25:45,478:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:45,494:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:45,509:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:45,525:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:45,525:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:45,525:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:45,540:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:45,540:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:45,540:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:45,540:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:45,540:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:45,556:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:45,556:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:45,556:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:45,556:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:45,556:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:45,556:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:45,556:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:45,572:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:45,572:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:45,572:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:45,572:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:45,572:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:45,572:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:45,572:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:45,572:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:45,572:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:45,572:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:45,572:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:45,587:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:45,603:INFO:Calculating mean and std
2023-12-03 14:25:45,603:INFO:Creating metrics dataframe
2023-12-03 14:25:45,603:INFO:Uploading results into container
2023-12-03 14:25:45,603:INFO:Uploading model into container now
2023-12-03 14:25:45,603:INFO:_master_model_container: 8
2023-12-03 14:25:45,603:INFO:_display_container: 2
2023-12-03 14:25:45,603:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-12-03 14:25:45,603:INFO:create_model() successfully completed......................................
2023-12-03 14:25:45,697:INFO:SubProcess create_model() end ==================================
2023-12-03 14:25:45,697:INFO:Creating metrics dataframe
2023-12-03 14:25:45,697:INFO:Initializing Ada Boost Classifier
2023-12-03 14:25:45,697:INFO:Total runtime is 0.3040938218434652 minutes
2023-12-03 14:25:45,697:INFO:SubProcess create_model() called ==================================
2023-12-03 14:25:45,697:INFO:Initializing create_model()
2023-12-03 14:25:45,697:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B70C205840>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B70C7C3B20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-03 14:25:45,697:INFO:Checking exceptions
2023-12-03 14:25:45,697:INFO:Importing libraries
2023-12-03 14:25:45,697:INFO:Copying training dataset
2023-12-03 14:25:45,713:INFO:Defining folds
2023-12-03 14:25:45,713:INFO:Declaring metric variables
2023-12-03 14:25:45,713:INFO:Importing untrained model
2023-12-03 14:25:45,713:INFO:Ada Boost Classifier Imported successfully
2023-12-03 14:25:45,713:INFO:Starting cross validation
2023-12-03 14:25:45,713:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-03 14:25:46,979:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:46,979:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:46,979:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:46,995:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:46,995:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:46,995:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:46,995:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:47,011:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:47,017:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:47,018:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:47,018:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:47,024:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:47,024:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:47,024:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:47,024:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:47,034:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:47,034:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:47,034:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:47,034:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:47,034:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:47,050:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:47,050:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:47,050:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:47,050:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:47,050:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:47,050:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:47,066:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:47,066:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:47,066:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:47,066:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:47,097:INFO:Calculating mean and std
2023-12-03 14:25:47,097:INFO:Creating metrics dataframe
2023-12-03 14:25:47,097:INFO:Uploading results into container
2023-12-03 14:25:47,097:INFO:Uploading model into container now
2023-12-03 14:25:47,097:INFO:_master_model_container: 9
2023-12-03 14:25:47,097:INFO:_display_container: 2
2023-12-03 14:25:47,097:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=123)
2023-12-03 14:25:47,097:INFO:create_model() successfully completed......................................
2023-12-03 14:25:47,184:INFO:SubProcess create_model() end ==================================
2023-12-03 14:25:47,184:INFO:Creating metrics dataframe
2023-12-03 14:25:47,184:INFO:Initializing Gradient Boosting Classifier
2023-12-03 14:25:47,184:INFO:Total runtime is 0.32887614568074547 minutes
2023-12-03 14:25:47,184:INFO:SubProcess create_model() called ==================================
2023-12-03 14:25:47,184:INFO:Initializing create_model()
2023-12-03 14:25:47,184:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B70C205840>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B70C7C3B20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-03 14:25:47,184:INFO:Checking exceptions
2023-12-03 14:25:47,184:INFO:Importing libraries
2023-12-03 14:25:47,184:INFO:Copying training dataset
2023-12-03 14:25:47,200:INFO:Defining folds
2023-12-03 14:25:47,200:INFO:Declaring metric variables
2023-12-03 14:25:47,200:INFO:Importing untrained model
2023-12-03 14:25:47,200:INFO:Gradient Boosting Classifier Imported successfully
2023-12-03 14:25:47,200:INFO:Starting cross validation
2023-12-03 14:25:47,200:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-03 14:25:49,574:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:49,574:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:49,589:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:49,589:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:49,589:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:49,605:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:49,605:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:49,605:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:49,605:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:49,621:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:49,621:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:49,621:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:49,636:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:49,636:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:49,636:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:49,652:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:49,669:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:49,669:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:49,676:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:49,676:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:49,681:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:49,681:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:49,681:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:49,692:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:49,692:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:49,692:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:49,692:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:49,707:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:49,707:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:49,707:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:49,739:INFO:Calculating mean and std
2023-12-03 14:25:49,739:INFO:Creating metrics dataframe
2023-12-03 14:25:49,739:INFO:Uploading results into container
2023-12-03 14:25:49,739:INFO:Uploading model into container now
2023-12-03 14:25:49,739:INFO:_master_model_container: 10
2023-12-03 14:25:49,739:INFO:_display_container: 2
2023-12-03 14:25:49,739:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-12-03 14:25:49,739:INFO:create_model() successfully completed......................................
2023-12-03 14:25:49,818:INFO:SubProcess create_model() end ==================================
2023-12-03 14:25:49,818:INFO:Creating metrics dataframe
2023-12-03 14:25:49,818:INFO:Initializing Linear Discriminant Analysis
2023-12-03 14:25:49,818:INFO:Total runtime is 0.3727675278981527 minutes
2023-12-03 14:25:49,818:INFO:SubProcess create_model() called ==================================
2023-12-03 14:25:49,818:INFO:Initializing create_model()
2023-12-03 14:25:49,818:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B70C205840>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B70C7C3B20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-03 14:25:49,818:INFO:Checking exceptions
2023-12-03 14:25:49,818:INFO:Importing libraries
2023-12-03 14:25:49,818:INFO:Copying training dataset
2023-12-03 14:25:49,818:INFO:Defining folds
2023-12-03 14:25:49,818:INFO:Declaring metric variables
2023-12-03 14:25:49,818:INFO:Importing untrained model
2023-12-03 14:25:49,818:INFO:Linear Discriminant Analysis Imported successfully
2023-12-03 14:25:49,818:INFO:Starting cross validation
2023-12-03 14:25:49,818:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-03 14:25:50,421:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:50,421:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:50,437:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:50,452:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:50,452:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:50,468:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:50,468:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:50,468:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:50,468:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:50,468:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:50,468:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:50,484:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:50,484:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:50,484:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:50,484:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:50,484:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:50,484:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:50,484:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:50,531:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:50,531:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:50,531:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:50,531:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:50,531:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:50,531:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:50,531:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:50,546:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:50,546:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:50,546:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:50,546:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:50,546:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:50,562:INFO:Calculating mean and std
2023-12-03 14:25:50,562:INFO:Creating metrics dataframe
2023-12-03 14:25:50,562:INFO:Uploading results into container
2023-12-03 14:25:50,562:INFO:Uploading model into container now
2023-12-03 14:25:50,562:INFO:_master_model_container: 11
2023-12-03 14:25:50,562:INFO:_display_container: 2
2023-12-03 14:25:50,562:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-12-03 14:25:50,562:INFO:create_model() successfully completed......................................
2023-12-03 14:25:50,634:INFO:SubProcess create_model() end ==================================
2023-12-03 14:25:50,634:INFO:Creating metrics dataframe
2023-12-03 14:25:50,650:INFO:Initializing Extra Trees Classifier
2023-12-03 14:25:50,650:INFO:Total runtime is 0.38663400411605836 minutes
2023-12-03 14:25:50,650:INFO:SubProcess create_model() called ==================================
2023-12-03 14:25:50,650:INFO:Initializing create_model()
2023-12-03 14:25:50,650:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B70C205840>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B70C7C3B20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-03 14:25:50,650:INFO:Checking exceptions
2023-12-03 14:25:50,650:INFO:Importing libraries
2023-12-03 14:25:50,650:INFO:Copying training dataset
2023-12-03 14:25:50,650:INFO:Defining folds
2023-12-03 14:25:50,650:INFO:Declaring metric variables
2023-12-03 14:25:50,650:INFO:Importing untrained model
2023-12-03 14:25:50,650:INFO:Extra Trees Classifier Imported successfully
2023-12-03 14:25:50,650:INFO:Starting cross validation
2023-12-03 14:25:50,650:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-03 14:25:52,123:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:52,123:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:52,123:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:52,138:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:52,138:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:52,138:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:52,138:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:52,138:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:52,154:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:52,154:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:52,154:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:52,154:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:52,154:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:52,154:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:52,154:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:52,154:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:52,173:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:52,182:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:52,217:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:52,217:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:52,217:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:52,233:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:52,233:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:52,233:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:52,233:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:52,233:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:52,233:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:52,299:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:52,310:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:52,314:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:52,338:INFO:Calculating mean and std
2023-12-03 14:25:52,338:INFO:Creating metrics dataframe
2023-12-03 14:25:52,338:INFO:Uploading results into container
2023-12-03 14:25:52,338:INFO:Uploading model into container now
2023-12-03 14:25:52,338:INFO:_master_model_container: 12
2023-12-03 14:25:52,338:INFO:_display_container: 2
2023-12-03 14:25:52,343:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=123, verbose=0, warm_start=False)
2023-12-03 14:25:52,343:INFO:create_model() successfully completed......................................
2023-12-03 14:25:52,419:INFO:SubProcess create_model() end ==================================
2023-12-03 14:25:52,419:INFO:Creating metrics dataframe
2023-12-03 14:25:52,419:INFO:Initializing Extreme Gradient Boosting
2023-12-03 14:25:52,419:INFO:Total runtime is 0.4161295811335246 minutes
2023-12-03 14:25:52,419:INFO:SubProcess create_model() called ==================================
2023-12-03 14:25:52,419:INFO:Initializing create_model()
2023-12-03 14:25:52,419:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B70C205840>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B70C7C3B20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-03 14:25:52,419:INFO:Checking exceptions
2023-12-03 14:25:52,419:INFO:Importing libraries
2023-12-03 14:25:52,419:INFO:Copying training dataset
2023-12-03 14:25:52,435:INFO:Defining folds
2023-12-03 14:25:52,435:INFO:Declaring metric variables
2023-12-03 14:25:52,435:INFO:Importing untrained model
2023-12-03 14:25:52,435:INFO:Extreme Gradient Boosting Imported successfully
2023-12-03 14:25:52,435:INFO:Starting cross validation
2023-12-03 14:25:52,435:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-03 14:25:53,958:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:53,963:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:53,968:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:53,980:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:53,989:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:53,993:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:53,998:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:54,004:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:54,004:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:54,004:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:54,004:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:54,014:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:54,014:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:54,021:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:54,021:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:54,021:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:54,028:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:54,028:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:54,028:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:54,028:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:54,028:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:54,038:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:54,038:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:54,045:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:54,045:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:54,055:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:54,055:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:54,061:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:54,068:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:54,084:INFO:Calculating mean and std
2023-12-03 14:25:54,085:INFO:Creating metrics dataframe
2023-12-03 14:25:54,090:INFO:Uploading results into container
2023-12-03 14:25:54,090:INFO:Uploading model into container now
2023-12-03 14:25:54,091:INFO:_master_model_container: 13
2023-12-03 14:25:54,091:INFO:_display_container: 2
2023-12-03 14:25:54,092:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2023-12-03 14:25:54,092:INFO:create_model() successfully completed......................................
2023-12-03 14:25:54,198:INFO:SubProcess create_model() end ==================================
2023-12-03 14:25:54,198:INFO:Creating metrics dataframe
2023-12-03 14:25:54,198:INFO:Initializing Light Gradient Boosting Machine
2023-12-03 14:25:54,198:INFO:Total runtime is 0.4457711299260458 minutes
2023-12-03 14:25:54,198:INFO:SubProcess create_model() called ==================================
2023-12-03 14:25:54,198:INFO:Initializing create_model()
2023-12-03 14:25:54,198:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B70C205840>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B70C7C3B20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-03 14:25:54,198:INFO:Checking exceptions
2023-12-03 14:25:54,198:INFO:Importing libraries
2023-12-03 14:25:54,198:INFO:Copying training dataset
2023-12-03 14:25:54,214:INFO:Defining folds
2023-12-03 14:25:54,214:INFO:Declaring metric variables
2023-12-03 14:25:54,214:INFO:Importing untrained model
2023-12-03 14:25:54,214:INFO:Light Gradient Boosting Machine Imported successfully
2023-12-03 14:25:54,214:INFO:Starting cross validation
2023-12-03 14:25:54,214:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-03 14:25:56,999:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:57,000:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:57,009:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:57,009:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:57,013:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:57,013:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:57,013:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:57,028:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:57,278:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:57,294:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:57,294:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:57,309:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:57,309:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:57,309:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:57,325:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:57,325:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:57,325:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:57,341:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:57,341:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:57,356:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:57,492:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:57,502:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:57,506:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:57,513:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:57,513:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:57,516:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:57,520:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:57,524:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:57,531:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:25:57,559:INFO:Calculating mean and std
2023-12-03 14:25:57,560:INFO:Creating metrics dataframe
2023-12-03 14:25:57,567:INFO:Uploading results into container
2023-12-03 14:25:57,569:INFO:Uploading model into container now
2023-12-03 14:25:57,569:INFO:_master_model_container: 14
2023-12-03 14:25:57,569:INFO:_display_container: 2
2023-12-03 14:25:57,569:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2023-12-03 14:25:57,569:INFO:create_model() successfully completed......................................
2023-12-03 14:25:57,667:INFO:SubProcess create_model() end ==================================
2023-12-03 14:25:57,667:INFO:Creating metrics dataframe
2023-12-03 14:25:57,683:INFO:Initializing CatBoost Classifier
2023-12-03 14:25:57,683:INFO:Total runtime is 0.5038488626480103 minutes
2023-12-03 14:25:57,683:INFO:SubProcess create_model() called ==================================
2023-12-03 14:25:57,683:INFO:Initializing create_model()
2023-12-03 14:25:57,683:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B70C205840>, estimator=catboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B70C7C3B20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-03 14:25:57,683:INFO:Checking exceptions
2023-12-03 14:25:57,683:INFO:Importing libraries
2023-12-03 14:25:57,683:INFO:Copying training dataset
2023-12-03 14:25:57,698:INFO:Defining folds
2023-12-03 14:25:57,698:INFO:Declaring metric variables
2023-12-03 14:25:57,698:INFO:Importing untrained model
2023-12-03 14:25:57,698:INFO:CatBoost Classifier Imported successfully
2023-12-03 14:25:57,698:INFO:Starting cross validation
2023-12-03 14:25:57,698:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-03 14:26:10,118:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:10,136:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:10,136:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:10,449:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:10,465:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:10,480:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:11,655:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:11,655:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:11,671:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:11,671:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:11,671:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:11,686:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:12,171:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:12,186:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:12,186:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:12,483:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:12,483:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:12,498:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:12,796:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:12,811:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:12,811:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:12,978:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:12,986:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:12,987:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:13,126:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:13,126:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:13,141:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:13,157:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:13,157:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:13,157:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:13,188:INFO:Calculating mean and std
2023-12-03 14:26:13,188:INFO:Creating metrics dataframe
2023-12-03 14:26:13,188:INFO:Uploading results into container
2023-12-03 14:26:13,188:INFO:Uploading model into container now
2023-12-03 14:26:13,188:INFO:_master_model_container: 15
2023-12-03 14:26:13,188:INFO:_display_container: 2
2023-12-03 14:26:13,188:INFO:<catboost.core.CatBoostClassifier object at 0x000002B70CDE1150>
2023-12-03 14:26:13,188:INFO:create_model() successfully completed......................................
2023-12-03 14:26:13,276:INFO:SubProcess create_model() end ==================================
2023-12-03 14:26:13,276:INFO:Creating metrics dataframe
2023-12-03 14:26:13,291:INFO:Initializing Dummy Classifier
2023-12-03 14:26:13,291:INFO:Total runtime is 0.7639934539794923 minutes
2023-12-03 14:26:13,291:INFO:SubProcess create_model() called ==================================
2023-12-03 14:26:13,291:INFO:Initializing create_model()
2023-12-03 14:26:13,291:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B70C205840>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B70C7C3B20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-03 14:26:13,291:INFO:Checking exceptions
2023-12-03 14:26:13,291:INFO:Importing libraries
2023-12-03 14:26:13,291:INFO:Copying training dataset
2023-12-03 14:26:13,291:INFO:Defining folds
2023-12-03 14:26:13,291:INFO:Declaring metric variables
2023-12-03 14:26:13,291:INFO:Importing untrained model
2023-12-03 14:26:13,291:INFO:Dummy Classifier Imported successfully
2023-12-03 14:26:13,291:INFO:Starting cross validation
2023-12-03 14:26:13,307:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-03 14:26:13,902:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:13,924:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:13,930:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-03 14:26:13,930:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:13,935:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:13,941:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:13,947:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-03 14:26:13,950:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:13,950:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:13,950:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:13,950:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:13,950:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-03 14:26:13,950:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:13,950:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:13,950:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:13,950:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:13,965:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-03 14:26:13,965:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:13,965:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:13,965:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:13,965:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:13,965:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:13,965:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:13,965:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-03 14:26:13,965:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-03 14:26:13,965:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:13,965:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-03 14:26:13,980:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:13,980:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:13,980:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:13,980:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:13,980:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:13,980:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-03 14:26:13,980:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-03 14:26:13,980:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:13,980:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:13,996:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:13,996:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:13,996:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-03 14:26:14,012:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:14,027:INFO:Calculating mean and std
2023-12-03 14:26:14,027:INFO:Creating metrics dataframe
2023-12-03 14:26:14,027:INFO:Uploading results into container
2023-12-03 14:26:14,027:INFO:Uploading model into container now
2023-12-03 14:26:14,027:INFO:_master_model_container: 16
2023-12-03 14:26:14,027:INFO:_display_container: 2
2023-12-03 14:26:14,027:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2023-12-03 14:26:14,027:INFO:create_model() successfully completed......................................
2023-12-03 14:26:14,100:INFO:SubProcess create_model() end ==================================
2023-12-03 14:26:14,116:INFO:Creating metrics dataframe
2023-12-03 14:26:14,116:INFO:Initializing create_model()
2023-12-03 14:26:14,116:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B70C205840>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-03 14:26:14,116:INFO:Checking exceptions
2023-12-03 14:26:14,116:INFO:Importing libraries
2023-12-03 14:26:14,116:INFO:Copying training dataset
2023-12-03 14:26:14,116:INFO:Defining folds
2023-12-03 14:26:14,116:INFO:Declaring metric variables
2023-12-03 14:26:14,116:INFO:Importing untrained model
2023-12-03 14:26:14,116:INFO:Declaring custom model
2023-12-03 14:26:14,116:INFO:Logistic Regression Imported successfully
2023-12-03 14:26:14,116:INFO:Cross validation set to False
2023-12-03 14:26:14,116:INFO:Fitting Model
2023-12-03 14:26:14,381:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-12-03 14:26:14,381:INFO:create_model() successfully completed......................................
2023-12-03 14:26:14,459:INFO:Creating Dashboard logs
2023-12-03 14:26:14,459:INFO:Model: Logistic Regression
2023-12-03 14:26:14,555:INFO:Logged params: {'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 1000, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'l2', 'random_state': 123, 'solver': 'lbfgs', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}
2023-12-03 14:26:14,680:INFO:Initializing predict_model()
2023-12-03 14:26:14,680:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B70C205840>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B70C831870>)
2023-12-03 14:26:14,680:INFO:Checking exceptions
2023-12-03 14:26:14,680:INFO:Preloading libraries
2023-12-03 14:26:14,758:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:14,773:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:14,789:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:14,914:WARNING:C:\Users\Rania\anaconda3\envs\mlops\lib\site-packages\_distutils_hack\__init__.py:33: UserWarning: Setuptools is replacing distutils.
  warnings.warn("Setuptools is replacing distutils.")

2023-12-03 14:26:15,087:INFO:Creating Dashboard logs
2023-12-03 14:26:15,087:INFO:Model: Ridge Classifier
2023-12-03 14:26:15,133:INFO:Logged params: {'alpha': 1.0, 'class_weight': None, 'copy_X': True, 'fit_intercept': True, 'max_iter': None, 'positive': False, 'random_state': 123, 'solver': 'auto', 'tol': 0.0001}
2023-12-03 14:26:15,430:INFO:Creating Dashboard logs
2023-12-03 14:26:15,430:INFO:Model: Gradient Boosting Classifier
2023-12-03 14:26:15,477:INFO:Logged params: {'ccp_alpha': 0.0, 'criterion': 'friedman_mse', 'init': None, 'learning_rate': 0.1, 'loss': 'log_loss', 'max_depth': 3, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_iter_no_change': None, 'random_state': 123, 'subsample': 1.0, 'tol': 0.0001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2023-12-03 14:26:15,775:INFO:Creating Dashboard logs
2023-12-03 14:26:15,785:INFO:Model: Ada Boost Classifier
2023-12-03 14:26:15,822:INFO:Logged params: {'algorithm': 'SAMME.R', 'base_estimator': 'deprecated', 'estimator': None, 'learning_rate': 1.0, 'n_estimators': 50, 'random_state': 123}
2023-12-03 14:26:16,072:INFO:Creating Dashboard logs
2023-12-03 14:26:16,072:INFO:Model: Linear Discriminant Analysis
2023-12-03 14:26:16,104:INFO:Logged params: {'covariance_estimator': None, 'n_components': None, 'priors': None, 'shrinkage': None, 'solver': 'svd', 'store_covariance': False, 'tol': 0.0001}
2023-12-03 14:26:16,402:INFO:Creating Dashboard logs
2023-12-03 14:26:16,402:INFO:Model: CatBoost Classifier
2023-12-03 14:26:16,481:WARNING:Couldn't get params for model. Exception:
Traceback (most recent call last):
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\pycaret\loggers\dashboard_logger.py", line 78, in log_model
    params = params.get_all_params()
  File "C:\Users\Rania\anaconda3\envs\mlops\lib\site-packages\catboost\core.py", line 3377, in get_all_params
    raise CatBoostError("There is no trained model to use get_all_params(). Use fit() to train model. Then use this method.")
_catboost.CatBoostError: There is no trained model to use get_all_params(). Use fit() to train model. Then use this method.

2023-12-03 14:26:16,481:INFO:Logged params: {}
2023-12-03 14:26:16,952:INFO:Creating Dashboard logs
2023-12-03 14:26:16,952:INFO:Model: Random Forest Classifier
2023-12-03 14:26:16,998:INFO:Logged params: {'bootstrap': True, 'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': 'sqrt', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 123, 'verbose': 0, 'warm_start': False}
2023-12-03 14:26:17,317:INFO:Creating Dashboard logs
2023-12-03 14:26:17,317:INFO:Model: Light Gradient Boosting Machine
2023-12-03 14:26:17,414:INFO:Logged params: {'boosting_type': 'gbdt', 'class_weight': None, 'colsample_bytree': 1.0, 'importance_type': 'split', 'learning_rate': 0.1, 'max_depth': -1, 'min_child_samples': 20, 'min_child_weight': 0.001, 'min_split_gain': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'num_leaves': 31, 'objective': None, 'random_state': 123, 'reg_alpha': 0.0, 'reg_lambda': 0.0, 'subsample': 1.0, 'subsample_for_bin': 200000, 'subsample_freq': 0}
2023-12-03 14:26:17,708:INFO:Creating Dashboard logs
2023-12-03 14:26:17,708:INFO:Model: Extreme Gradient Boosting
2023-12-03 14:26:17,755:INFO:Logged params: {'objective': 'binary:logistic', 'base_score': None, 'booster': 'gbtree', 'callbacks': None, 'colsample_bylevel': None, 'colsample_bynode': None, 'colsample_bytree': None, 'device': 'cpu', 'early_stopping_rounds': None, 'enable_categorical': False, 'eval_metric': None, 'feature_types': None, 'gamma': None, 'grow_policy': None, 'importance_type': None, 'interaction_constraints': None, 'learning_rate': None, 'max_bin': None, 'max_cat_threshold': None, 'max_cat_to_onehot': None, 'max_delta_step': None, 'max_depth': None, 'max_leaves': None, 'min_child_weight': None, 'missing': nan, 'monotone_constraints': None, 'multi_strategy': None, 'n_estimators': None, 'n_jobs': -1, 'num_parallel_tree': None, 'random_state': 123, 'reg_alpha': None, 'reg_lambda': None, 'sampling_method': None, 'scale_pos_weight': None, 'subsample': None, 'tree_method': 'auto', 'validate_parameters': None, 'verbosity': 0}
2023-12-03 14:26:18,083:INFO:Creating Dashboard logs
2023-12-03 14:26:18,083:INFO:Model: Extra Trees Classifier
2023-12-03 14:26:18,178:INFO:Logged params: {'bootstrap': False, 'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': 'sqrt', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 123, 'verbose': 0, 'warm_start': False}
2023-12-03 14:26:18,430:INFO:Creating Dashboard logs
2023-12-03 14:26:18,430:INFO:Model: Dummy Classifier
2023-12-03 14:26:18,478:INFO:Logged params: {'constant': None, 'random_state': 123, 'strategy': 'prior'}
2023-12-03 14:26:18,869:INFO:Creating Dashboard logs
2023-12-03 14:26:18,869:INFO:Model: K Neighbors Classifier
2023-12-03 14:26:18,916:INFO:Logged params: {'algorithm': 'auto', 'leaf_size': 30, 'metric': 'minkowski', 'metric_params': None, 'n_jobs': -1, 'n_neighbors': 5, 'p': 2, 'weights': 'uniform'}
2023-12-03 14:26:19,245:INFO:Creating Dashboard logs
2023-12-03 14:26:19,245:INFO:Model: SVM - Linear Kernel
2023-12-03 14:26:19,292:INFO:Logged params: {'alpha': 0.0001, 'average': False, 'class_weight': None, 'early_stopping': False, 'epsilon': 0.1, 'eta0': 0.001, 'fit_intercept': True, 'l1_ratio': 0.15, 'learning_rate': 'optimal', 'loss': 'hinge', 'max_iter': 1000, 'n_iter_no_change': 5, 'n_jobs': -1, 'penalty': 'l2', 'power_t': 0.5, 'random_state': 123, 'shuffle': True, 'tol': 0.001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2023-12-03 14:26:19,526:INFO:Creating Dashboard logs
2023-12-03 14:26:19,526:INFO:Model: Decision Tree Classifier
2023-12-03 14:26:19,557:INFO:Logged params: {'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'random_state': 123, 'splitter': 'best'}
2023-12-03 14:26:19,855:INFO:Creating Dashboard logs
2023-12-03 14:26:19,855:INFO:Model: Naive Bayes
2023-12-03 14:26:19,902:INFO:Logged params: {'priors': None, 'var_smoothing': 1e-09}
2023-12-03 14:26:20,183:INFO:Creating Dashboard logs
2023-12-03 14:26:20,183:INFO:Model: Quadratic Discriminant Analysis
2023-12-03 14:26:20,230:INFO:Logged params: {'priors': None, 'reg_param': 0.0, 'store_covariance': False, 'tol': 0.0001}
2023-12-03 14:26:20,652:INFO:_master_model_container: 16
2023-12-03 14:26:20,652:INFO:_display_container: 2
2023-12-03 14:26:20,652:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-12-03 14:26:20,652:INFO:compare_models() successfully completed......................................
2023-12-03 14:26:29,264:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-03 14:26:29,264:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-03 14:26:29,264:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-03 14:26:29,264:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-03 14:26:30,114:INFO:PyCaret ClassificationExperiment
2023-12-03 14:26:30,114:INFO:Logging name: churn1
2023-12-03 14:26:30,114:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-12-03 14:26:30,114:INFO:version 3.2.0
2023-12-03 14:26:30,114:INFO:Initializing setup()
2023-12-03 14:26:30,114:INFO:self.USI: fab5
2023-12-03 14:26:30,114:INFO:self._variable_keys: {'_ml_usecase', 'n_jobs_param', 'fold_shuffle_param', 'fix_imbalance', 'log_plots_param', 'fold_groups_param', 'X_test', 'exp_id', 'idx', 'target_param', 'USI', 'exp_name_log', 'fold_generator', 'logging_param', 'gpu_param', 'html_param', 'X_train', '_available_plots', 'y_test', 'y', 'memory', 'seed', 'gpu_n_jobs_param', 'is_multiclass', 'y_train', 'data', 'X', 'pipeline'}
2023-12-03 14:26:30,114:INFO:Checking environment
2023-12-03 14:26:30,114:INFO:python_version: 3.10.9
2023-12-03 14:26:30,114:INFO:python_build: ('main', 'Mar  8 2023 10:42:25')
2023-12-03 14:26:30,114:INFO:machine: AMD64
2023-12-03 14:26:30,130:INFO:platform: Windows-10-10.0.22621-SP0
2023-12-03 14:26:30,130:INFO:Memory: svmem(total=16866873344, available=6354812928, percent=62.3, used=10512060416, free=6354812928)
2023-12-03 14:26:30,130:INFO:Physical Core: 8
2023-12-03 14:26:30,130:INFO:Logical Core: 16
2023-12-03 14:26:30,130:INFO:Checking libraries
2023-12-03 14:26:30,130:INFO:System:
2023-12-03 14:26:30,130:INFO:    python: 3.10.9 | packaged by Anaconda, Inc. | (main, Mar  8 2023, 10:42:25) [MSC v.1916 64 bit (AMD64)]
2023-12-03 14:26:30,130:INFO:executable: C:\Users\Rania\anaconda3\envs\mlops\python.exe
2023-12-03 14:26:30,130:INFO:   machine: Windows-10-10.0.22621-SP0
2023-12-03 14:26:30,130:INFO:PyCaret required dependencies:
2023-12-03 14:26:30,191:INFO:                 pip: 23.2.1
2023-12-03 14:26:30,191:INFO:          setuptools: 68.0.0
2023-12-03 14:26:30,191:INFO:             pycaret: 3.2.0
2023-12-03 14:26:30,191:INFO:             IPython: 8.18.1
2023-12-03 14:26:30,191:INFO:          ipywidgets: 7.8.1
2023-12-03 14:26:30,191:INFO:                tqdm: 4.66.1
2023-12-03 14:26:30,191:INFO:               numpy: 1.25.2
2023-12-03 14:26:30,191:INFO:              pandas: 1.5.3
2023-12-03 14:26:30,191:INFO:              jinja2: 3.1.2
2023-12-03 14:26:30,191:INFO:               scipy: 1.10.1
2023-12-03 14:26:30,191:INFO:              joblib: 1.3.2
2023-12-03 14:26:30,191:INFO:             sklearn: 1.3.1
2023-12-03 14:26:30,191:INFO:                pyod: 1.1.2
2023-12-03 14:26:30,191:INFO:            imblearn: 0.11.0
2023-12-03 14:26:30,191:INFO:   category_encoders: 2.6.2
2023-12-03 14:26:30,191:INFO:            lightgbm: 4.1.0
2023-12-03 14:26:30,191:INFO:               numba: 0.58.1
2023-12-03 14:26:30,191:INFO:            requests: 2.31.0
2023-12-03 14:26:30,191:INFO:          matplotlib: 3.8.0
2023-12-03 14:26:30,191:INFO:          scikitplot: 0.3.7
2023-12-03 14:26:30,191:INFO:         yellowbrick: 1.5
2023-12-03 14:26:30,191:INFO:              plotly: 5.17.0
2023-12-03 14:26:30,191:INFO:    plotly-resampler: Not installed
2023-12-03 14:26:30,191:INFO:             kaleido: 0.2.1
2023-12-03 14:26:30,191:INFO:           schemdraw: 0.15
2023-12-03 14:26:30,192:INFO:         statsmodels: 0.14.0
2023-12-03 14:26:30,192:INFO:              sktime: 0.21.1
2023-12-03 14:26:30,192:INFO:               tbats: 1.1.3
2023-12-03 14:26:30,192:INFO:            pmdarima: 2.0.4
2023-12-03 14:26:30,192:INFO:              psutil: 5.9.5
2023-12-03 14:26:30,192:INFO:          markupsafe: 2.1.3
2023-12-03 14:26:30,192:INFO:             pickle5: Not installed
2023-12-03 14:26:30,192:INFO:         cloudpickle: 2.2.1
2023-12-03 14:26:30,192:INFO:         deprecation: 2.1.0
2023-12-03 14:26:30,192:INFO:              xxhash: 3.4.1
2023-12-03 14:26:30,192:INFO:           wurlitzer: Not installed
2023-12-03 14:26:30,192:INFO:PyCaret optional dependencies:
2023-12-03 14:26:30,747:INFO:                shap: 0.43.0
2023-12-03 14:26:30,747:INFO:           interpret: Not installed
2023-12-03 14:26:30,747:INFO:                umap: 0.5.5
2023-12-03 14:26:30,747:INFO:     ydata_profiling: Not installed
2023-12-03 14:26:30,747:INFO:  explainerdashboard: Not installed
2023-12-03 14:26:30,747:INFO:             autoviz: Not installed
2023-12-03 14:26:30,747:INFO:           fairlearn: Not installed
2023-12-03 14:26:30,747:INFO:          deepchecks: 0.17.4
2023-12-03 14:26:30,747:INFO:             xgboost: 2.0.0
2023-12-03 14:26:30,747:INFO:            catboost: 1.2.2
2023-12-03 14:26:30,747:INFO:              kmodes: Not installed
2023-12-03 14:26:30,747:INFO:             mlxtend: Not installed
2023-12-03 14:26:30,747:INFO:       statsforecast: Not installed
2023-12-03 14:26:30,747:INFO:        tune_sklearn: Not installed
2023-12-03 14:26:30,747:INFO:                 ray: Not installed
2023-12-03 14:26:30,747:INFO:            hyperopt: Not installed
2023-12-03 14:26:30,747:INFO:              optuna: 3.4.0
2023-12-03 14:26:30,747:INFO:               skopt: Not installed
2023-12-03 14:26:30,747:INFO:              mlflow: 2.8.1
2023-12-03 14:26:30,747:INFO:              gradio: Not installed
2023-12-03 14:26:30,747:INFO:             fastapi: 0.103.2
2023-12-03 14:26:30,747:INFO:             uvicorn: 0.23.2
2023-12-03 14:26:30,747:INFO:              m2cgen: Not installed
2023-12-03 14:26:30,747:INFO:           evidently: Not installed
2023-12-03 14:26:30,747:INFO:               fugue: Not installed
2023-12-03 14:26:30,747:INFO:           streamlit: 1.27.1
2023-12-03 14:26:30,747:INFO:             prophet: Not installed
2023-12-03 14:26:30,747:INFO:None
2023-12-03 14:26:30,747:INFO:Set up data.
2023-12-03 14:26:30,825:INFO:Set up folding strategy.
2023-12-03 14:26:30,825:INFO:Set up train/test split.
2023-12-03 14:26:30,941:INFO:Set up index.
2023-12-03 14:26:30,941:INFO:Assigning column types.
2023-12-03 14:26:30,941:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-12-03 14:26:30,978:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-03 14:26:30,978:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-03 14:26:31,009:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:26:31,009:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:26:31,082:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-03 14:26:31,103:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-03 14:26:31,142:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:26:31,142:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:26:31,150:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-12-03 14:26:31,198:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-03 14:26:31,233:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:26:31,233:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:26:31,282:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-03 14:26:31,309:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:26:31,309:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:26:31,309:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-12-03 14:26:31,386:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:26:31,386:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:26:31,448:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:26:31,448:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:26:31,456:INFO:Preparing preprocessing pipeline...
2023-12-03 14:26:31,456:INFO:Set up label encoding.
2023-12-03 14:26:31,456:INFO:Set up simple imputation.
2023-12-03 14:26:31,474:INFO:Set up encoding of ordinal features.
2023-12-03 14:26:31,498:INFO:Set up encoding of categorical features.
2023-12-03 14:26:31,503:INFO:Set up column name cleaning.
2023-12-03 14:26:32,238:INFO:Finished creating preprocessing pipeline.
2023-12-03 14:26:32,368:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Rania\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'SeniorCitizen',
                                             'tenure', 'MonthlyCharges',
                                             'TotalCharges'],
                                    transformer=SimpleImputer(add_...
                                                                    'DeviceProtection',
                                                                    'TechSupport',
                                                                    'StreamingTV',
                                                                    'StreamingMovies',
                                                                    'Contract',
                                                                    'PaymentMethod'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-12-03 14:26:32,375:INFO:Creating final display dataframe.
2023-12-03 14:26:32,613:INFO:Setup _display_container:                     Description            Value
0                    Session id              123
1                        Target            Churn
2                   Target type           Binary
3                Target mapping    No: 0, Yes: 1
4           Original data shape       (7043, 22)
5        Transformed data shape       (7043, 42)
6   Transformed train set shape       (4930, 42)
7    Transformed test set shape       (2113, 42)
8               Ignore features                1
9              Ordinal features                5
10             Numeric features                5
11         Categorical features               15
12     Rows with missing values             0.2%
13                   Preprocess             True
14              Imputation type           simple
15           Numeric imputation             mean
16       Categorical imputation             mode
17     Maximum one-hot encoding               25
18              Encoding method             None
19               Fold Generator  StratifiedKFold
20                  Fold Number               10
21                     CPU Jobs               -1
22                      Use GPU            False
23               Log Experiment     MlflowLogger
24              Experiment Name           churn1
25                          USI             fab5
2023-12-03 14:26:32,711:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:26:32,711:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:26:32,790:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:26:32,790:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:26:32,803:INFO:Logging experiment in loggers
2023-12-03 14:26:33,490:INFO:SubProcess save_model() called ==================================
2023-12-03 14:26:33,707:INFO:Initializing save_model()
2023-12-03 14:26:33,707:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\Rania\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'SeniorCitizen',
                                             'tenure', 'MonthlyCharges',
                                             'TotalCharges'],
                                    transformer=SimpleImputer(add_...
                                                                    'DeviceProtection',
                                                                    'TechSupport',
                                                                    'StreamingTV',
                                                                    'StreamingMovies',
                                                                    'Contract',
                                                                    'PaymentMethod'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), model_name=C:\Users\Rania\AppData\Local\Temp\tmpyge_61n3\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Rania\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'SeniorCitizen',
                                             'tenure', 'MonthlyCharges',
                                             'TotalCharges'],
                                    transformer=SimpleImputer(add_...
                                                                    'DeviceProtection',
                                                                    'TechSupport',
                                                                    'StreamingTV',
                                                                    'StreamingMovies',
                                                                    'Contract',
                                                                    'PaymentMethod'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2023-12-03 14:26:33,707:INFO:Adding model into prep_pipe
2023-12-03 14:26:33,707:WARNING:Only Model saved as it was a pipeline.
2023-12-03 14:26:33,744:INFO:C:\Users\Rania\AppData\Local\Temp\tmpyge_61n3\Transformation Pipeline.pkl saved in current working directory
2023-12-03 14:26:33,881:INFO:Pipeline(memory=FastMemory(location=C:\Users\Rania\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'SeniorCitizen',
                                             'tenure', 'MonthlyCharges',
                                             'TotalCharges'],
                                    transformer=SimpleImputer(add_...
                                                                    'DeviceProtection',
                                                                    'TechSupport',
                                                                    'StreamingTV',
                                                                    'StreamingMovies',
                                                                    'Contract',
                                                                    'PaymentMethod'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-12-03 14:26:33,881:INFO:save_model() successfully completed......................................
2023-12-03 14:26:33,985:INFO:SubProcess save_model() end ==================================
2023-12-03 14:26:34,058:INFO:setup() successfully completed in 2.7s...............
2023-12-03 14:26:34,064:INFO:Initializing compare_models()
2023-12-03 14:26:34,064:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001963BAA5840>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001963BAA5840>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-12-03 14:26:34,064:INFO:Checking exceptions
2023-12-03 14:26:34,071:INFO:Preparing display monitor
2023-12-03 14:26:34,079:INFO:Initializing Logistic Regression
2023-12-03 14:26:34,079:INFO:Total runtime is 0.0 minutes
2023-12-03 14:26:34,079:INFO:SubProcess create_model() called ==================================
2023-12-03 14:26:34,079:INFO:Initializing create_model()
2023-12-03 14:26:34,079:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001963BAA5840>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001963C45F520>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-03 14:26:34,079:INFO:Checking exceptions
2023-12-03 14:26:34,079:INFO:Importing libraries
2023-12-03 14:26:34,079:INFO:Copying training dataset
2023-12-03 14:26:34,092:INFO:Defining folds
2023-12-03 14:26:34,092:INFO:Declaring metric variables
2023-12-03 14:26:34,092:INFO:Importing untrained model
2023-12-03 14:26:34,092:INFO:Logistic Regression Imported successfully
2023-12-03 14:26:34,092:INFO:Starting cross validation
2023-12-03 14:26:34,096:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-03 14:26:40,996:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:41,005:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:41,018:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:41,194:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:41,194:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:41,194:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:41,210:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:41,210:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:41,210:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:41,210:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:41,225:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:41,225:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:41,225:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:41,225:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:41,225:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:41,241:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:41,241:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:41,241:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:41,241:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:41,256:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:41,256:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:41,256:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:41,256:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:41,256:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:41,256:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:41,272:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:41,272:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:41,272:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:41,272:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:41,303:INFO:Calculating mean and std
2023-12-03 14:26:41,303:INFO:Creating metrics dataframe
2023-12-03 14:26:41,303:INFO:Uploading results into container
2023-12-03 14:26:41,303:INFO:Uploading model into container now
2023-12-03 14:26:41,303:INFO:_master_model_container: 1
2023-12-03 14:26:41,303:INFO:_display_container: 2
2023-12-03 14:26:41,303:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-12-03 14:26:41,303:INFO:create_model() successfully completed......................................
2023-12-03 14:26:41,397:INFO:SubProcess create_model() end ==================================
2023-12-03 14:26:41,397:INFO:Creating metrics dataframe
2023-12-03 14:26:41,397:INFO:Initializing K Neighbors Classifier
2023-12-03 14:26:41,397:INFO:Total runtime is 0.12197155555089315 minutes
2023-12-03 14:26:41,397:INFO:SubProcess create_model() called ==================================
2023-12-03 14:26:41,397:INFO:Initializing create_model()
2023-12-03 14:26:41,397:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001963BAA5840>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001963C45F520>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-03 14:26:41,397:INFO:Checking exceptions
2023-12-03 14:26:41,397:INFO:Importing libraries
2023-12-03 14:26:41,397:INFO:Copying training dataset
2023-12-03 14:26:41,397:INFO:Defining folds
2023-12-03 14:26:41,397:INFO:Declaring metric variables
2023-12-03 14:26:41,397:INFO:Importing untrained model
2023-12-03 14:26:41,397:INFO:K Neighbors Classifier Imported successfully
2023-12-03 14:26:41,397:INFO:Starting cross validation
2023-12-03 14:26:41,397:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-03 14:26:42,362:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:42,362:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:42,362:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:42,362:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:42,362:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:42,378:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:42,378:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:42,378:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:42,378:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:42,409:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:42,426:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:42,426:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:46,167:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:46,173:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:46,179:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:46,179:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:46,192:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:46,200:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:46,263:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:46,270:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:46,270:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:46,276:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:46,276:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:46,282:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:46,283:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:46,283:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:46,297:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:46,332:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:46,338:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:46,346:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:46,361:INFO:Calculating mean and std
2023-12-03 14:26:46,361:INFO:Creating metrics dataframe
2023-12-03 14:26:46,366:INFO:Uploading results into container
2023-12-03 14:26:46,366:INFO:Uploading model into container now
2023-12-03 14:26:46,366:INFO:_master_model_container: 2
2023-12-03 14:26:46,366:INFO:_display_container: 2
2023-12-03 14:26:46,366:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-12-03 14:26:46,366:INFO:create_model() successfully completed......................................
2023-12-03 14:26:46,486:INFO:SubProcess create_model() end ==================================
2023-12-03 14:26:46,486:INFO:Creating metrics dataframe
2023-12-03 14:26:46,486:INFO:Initializing Naive Bayes
2023-12-03 14:26:46,486:INFO:Total runtime is 0.20678089459737142 minutes
2023-12-03 14:26:46,486:INFO:SubProcess create_model() called ==================================
2023-12-03 14:26:46,486:INFO:Initializing create_model()
2023-12-03 14:26:46,486:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001963BAA5840>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001963C45F520>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-03 14:26:46,486:INFO:Checking exceptions
2023-12-03 14:26:46,494:INFO:Importing libraries
2023-12-03 14:26:46,494:INFO:Copying training dataset
2023-12-03 14:26:46,497:INFO:Defining folds
2023-12-03 14:26:46,497:INFO:Declaring metric variables
2023-12-03 14:26:46,497:INFO:Importing untrained model
2023-12-03 14:26:46,497:INFO:Naive Bayes Imported successfully
2023-12-03 14:26:46,497:INFO:Starting cross validation
2023-12-03 14:26:46,502:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-03 14:26:47,200:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:47,207:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:47,214:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:47,217:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:47,224:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:47,228:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:47,230:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:47,237:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:47,237:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:47,242:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:47,242:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:47,248:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:47,251:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:47,251:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:47,251:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:47,259:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:47,259:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:47,259:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:47,263:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:47,264:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:47,264:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:47,269:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:47,273:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:47,273:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:47,279:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:47,283:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:47,285:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:47,285:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:47,297:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:47,299:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:47,311:INFO:Calculating mean and std
2023-12-03 14:26:47,311:INFO:Creating metrics dataframe
2023-12-03 14:26:47,313:INFO:Uploading results into container
2023-12-03 14:26:47,319:INFO:Uploading model into container now
2023-12-03 14:26:47,320:INFO:_master_model_container: 3
2023-12-03 14:26:47,320:INFO:_display_container: 2
2023-12-03 14:26:47,320:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-12-03 14:26:47,320:INFO:create_model() successfully completed......................................
2023-12-03 14:26:47,424:INFO:SubProcess create_model() end ==================================
2023-12-03 14:26:47,424:INFO:Creating metrics dataframe
2023-12-03 14:26:47,437:INFO:Initializing Decision Tree Classifier
2023-12-03 14:26:47,464:INFO:Total runtime is 0.22308222850163778 minutes
2023-12-03 14:26:47,464:INFO:SubProcess create_model() called ==================================
2023-12-03 14:26:47,464:INFO:Initializing create_model()
2023-12-03 14:26:47,464:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001963BAA5840>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001963C45F520>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-03 14:26:47,464:INFO:Checking exceptions
2023-12-03 14:26:47,464:INFO:Importing libraries
2023-12-03 14:26:47,464:INFO:Copying training dataset
2023-12-03 14:26:47,488:INFO:Defining folds
2023-12-03 14:26:47,488:INFO:Declaring metric variables
2023-12-03 14:26:47,488:INFO:Importing untrained model
2023-12-03 14:26:47,488:INFO:Decision Tree Classifier Imported successfully
2023-12-03 14:26:47,488:INFO:Starting cross validation
2023-12-03 14:26:47,488:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-03 14:26:48,253:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:48,272:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:48,272:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:48,284:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:48,284:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:48,284:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:48,284:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:48,284:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:48,284:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:48,300:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:48,300:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:48,308:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:48,311:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:48,311:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:48,311:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:48,311:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:48,311:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:48,311:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:48,324:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:48,324:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:48,328:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:48,328:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:48,328:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:48,328:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:48,336:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:48,336:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:48,336:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:48,349:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:48,349:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:48,349:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:48,377:INFO:Calculating mean and std
2023-12-03 14:26:48,377:INFO:Creating metrics dataframe
2023-12-03 14:26:48,377:INFO:Uploading results into container
2023-12-03 14:26:48,384:INFO:Uploading model into container now
2023-12-03 14:26:48,384:INFO:_master_model_container: 4
2023-12-03 14:26:48,384:INFO:_display_container: 2
2023-12-03 14:26:48,384:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best')
2023-12-03 14:26:48,384:INFO:create_model() successfully completed......................................
2023-12-03 14:26:48,493:INFO:SubProcess create_model() end ==================================
2023-12-03 14:26:48,493:INFO:Creating metrics dataframe
2023-12-03 14:26:48,498:INFO:Initializing SVM - Linear Kernel
2023-12-03 14:26:48,498:INFO:Total runtime is 0.2403202772140503 minutes
2023-12-03 14:26:48,498:INFO:SubProcess create_model() called ==================================
2023-12-03 14:26:48,498:INFO:Initializing create_model()
2023-12-03 14:26:48,498:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001963BAA5840>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001963C45F520>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-03 14:26:48,498:INFO:Checking exceptions
2023-12-03 14:26:48,498:INFO:Importing libraries
2023-12-03 14:26:48,498:INFO:Copying training dataset
2023-12-03 14:26:48,503:INFO:Defining folds
2023-12-03 14:26:48,503:INFO:Declaring metric variables
2023-12-03 14:26:48,503:INFO:Importing untrained model
2023-12-03 14:26:48,503:INFO:SVM - Linear Kernel Imported successfully
2023-12-03 14:26:48,503:INFO:Starting cross validation
2023-12-03 14:26:48,503:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-03 14:26:49,267:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-03 14:26:49,267:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-03 14:26:49,267:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:49,267:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:49,282:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:49,282:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-03 14:26:49,282:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:49,282:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:49,298:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:49,298:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:49,298:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:49,314:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:49,330:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-03 14:26:49,338:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-03 14:26:49,339:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:49,342:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:49,342:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-03 14:26:49,349:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:49,349:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:49,353:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-03 14:26:49,353:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:49,356:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:49,356:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-03 14:26:49,356:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:49,356:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:49,360:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:49,364:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:49,364:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:49,367:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:49,367:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:49,367:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-03 14:26:49,371:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:49,371:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:49,374:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:49,381:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:49,386:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-12-03 14:26:49,388:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:49,388:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:49,395:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:49,403:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:49,414:INFO:Calculating mean and std
2023-12-03 14:26:49,416:INFO:Creating metrics dataframe
2023-12-03 14:26:49,416:INFO:Uploading results into container
2023-12-03 14:26:49,416:INFO:Uploading model into container now
2023-12-03 14:26:49,420:INFO:_master_model_container: 5
2023-12-03 14:26:49,420:INFO:_display_container: 2
2023-12-03 14:26:49,420:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-12-03 14:26:49,420:INFO:create_model() successfully completed......................................
2023-12-03 14:26:49,501:INFO:SubProcess create_model() end ==================================
2023-12-03 14:26:49,501:INFO:Creating metrics dataframe
2023-12-03 14:26:49,501:INFO:Initializing Ridge Classifier
2023-12-03 14:26:49,501:INFO:Total runtime is 0.25703885952631633 minutes
2023-12-03 14:26:49,501:INFO:SubProcess create_model() called ==================================
2023-12-03 14:26:49,501:INFO:Initializing create_model()
2023-12-03 14:26:49,501:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001963BAA5840>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001963C45F520>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-03 14:26:49,501:INFO:Checking exceptions
2023-12-03 14:26:49,501:INFO:Importing libraries
2023-12-03 14:26:49,501:INFO:Copying training dataset
2023-12-03 14:26:49,509:INFO:Defining folds
2023-12-03 14:26:49,509:INFO:Declaring metric variables
2023-12-03 14:26:49,515:INFO:Importing untrained model
2023-12-03 14:26:49,515:INFO:Ridge Classifier Imported successfully
2023-12-03 14:26:49,517:INFO:Starting cross validation
2023-12-03 14:26:49,520:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-03 14:26:50,180:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-03 14:26:50,195:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:50,195:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:50,211:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:50,242:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-03 14:26:50,242:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:50,242:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-03 14:26:50,258:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-03 14:26:50,259:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:50,259:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:50,259:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-03 14:26:50,259:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:50,259:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:50,259:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-03 14:26:50,270:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:50,270:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:50,270:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:50,274:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-03 14:26:50,274:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:50,274:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-03 14:26:50,274:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:50,274:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:50,274:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:50,274:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:50,274:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:50,274:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:50,274:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:50,274:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:50,290:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:50,290:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:50,290:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:50,290:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:50,290:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-03 14:26:50,290:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:190: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 182, in _score
    return super()._score(
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 127, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-12-03 14:26:50,290:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:50,305:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:50,305:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:50,305:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:50,305:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:50,305:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:50,336:INFO:Calculating mean and std
2023-12-03 14:26:50,336:INFO:Creating metrics dataframe
2023-12-03 14:26:50,336:INFO:Uploading results into container
2023-12-03 14:26:50,336:INFO:Uploading model into container now
2023-12-03 14:26:50,336:INFO:_master_model_container: 6
2023-12-03 14:26:50,336:INFO:_display_container: 2
2023-12-03 14:26:50,336:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2023-12-03 14:26:50,336:INFO:create_model() successfully completed......................................
2023-12-03 14:26:50,422:INFO:SubProcess create_model() end ==================================
2023-12-03 14:26:50,422:INFO:Creating metrics dataframe
2023-12-03 14:26:50,431:INFO:Initializing Random Forest Classifier
2023-12-03 14:26:50,431:INFO:Total runtime is 0.2725311517715454 minutes
2023-12-03 14:26:50,431:INFO:SubProcess create_model() called ==================================
2023-12-03 14:26:50,431:INFO:Initializing create_model()
2023-12-03 14:26:50,431:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001963BAA5840>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001963C45F520>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-03 14:26:50,431:INFO:Checking exceptions
2023-12-03 14:26:50,431:INFO:Importing libraries
2023-12-03 14:26:50,431:INFO:Copying training dataset
2023-12-03 14:26:50,444:INFO:Defining folds
2023-12-03 14:26:50,444:INFO:Declaring metric variables
2023-12-03 14:26:50,444:INFO:Importing untrained model
2023-12-03 14:26:50,444:INFO:Random Forest Classifier Imported successfully
2023-12-03 14:26:50,446:INFO:Starting cross validation
2023-12-03 14:26:50,450:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-03 14:26:52,134:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:52,134:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:52,140:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:52,140:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:52,157:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:52,157:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:52,157:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:52,171:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:52,171:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:52,171:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:52,186:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:52,186:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:52,186:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:52,202:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:52,202:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:52,202:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:52,218:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:52,218:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:52,233:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:52,233:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:52,306:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:52,319:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:52,327:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:52,397:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:52,397:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:52,404:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:52,404:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:52,411:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:52,411:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:52,432:INFO:Calculating mean and std
2023-12-03 14:26:52,432:INFO:Creating metrics dataframe
2023-12-03 14:26:52,437:INFO:Uploading results into container
2023-12-03 14:26:52,438:INFO:Uploading model into container now
2023-12-03 14:26:52,439:INFO:_master_model_container: 7
2023-12-03 14:26:52,439:INFO:_display_container: 2
2023-12-03 14:26:52,439:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2023-12-03 14:26:52,439:INFO:create_model() successfully completed......................................
2023-12-03 14:26:52,543:INFO:SubProcess create_model() end ==================================
2023-12-03 14:26:52,543:INFO:Creating metrics dataframe
2023-12-03 14:26:52,551:INFO:Initializing Quadratic Discriminant Analysis
2023-12-03 14:26:52,551:INFO:Total runtime is 0.3078675309816996 minutes
2023-12-03 14:26:52,551:INFO:SubProcess create_model() called ==================================
2023-12-03 14:26:52,551:INFO:Initializing create_model()
2023-12-03 14:26:52,551:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001963BAA5840>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001963C45F520>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-03 14:26:52,551:INFO:Checking exceptions
2023-12-03 14:26:52,551:INFO:Importing libraries
2023-12-03 14:26:52,551:INFO:Copying training dataset
2023-12-03 14:26:52,559:INFO:Defining folds
2023-12-03 14:26:52,559:INFO:Declaring metric variables
2023-12-03 14:26:52,559:INFO:Importing untrained model
2023-12-03 14:26:52,559:INFO:Quadratic Discriminant Analysis Imported successfully
2023-12-03 14:26:52,559:INFO:Starting cross validation
2023-12-03 14:26:52,564:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-03 14:26:53,100:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-03 14:26:53,121:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-03 14:26:53,121:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-03 14:26:53,128:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-03 14:26:53,183:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-03 14:26:53,190:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-03 14:26:53,190:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-03 14:26:53,197:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-03 14:26:53,212:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-03 14:26:53,248:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-12-03 14:26:53,293:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:53,307:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:53,307:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:53,314:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:53,321:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:53,321:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:53,330:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:53,330:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:53,336:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:53,342:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:53,342:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:53,349:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:53,371:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:53,379:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:53,384:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:53,384:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:53,387:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:53,391:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:53,391:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:53,391:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:53,393:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:53,397:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:53,397:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:53,397:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:53,403:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:53,403:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:53,403:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:53,411:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:53,411:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:53,427:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:53,443:INFO:Calculating mean and std
2023-12-03 14:26:53,444:INFO:Creating metrics dataframe
2023-12-03 14:26:53,447:INFO:Uploading results into container
2023-12-03 14:26:53,447:INFO:Uploading model into container now
2023-12-03 14:26:53,447:INFO:_master_model_container: 8
2023-12-03 14:26:53,447:INFO:_display_container: 2
2023-12-03 14:26:53,449:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-12-03 14:26:53,449:INFO:create_model() successfully completed......................................
2023-12-03 14:26:53,531:INFO:SubProcess create_model() end ==================================
2023-12-03 14:26:53,531:INFO:Creating metrics dataframe
2023-12-03 14:26:53,539:INFO:Initializing Ada Boost Classifier
2023-12-03 14:26:53,539:INFO:Total runtime is 0.3243373394012451 minutes
2023-12-03 14:26:53,539:INFO:SubProcess create_model() called ==================================
2023-12-03 14:26:53,539:INFO:Initializing create_model()
2023-12-03 14:26:53,539:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001963BAA5840>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001963C45F520>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-03 14:26:53,539:INFO:Checking exceptions
2023-12-03 14:26:53,539:INFO:Importing libraries
2023-12-03 14:26:53,539:INFO:Copying training dataset
2023-12-03 14:26:53,547:INFO:Defining folds
2023-12-03 14:26:53,547:INFO:Declaring metric variables
2023-12-03 14:26:53,547:INFO:Importing untrained model
2023-12-03 14:26:53,547:INFO:Ada Boost Classifier Imported successfully
2023-12-03 14:26:53,547:INFO:Starting cross validation
2023-12-03 14:26:53,555:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-03 14:26:54,742:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:54,749:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:54,759:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:54,765:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:54,765:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:54,773:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:54,789:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:54,805:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:54,805:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:54,805:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:54,805:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:54,820:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:54,836:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:54,836:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:54,836:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:54,836:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:54,836:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:54,851:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:54,851:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:54,851:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:54,851:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:54,867:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:54,867:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:54,867:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:54,867:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:54,867:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:54,867:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:54,883:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:54,883:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:54,883:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:54,914:INFO:Calculating mean and std
2023-12-03 14:26:54,914:INFO:Creating metrics dataframe
2023-12-03 14:26:54,914:INFO:Uploading results into container
2023-12-03 14:26:54,914:INFO:Uploading model into container now
2023-12-03 14:26:54,914:INFO:_master_model_container: 9
2023-12-03 14:26:54,914:INFO:_display_container: 2
2023-12-03 14:26:54,914:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=123)
2023-12-03 14:26:54,914:INFO:create_model() successfully completed......................................
2023-12-03 14:26:54,992:INFO:SubProcess create_model() end ==================================
2023-12-03 14:26:54,992:INFO:Creating metrics dataframe
2023-12-03 14:26:54,992:INFO:Initializing Gradient Boosting Classifier
2023-12-03 14:26:54,992:INFO:Total runtime is 0.34855424563090004 minutes
2023-12-03 14:26:54,992:INFO:SubProcess create_model() called ==================================
2023-12-03 14:26:54,992:INFO:Initializing create_model()
2023-12-03 14:26:54,992:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001963BAA5840>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001963C45F520>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-03 14:26:54,992:INFO:Checking exceptions
2023-12-03 14:26:54,992:INFO:Importing libraries
2023-12-03 14:26:54,992:INFO:Copying training dataset
2023-12-03 14:26:54,992:INFO:Defining folds
2023-12-03 14:26:54,992:INFO:Declaring metric variables
2023-12-03 14:26:54,992:INFO:Importing untrained model
2023-12-03 14:26:54,992:INFO:Gradient Boosting Classifier Imported successfully
2023-12-03 14:26:54,992:INFO:Starting cross validation
2023-12-03 14:26:55,008:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-03 14:26:57,550:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:57,565:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:57,565:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:57,573:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:57,573:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:57,582:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:57,585:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:57,585:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:57,592:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:57,592:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:57,599:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:57,605:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:57,619:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:57,626:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:57,633:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:57,633:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:57,633:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:57,640:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:57,640:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:57,640:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:57,648:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:57,648:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:57,648:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:57,656:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:57,656:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:57,656:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:57,656:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:57,664:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:57,669:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:57,696:INFO:Calculating mean and std
2023-12-03 14:26:57,696:INFO:Creating metrics dataframe
2023-12-03 14:26:57,704:INFO:Uploading results into container
2023-12-03 14:26:57,704:INFO:Uploading model into container now
2023-12-03 14:26:57,704:INFO:_master_model_container: 10
2023-12-03 14:26:57,704:INFO:_display_container: 2
2023-12-03 14:26:57,704:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-12-03 14:26:57,704:INFO:create_model() successfully completed......................................
2023-12-03 14:26:57,803:INFO:SubProcess create_model() end ==================================
2023-12-03 14:26:57,803:INFO:Creating metrics dataframe
2023-12-03 14:26:57,819:INFO:Initializing Linear Discriminant Analysis
2023-12-03 14:26:57,819:INFO:Total runtime is 0.39566610654195145 minutes
2023-12-03 14:26:57,819:INFO:SubProcess create_model() called ==================================
2023-12-03 14:26:57,819:INFO:Initializing create_model()
2023-12-03 14:26:57,819:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001963BAA5840>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001963C45F520>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-03 14:26:57,819:INFO:Checking exceptions
2023-12-03 14:26:57,819:INFO:Importing libraries
2023-12-03 14:26:57,819:INFO:Copying training dataset
2023-12-03 14:26:57,819:INFO:Defining folds
2023-12-03 14:26:57,819:INFO:Declaring metric variables
2023-12-03 14:26:57,819:INFO:Importing untrained model
2023-12-03 14:26:57,819:INFO:Linear Discriminant Analysis Imported successfully
2023-12-03 14:26:57,827:INFO:Starting cross validation
2023-12-03 14:26:57,827:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-03 14:26:58,519:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:58,527:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:58,527:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:58,527:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:58,535:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:58,535:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:58,535:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:58,543:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:58,543:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:58,543:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:58,543:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:58,551:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:58,551:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:58,551:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:58,551:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:58,559:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:58,559:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:58,559:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:58,568:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:58,568:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:58,575:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:58,575:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:58,575:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:58,575:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:58,583:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:58,591:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:58,599:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:58,599:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:26:58,618:INFO:Calculating mean and std
2023-12-03 14:26:58,618:INFO:Creating metrics dataframe
2023-12-03 14:26:58,618:INFO:Uploading results into container
2023-12-03 14:26:58,618:INFO:Uploading model into container now
2023-12-03 14:26:58,618:INFO:_master_model_container: 11
2023-12-03 14:26:58,618:INFO:_display_container: 2
2023-12-03 14:26:58,618:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-12-03 14:26:58,618:INFO:create_model() successfully completed......................................
2023-12-03 14:26:58,722:INFO:SubProcess create_model() end ==================================
2023-12-03 14:26:58,722:INFO:Creating metrics dataframe
2023-12-03 14:26:58,730:INFO:Initializing Extra Trees Classifier
2023-12-03 14:26:58,730:INFO:Total runtime is 0.4108594934145609 minutes
2023-12-03 14:26:58,730:INFO:SubProcess create_model() called ==================================
2023-12-03 14:26:58,730:INFO:Initializing create_model()
2023-12-03 14:26:58,730:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001963BAA5840>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001963C45F520>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-03 14:26:58,730:INFO:Checking exceptions
2023-12-03 14:26:58,730:INFO:Importing libraries
2023-12-03 14:26:58,730:INFO:Copying training dataset
2023-12-03 14:26:58,739:INFO:Defining folds
2023-12-03 14:26:58,739:INFO:Declaring metric variables
2023-12-03 14:26:58,739:INFO:Importing untrained model
2023-12-03 14:26:58,739:INFO:Extra Trees Classifier Imported successfully
2023-12-03 14:26:58,739:INFO:Starting cross validation
2023-12-03 14:26:58,739:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-03 14:27:00,350:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:00,360:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:00,360:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:00,368:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:00,373:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:00,387:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:00,387:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:00,394:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:00,394:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:00,409:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:00,417:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:00,417:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:00,512:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:00,525:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:00,533:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:00,549:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:00,549:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:00,553:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:00,560:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:00,566:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:00,566:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:00,574:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:00,574:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:00,574:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:00,641:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:00,649:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:00,657:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:00,690:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:00,692:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:00,699:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:00,706:INFO:Calculating mean and std
2023-12-03 14:27:00,707:INFO:Creating metrics dataframe
2023-12-03 14:27:00,707:INFO:Uploading results into container
2023-12-03 14:27:00,707:INFO:Uploading model into container now
2023-12-03 14:27:00,713:INFO:_master_model_container: 12
2023-12-03 14:27:00,713:INFO:_display_container: 2
2023-12-03 14:27:00,713:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=123, verbose=0, warm_start=False)
2023-12-03 14:27:00,713:INFO:create_model() successfully completed......................................
2023-12-03 14:27:00,797:INFO:SubProcess create_model() end ==================================
2023-12-03 14:27:00,797:INFO:Creating metrics dataframe
2023-12-03 14:27:00,806:INFO:Initializing Extreme Gradient Boosting
2023-12-03 14:27:00,806:INFO:Total runtime is 0.44544582764307655 minutes
2023-12-03 14:27:00,806:INFO:SubProcess create_model() called ==================================
2023-12-03 14:27:00,806:INFO:Initializing create_model()
2023-12-03 14:27:00,806:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001963BAA5840>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001963C45F520>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-03 14:27:00,806:INFO:Checking exceptions
2023-12-03 14:27:00,806:INFO:Importing libraries
2023-12-03 14:27:00,806:INFO:Copying training dataset
2023-12-03 14:27:00,810:INFO:Defining folds
2023-12-03 14:27:00,810:INFO:Declaring metric variables
2023-12-03 14:27:00,810:INFO:Importing untrained model
2023-12-03 14:27:00,810:INFO:Extreme Gradient Boosting Imported successfully
2023-12-03 14:27:00,810:INFO:Starting cross validation
2023-12-03 14:27:00,814:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-03 14:27:02,204:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:02,220:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:02,235:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:02,235:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:02,252:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:02,255:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:02,262:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:02,262:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:02,269:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:02,269:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:02,269:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:02,273:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:02,277:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:02,284:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:02,285:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:02,287:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:02,287:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:02,287:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:02,291:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:02,291:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:02,296:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:02,296:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:02,301:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:02,309:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:02,309:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:02,309:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:02,317:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:02,318:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:02,332:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:02,337:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:02,349:INFO:Calculating mean and std
2023-12-03 14:27:02,349:INFO:Creating metrics dataframe
2023-12-03 14:27:02,359:INFO:Uploading results into container
2023-12-03 14:27:02,359:INFO:Uploading model into container now
2023-12-03 14:27:02,359:INFO:_master_model_container: 13
2023-12-03 14:27:02,359:INFO:_display_container: 2
2023-12-03 14:27:02,359:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2023-12-03 14:27:02,359:INFO:create_model() successfully completed......................................
2023-12-03 14:27:02,453:INFO:SubProcess create_model() end ==================================
2023-12-03 14:27:02,453:INFO:Creating metrics dataframe
2023-12-03 14:27:02,469:INFO:Initializing Light Gradient Boosting Machine
2023-12-03 14:27:02,469:INFO:Total runtime is 0.4731625199317932 minutes
2023-12-03 14:27:02,469:INFO:SubProcess create_model() called ==================================
2023-12-03 14:27:02,469:INFO:Initializing create_model()
2023-12-03 14:27:02,469:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001963BAA5840>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001963C45F520>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-03 14:27:02,469:INFO:Checking exceptions
2023-12-03 14:27:02,469:INFO:Importing libraries
2023-12-03 14:27:02,469:INFO:Copying training dataset
2023-12-03 14:27:02,469:INFO:Defining folds
2023-12-03 14:27:02,469:INFO:Declaring metric variables
2023-12-03 14:27:02,469:INFO:Importing untrained model
2023-12-03 14:27:02,469:INFO:Light Gradient Boosting Machine Imported successfully
2023-12-03 14:27:02,469:INFO:Starting cross validation
2023-12-03 14:27:02,469:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-03 14:27:04,749:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:04,765:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:04,765:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:04,780:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:04,781:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:04,781:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:04,799:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:04,811:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:04,816:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:04,816:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:04,833:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:04,843:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:04,990:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:05,000:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:05,011:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:05,019:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:05,030:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:05,043:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:05,266:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:05,272:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:05,278:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:05,280:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:05,290:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:05,291:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:05,291:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:05,300:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:05,383:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:05,396:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:05,405:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:05,429:INFO:Calculating mean and std
2023-12-03 14:27:05,429:INFO:Creating metrics dataframe
2023-12-03 14:27:05,440:INFO:Uploading results into container
2023-12-03 14:27:05,441:INFO:Uploading model into container now
2023-12-03 14:27:05,442:INFO:_master_model_container: 14
2023-12-03 14:27:05,442:INFO:_display_container: 2
2023-12-03 14:27:05,442:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2023-12-03 14:27:05,442:INFO:create_model() successfully completed......................................
2023-12-03 14:27:05,550:INFO:SubProcess create_model() end ==================================
2023-12-03 14:27:05,550:INFO:Creating metrics dataframe
2023-12-03 14:27:05,550:INFO:Initializing CatBoost Classifier
2023-12-03 14:27:05,550:INFO:Total runtime is 0.5245156009991964 minutes
2023-12-03 14:27:05,550:INFO:SubProcess create_model() called ==================================
2023-12-03 14:27:05,550:INFO:Initializing create_model()
2023-12-03 14:27:05,550:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001963BAA5840>, estimator=catboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001963C45F520>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-03 14:27:05,550:INFO:Checking exceptions
2023-12-03 14:27:05,560:INFO:Importing libraries
2023-12-03 14:27:05,560:INFO:Copying training dataset
2023-12-03 14:27:05,560:INFO:Defining folds
2023-12-03 14:27:05,560:INFO:Declaring metric variables
2023-12-03 14:27:05,560:INFO:Importing untrained model
2023-12-03 14:27:05,560:INFO:CatBoost Classifier Imported successfully
2023-12-03 14:27:05,560:INFO:Starting cross validation
2023-12-03 14:27:05,560:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-03 14:27:20,030:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:20,045:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:20,045:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:20,089:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:20,099:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:20,109:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:20,849:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:20,866:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:20,866:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:20,930:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:20,947:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:20,954:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:21,152:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:21,152:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:21,164:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:21,243:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:21,259:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:21,268:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:21,306:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:21,306:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:21,306:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:21,337:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:21,353:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:21,353:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:21,369:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:21,369:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:21,369:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:21,400:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:21,400:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:21,416:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:21,431:INFO:Calculating mean and std
2023-12-03 14:27:21,431:INFO:Creating metrics dataframe
2023-12-03 14:27:21,431:INFO:Uploading results into container
2023-12-03 14:27:21,431:INFO:Uploading model into container now
2023-12-03 14:27:21,431:INFO:_master_model_container: 15
2023-12-03 14:27:21,431:INFO:_display_container: 2
2023-12-03 14:27:21,431:INFO:<catboost.core.CatBoostClassifier object at 0x000001963C720400>
2023-12-03 14:27:21,431:INFO:create_model() successfully completed......................................
2023-12-03 14:27:21,518:INFO:SubProcess create_model() end ==================================
2023-12-03 14:27:21,518:INFO:Creating metrics dataframe
2023-12-03 14:27:21,518:INFO:Initializing Dummy Classifier
2023-12-03 14:27:21,518:INFO:Total runtime is 0.7906573454538981 minutes
2023-12-03 14:27:21,518:INFO:SubProcess create_model() called ==================================
2023-12-03 14:27:21,518:INFO:Initializing create_model()
2023-12-03 14:27:21,518:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001963BAA5840>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001963C45F520>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-03 14:27:21,518:INFO:Checking exceptions
2023-12-03 14:27:21,518:INFO:Importing libraries
2023-12-03 14:27:21,518:INFO:Copying training dataset
2023-12-03 14:27:21,534:INFO:Defining folds
2023-12-03 14:27:21,534:INFO:Declaring metric variables
2023-12-03 14:27:21,534:INFO:Importing untrained model
2023-12-03 14:27:21,534:INFO:Dummy Classifier Imported successfully
2023-12-03 14:27:21,534:INFO:Starting cross validation
2023-12-03 14:27:21,534:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-12-03 14:27:22,194:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:22,194:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:22,209:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:22,209:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:22,209:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:22,209:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-03 14:27:22,209:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-03 14:27:22,209:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:22,209:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:22,225:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:22,225:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:22,225:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-03 14:27:22,225:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:22,225:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:22,225:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:22,225:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:22,225:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:22,241:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-03 14:27:22,241:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-03 14:27:22,241:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:22,241:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:22,241:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:22,241:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:22,241:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:22,241:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:22,241:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-03 14:27:22,241:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:22,241:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:22,256:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:22,256:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:22,256:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-03 14:27:22,256:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-03 14:27:22,256:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:22,256:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:22,256:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:22,256:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:22,256:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-03 14:27:22,256:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-12-03 14:27:22,256:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:22,256:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:22,288:INFO:Calculating mean and std
2023-12-03 14:27:22,288:INFO:Creating metrics dataframe
2023-12-03 14:27:22,288:INFO:Uploading results into container
2023-12-03 14:27:22,288:INFO:Uploading model into container now
2023-12-03 14:27:22,288:INFO:_master_model_container: 16
2023-12-03 14:27:22,288:INFO:_display_container: 2
2023-12-03 14:27:22,288:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2023-12-03 14:27:22,288:INFO:create_model() successfully completed......................................
2023-12-03 14:27:22,389:INFO:SubProcess create_model() end ==================================
2023-12-03 14:27:22,389:INFO:Creating metrics dataframe
2023-12-03 14:27:22,389:INFO:Initializing create_model()
2023-12-03 14:27:22,389:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001963BAA5840>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2023-12-03 14:27:22,389:INFO:Checking exceptions
2023-12-03 14:27:22,389:INFO:Importing libraries
2023-12-03 14:27:22,389:INFO:Copying training dataset
2023-12-03 14:27:22,389:INFO:Defining folds
2023-12-03 14:27:22,389:INFO:Declaring metric variables
2023-12-03 14:27:22,389:INFO:Importing untrained model
2023-12-03 14:27:22,389:INFO:Declaring custom model
2023-12-03 14:27:22,389:INFO:Logistic Regression Imported successfully
2023-12-03 14:27:22,389:INFO:Cross validation set to False
2023-12-03 14:27:22,389:INFO:Fitting Model
2023-12-03 14:27:22,844:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-12-03 14:27:22,844:INFO:create_model() successfully completed......................................
2023-12-03 14:27:22,923:INFO:Creating Dashboard logs
2023-12-03 14:27:22,923:INFO:Model: Logistic Regression
2023-12-03 14:27:23,009:INFO:Logged params: {'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 1000, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'l2', 'random_state': 123, 'solver': 'lbfgs', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}
2023-12-03 14:27:23,159:INFO:Initializing predict_model()
2023-12-03 14:27:23,159:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001963BAA5840>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001963C5827A0>)
2023-12-03 14:27:23,159:INFO:Checking exceptions
2023-12-03 14:27:23,159:INFO:Preloading libraries
2023-12-03 14:27:23,285:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:23,300:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:23,316:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-12-03 14:27:23,475:WARNING:C:\Users\Rania\anaconda3\envs\mlops\lib\site-packages\_distutils_hack\__init__.py:33: UserWarning: Setuptools is replacing distutils.
  warnings.warn("Setuptools is replacing distutils.")

2023-12-03 14:27:23,626:INFO:Creating Dashboard logs
2023-12-03 14:27:23,632:INFO:Model: Ridge Classifier
2023-12-03 14:27:23,695:INFO:Logged params: {'alpha': 1.0, 'class_weight': None, 'copy_X': True, 'fit_intercept': True, 'max_iter': None, 'positive': False, 'random_state': 123, 'solver': 'auto', 'tol': 0.0001}
2023-12-03 14:27:23,978:INFO:Creating Dashboard logs
2023-12-03 14:27:23,978:INFO:Model: Gradient Boosting Classifier
2023-12-03 14:27:24,033:INFO:Logged params: {'ccp_alpha': 0.0, 'criterion': 'friedman_mse', 'init': None, 'learning_rate': 0.1, 'loss': 'log_loss', 'max_depth': 3, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_iter_no_change': None, 'random_state': 123, 'subsample': 1.0, 'tol': 0.0001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2023-12-03 14:27:24,344:INFO:Creating Dashboard logs
2023-12-03 14:27:24,344:INFO:Model: Ada Boost Classifier
2023-12-03 14:27:24,396:INFO:Logged params: {'algorithm': 'SAMME.R', 'base_estimator': 'deprecated', 'estimator': None, 'learning_rate': 1.0, 'n_estimators': 50, 'random_state': 123}
2023-12-03 14:27:24,746:INFO:Creating Dashboard logs
2023-12-03 14:27:24,746:INFO:Model: Linear Discriminant Analysis
2023-12-03 14:27:24,824:INFO:Logged params: {'covariance_estimator': None, 'n_components': None, 'priors': None, 'shrinkage': None, 'solver': 'svd', 'store_covariance': False, 'tol': 0.0001}
2023-12-03 14:27:25,091:INFO:Creating Dashboard logs
2023-12-03 14:27:25,091:INFO:Model: CatBoost Classifier
2023-12-03 14:27:25,137:WARNING:Couldn't get params for model. Exception:
Traceback (most recent call last):
  File "C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\pycaret\loggers\dashboard_logger.py", line 78, in log_model
    params = params.get_all_params()
  File "C:\Users\Rania\anaconda3\envs\mlops\lib\site-packages\catboost\core.py", line 3377, in get_all_params
    raise CatBoostError("There is no trained model to use get_all_params(). Use fit() to train model. Then use this method.")
_catboost.CatBoostError: There is no trained model to use get_all_params(). Use fit() to train model. Then use this method.

2023-12-03 14:27:25,137:INFO:Logged params: {}
2023-12-03 14:27:25,622:INFO:Creating Dashboard logs
2023-12-03 14:27:25,622:INFO:Model: Random Forest Classifier
2023-12-03 14:27:25,732:INFO:Logged params: {'bootstrap': True, 'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': 'sqrt', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 123, 'verbose': 0, 'warm_start': False}
2023-12-03 14:27:25,967:INFO:Creating Dashboard logs
2023-12-03 14:27:25,967:INFO:Model: Light Gradient Boosting Machine
2023-12-03 14:27:26,018:INFO:Logged params: {'boosting_type': 'gbdt', 'class_weight': None, 'colsample_bytree': 1.0, 'importance_type': 'split', 'learning_rate': 0.1, 'max_depth': -1, 'min_child_samples': 20, 'min_child_weight': 0.001, 'min_split_gain': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'num_leaves': 31, 'objective': None, 'random_state': 123, 'reg_alpha': 0.0, 'reg_lambda': 0.0, 'subsample': 1.0, 'subsample_for_bin': 200000, 'subsample_freq': 0}
2023-12-03 14:27:26,279:INFO:Creating Dashboard logs
2023-12-03 14:27:26,279:INFO:Model: Extreme Gradient Boosting
2023-12-03 14:27:26,326:INFO:Logged params: {'objective': 'binary:logistic', 'base_score': None, 'booster': 'gbtree', 'callbacks': None, 'colsample_bylevel': None, 'colsample_bynode': None, 'colsample_bytree': None, 'device': 'cpu', 'early_stopping_rounds': None, 'enable_categorical': False, 'eval_metric': None, 'feature_types': None, 'gamma': None, 'grow_policy': None, 'importance_type': None, 'interaction_constraints': None, 'learning_rate': None, 'max_bin': None, 'max_cat_threshold': None, 'max_cat_to_onehot': None, 'max_delta_step': None, 'max_depth': None, 'max_leaves': None, 'min_child_weight': None, 'missing': nan, 'monotone_constraints': None, 'multi_strategy': None, 'n_estimators': None, 'n_jobs': -1, 'num_parallel_tree': None, 'random_state': 123, 'reg_alpha': None, 'reg_lambda': None, 'sampling_method': None, 'scale_pos_weight': None, 'subsample': None, 'tree_method': 'auto', 'validate_parameters': None, 'verbosity': 0}
2023-12-03 14:27:26,611:INFO:Creating Dashboard logs
2023-12-03 14:27:26,611:INFO:Model: Extra Trees Classifier
2023-12-03 14:27:26,643:INFO:Logged params: {'bootstrap': False, 'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': 'sqrt', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 123, 'verbose': 0, 'warm_start': False}
2023-12-03 14:27:26,903:INFO:Creating Dashboard logs
2023-12-03 14:27:26,903:INFO:Model: Dummy Classifier
2023-12-03 14:27:26,951:INFO:Logged params: {'constant': None, 'random_state': 123, 'strategy': 'prior'}
2023-12-03 14:27:27,280:INFO:Creating Dashboard logs
2023-12-03 14:27:27,296:INFO:Model: K Neighbors Classifier
2023-12-03 14:27:27,381:INFO:Logged params: {'algorithm': 'auto', 'leaf_size': 30, 'metric': 'minkowski', 'metric_params': None, 'n_jobs': -1, 'n_neighbors': 5, 'p': 2, 'weights': 'uniform'}
2023-12-03 14:27:27,601:INFO:Creating Dashboard logs
2023-12-03 14:27:27,601:INFO:Model: SVM - Linear Kernel
2023-12-03 14:27:27,648:INFO:Logged params: {'alpha': 0.0001, 'average': False, 'class_weight': None, 'early_stopping': False, 'epsilon': 0.1, 'eta0': 0.001, 'fit_intercept': True, 'l1_ratio': 0.15, 'learning_rate': 'optimal', 'loss': 'hinge', 'max_iter': 1000, 'n_iter_no_change': 5, 'n_jobs': -1, 'penalty': 'l2', 'power_t': 0.5, 'random_state': 123, 'shuffle': True, 'tol': 0.001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2023-12-03 14:27:27,894:INFO:Creating Dashboard logs
2023-12-03 14:27:27,894:INFO:Model: Decision Tree Classifier
2023-12-03 14:27:27,938:INFO:Logged params: {'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'random_state': 123, 'splitter': 'best'}
2023-12-03 14:27:28,183:INFO:Creating Dashboard logs
2023-12-03 14:27:28,183:INFO:Model: Naive Bayes
2023-12-03 14:27:28,214:INFO:Logged params: {'priors': None, 'var_smoothing': 1e-09}
2023-12-03 14:27:28,430:INFO:Creating Dashboard logs
2023-12-03 14:27:28,430:INFO:Model: Quadratic Discriminant Analysis
2023-12-03 14:27:28,482:INFO:Logged params: {'priors': None, 'reg_param': 0.0, 'store_covariance': False, 'tol': 0.0001}
2023-12-03 14:27:28,917:INFO:_master_model_container: 16
2023-12-03 14:27:28,917:INFO:_display_container: 2
2023-12-03 14:27:28,917:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-12-03 14:27:28,917:INFO:compare_models() successfully completed......................................
2023-12-03 14:30:01,998:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-03 14:30:01,998:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-03 14:30:01,998:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-03 14:30:01,998:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-03 14:30:02,781:INFO:PyCaret ClassificationExperiment
2023-12-03 14:30:02,781:INFO:Logging name: churn1
2023-12-03 14:30:02,781:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-12-03 14:30:02,781:INFO:version 3.2.0
2023-12-03 14:30:02,781:INFO:Initializing setup()
2023-12-03 14:30:02,781:INFO:self.USI: 2fe5
2023-12-03 14:30:02,781:INFO:self._variable_keys: {'fold_groups_param', 'gpu_param', 'pipeline', 'fix_imbalance', 'data', 'fold_shuffle_param', 'logging_param', '_ml_usecase', 'USI', 'X_train', '_available_plots', 'X_test', 'idx', 'is_multiclass', 'n_jobs_param', 'exp_name_log', 'seed', 'gpu_n_jobs_param', 'y', 'X', 'y_train', 'html_param', 'fold_generator', 'target_param', 'log_plots_param', 'exp_id', 'memory', 'y_test'}
2023-12-03 14:30:02,781:INFO:Checking environment
2023-12-03 14:30:02,781:INFO:python_version: 3.10.9
2023-12-03 14:30:02,781:INFO:python_build: ('main', 'Mar  8 2023 10:42:25')
2023-12-03 14:30:02,781:INFO:machine: AMD64
2023-12-03 14:30:02,801:INFO:platform: Windows-10-10.0.22621-SP0
2023-12-03 14:30:02,801:INFO:Memory: svmem(total=16866873344, available=6378741760, percent=62.2, used=10488131584, free=6378741760)
2023-12-03 14:30:02,801:INFO:Physical Core: 8
2023-12-03 14:30:02,801:INFO:Logical Core: 16
2023-12-03 14:30:02,801:INFO:Checking libraries
2023-12-03 14:30:02,801:INFO:System:
2023-12-03 14:30:02,801:INFO:    python: 3.10.9 | packaged by Anaconda, Inc. | (main, Mar  8 2023, 10:42:25) [MSC v.1916 64 bit (AMD64)]
2023-12-03 14:30:02,801:INFO:executable: C:\Users\Rania\anaconda3\envs\mlops\python.exe
2023-12-03 14:30:02,801:INFO:   machine: Windows-10-10.0.22621-SP0
2023-12-03 14:30:02,801:INFO:PyCaret required dependencies:
2023-12-03 14:30:02,845:INFO:                 pip: 23.2.1
2023-12-03 14:30:02,845:INFO:          setuptools: 68.0.0
2023-12-03 14:30:02,845:INFO:             pycaret: 3.2.0
2023-12-03 14:30:02,845:INFO:             IPython: 8.18.1
2023-12-03 14:30:02,845:INFO:          ipywidgets: 7.8.1
2023-12-03 14:30:02,845:INFO:                tqdm: 4.66.1
2023-12-03 14:30:02,845:INFO:               numpy: 1.25.2
2023-12-03 14:30:02,845:INFO:              pandas: 1.5.3
2023-12-03 14:30:02,845:INFO:              jinja2: 3.1.2
2023-12-03 14:30:02,845:INFO:               scipy: 1.10.1
2023-12-03 14:30:02,845:INFO:              joblib: 1.3.2
2023-12-03 14:30:02,845:INFO:             sklearn: 1.3.1
2023-12-03 14:30:02,845:INFO:                pyod: 1.1.2
2023-12-03 14:30:02,845:INFO:            imblearn: 0.11.0
2023-12-03 14:30:02,845:INFO:   category_encoders: 2.6.2
2023-12-03 14:30:02,845:INFO:            lightgbm: 4.1.0
2023-12-03 14:30:02,845:INFO:               numba: 0.58.1
2023-12-03 14:30:02,845:INFO:            requests: 2.31.0
2023-12-03 14:30:02,845:INFO:          matplotlib: 3.8.0
2023-12-03 14:30:02,845:INFO:          scikitplot: 0.3.7
2023-12-03 14:30:02,845:INFO:         yellowbrick: 1.5
2023-12-03 14:30:02,845:INFO:              plotly: 5.17.0
2023-12-03 14:30:02,845:INFO:    plotly-resampler: Not installed
2023-12-03 14:30:02,845:INFO:             kaleido: 0.2.1
2023-12-03 14:30:02,845:INFO:           schemdraw: 0.15
2023-12-03 14:30:02,845:INFO:         statsmodels: 0.14.0
2023-12-03 14:30:02,845:INFO:              sktime: 0.21.1
2023-12-03 14:30:02,845:INFO:               tbats: 1.1.3
2023-12-03 14:30:02,845:INFO:            pmdarima: 2.0.4
2023-12-03 14:30:02,845:INFO:              psutil: 5.9.5
2023-12-03 14:30:02,845:INFO:          markupsafe: 2.1.3
2023-12-03 14:30:02,845:INFO:             pickle5: Not installed
2023-12-03 14:30:02,845:INFO:         cloudpickle: 2.2.1
2023-12-03 14:30:02,845:INFO:         deprecation: 2.1.0
2023-12-03 14:30:02,845:INFO:              xxhash: 3.4.1
2023-12-03 14:30:02,845:INFO:           wurlitzer: Not installed
2023-12-03 14:30:02,845:INFO:PyCaret optional dependencies:
2023-12-03 14:30:03,434:INFO:                shap: 0.43.0
2023-12-03 14:30:03,434:INFO:           interpret: Not installed
2023-12-03 14:30:03,434:INFO:                umap: 0.5.5
2023-12-03 14:30:03,434:INFO:     ydata_profiling: Not installed
2023-12-03 14:30:03,434:INFO:  explainerdashboard: Not installed
2023-12-03 14:30:03,434:INFO:             autoviz: Not installed
2023-12-03 14:30:03,434:INFO:           fairlearn: Not installed
2023-12-03 14:30:03,434:INFO:          deepchecks: 0.17.4
2023-12-03 14:30:03,434:INFO:             xgboost: 2.0.0
2023-12-03 14:30:03,434:INFO:            catboost: 1.2.2
2023-12-03 14:30:03,434:INFO:              kmodes: Not installed
2023-12-03 14:30:03,434:INFO:             mlxtend: Not installed
2023-12-03 14:30:03,434:INFO:       statsforecast: Not installed
2023-12-03 14:30:03,434:INFO:        tune_sklearn: Not installed
2023-12-03 14:30:03,434:INFO:                 ray: Not installed
2023-12-03 14:30:03,434:INFO:            hyperopt: Not installed
2023-12-03 14:30:03,434:INFO:              optuna: 3.4.0
2023-12-03 14:30:03,434:INFO:               skopt: Not installed
2023-12-03 14:30:03,434:INFO:              mlflow: 2.8.1
2023-12-03 14:30:03,434:INFO:              gradio: Not installed
2023-12-03 14:30:03,434:INFO:             fastapi: 0.103.2
2023-12-03 14:30:03,434:INFO:             uvicorn: 0.23.2
2023-12-03 14:30:03,434:INFO:              m2cgen: Not installed
2023-12-03 14:30:03,434:INFO:           evidently: Not installed
2023-12-03 14:30:03,434:INFO:               fugue: Not installed
2023-12-03 14:30:03,434:INFO:           streamlit: 1.27.1
2023-12-03 14:30:03,434:INFO:             prophet: Not installed
2023-12-03 14:30:03,434:INFO:None
2023-12-03 14:30:03,434:INFO:Set up data.
2023-12-03 14:30:03,469:INFO:Set up folding strategy.
2023-12-03 14:30:03,469:INFO:Set up train/test split.
2023-12-03 14:30:03,568:INFO:Set up index.
2023-12-03 14:30:03,568:INFO:Assigning column types.
2023-12-03 14:30:03,568:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-12-03 14:30:03,623:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-03 14:30:03,625:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-03 14:30:03,655:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:30:03,655:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:30:03,755:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-03 14:30:03,755:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-03 14:30:03,771:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:30:03,786:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:30:03,786:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-12-03 14:30:03,841:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-03 14:30:03,874:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:30:03,908:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:30:03,965:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-03 14:30:03,997:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:30:03,997:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:30:03,997:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-12-03 14:30:04,071:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:30:04,071:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:30:04,150:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:30:04,158:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:30:04,158:INFO:Preparing preprocessing pipeline...
2023-12-03 14:30:04,158:INFO:Set up label encoding.
2023-12-03 14:30:04,158:INFO:Set up simple imputation.
2023-12-03 14:30:04,167:INFO:Set up encoding of ordinal features.
2023-12-03 14:30:04,167:INFO:Set up encoding of categorical features.
2023-12-03 14:30:04,167:INFO:Set up column name cleaning.
2023-12-03 14:30:04,338:INFO:Finished creating preprocessing pipeline.
2023-12-03 14:30:04,401:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Rania\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'SeniorCitizen',
                                             'tenure', 'MonthlyCharges',
                                             'TotalCharges'],
                                    transformer=SimpleImputer(add_...
                                                                    'DeviceProtection',
                                                                    'TechSupport',
                                                                    'StreamingTV',
                                                                    'StreamingMovies',
                                                                    'Contract',
                                                                    'PaymentMethod'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-12-03 14:30:04,401:INFO:Creating final display dataframe.
2023-12-03 14:30:04,525:INFO:Setup _display_container:                     Description            Value
0                    Session id              123
1                        Target            Churn
2                   Target type           Binary
3                Target mapping    No: 0, Yes: 1
4           Original data shape       (7043, 22)
5        Transformed data shape       (7043, 42)
6   Transformed train set shape       (4930, 42)
7    Transformed test set shape       (2113, 42)
8               Ignore features                1
9              Ordinal features                5
10             Numeric features                5
11         Categorical features               15
12     Rows with missing values             0.2%
13                   Preprocess             True
14              Imputation type           simple
15           Numeric imputation             mean
16       Categorical imputation             mode
17     Maximum one-hot encoding               25
18              Encoding method             None
19               Fold Generator  StratifiedKFold
20                  Fold Number               10
21                     CPU Jobs               -1
22                      Use GPU            False
23               Log Experiment     MlflowLogger
24              Experiment Name           churn1
25                          USI             2fe5
2023-12-03 14:30:04,620:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:30:04,620:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:30:04,687:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:30:04,687:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:30:04,687:INFO:Logging experiment in loggers
2023-12-03 14:30:04,909:INFO:SubProcess save_model() called ==================================
2023-12-03 14:30:05,059:INFO:Initializing save_model()
2023-12-03 14:30:05,059:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\Rania\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'SeniorCitizen',
                                             'tenure', 'MonthlyCharges',
                                             'TotalCharges'],
                                    transformer=SimpleImputer(add_...
                                                                    'DeviceProtection',
                                                                    'TechSupport',
                                                                    'StreamingTV',
                                                                    'StreamingMovies',
                                                                    'Contract',
                                                                    'PaymentMethod'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), model_name=C:\Users\Rania\AppData\Local\Temp\tmp6_tk65q8\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Rania\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'SeniorCitizen',
                                             'tenure', 'MonthlyCharges',
                                             'TotalCharges'],
                                    transformer=SimpleImputer(add_...
                                                                    'DeviceProtection',
                                                                    'TechSupport',
                                                                    'StreamingTV',
                                                                    'StreamingMovies',
                                                                    'Contract',
                                                                    'PaymentMethod'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2023-12-03 14:30:05,059:INFO:Adding model into prep_pipe
2023-12-03 14:30:05,059:WARNING:Only Model saved as it was a pipeline.
2023-12-03 14:30:05,075:INFO:C:\Users\Rania\AppData\Local\Temp\tmp6_tk65q8\Transformation Pipeline.pkl saved in current working directory
2023-12-03 14:30:05,163:INFO:Pipeline(memory=FastMemory(location=C:\Users\Rania\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'SeniorCitizen',
                                             'tenure', 'MonthlyCharges',
                                             'TotalCharges'],
                                    transformer=SimpleImputer(add_...
                                                                    'DeviceProtection',
                                                                    'TechSupport',
                                                                    'StreamingTV',
                                                                    'StreamingMovies',
                                                                    'Contract',
                                                                    'PaymentMethod'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-12-03 14:30:05,163:INFO:save_model() successfully completed......................................
2023-12-03 14:30:05,250:INFO:SubProcess save_model() end ==================================
2023-12-03 14:30:05,316:INFO:setup() successfully completed in 1.91s...............
2023-12-03 14:31:00,284:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-03 14:31:00,284:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-03 14:31:00,284:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-03 14:31:00,284:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-03 14:31:00,805:INFO:PyCaret ClassificationExperiment
2023-12-03 14:31:00,805:INFO:Logging name: churn1
2023-12-03 14:31:00,805:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-12-03 14:31:00,805:INFO:version 3.2.0
2023-12-03 14:31:00,805:INFO:Initializing setup()
2023-12-03 14:31:00,805:INFO:self.USI: fb0f
2023-12-03 14:31:00,805:INFO:self._variable_keys: {'fold_groups_param', 'pipeline', 'exp_id', 'y_test', 'data', 'memory', 'target_param', 'X', 'y_train', '_ml_usecase', 'idx', 'gpu_n_jobs_param', 'html_param', 'fold_generator', 'fold_shuffle_param', 'is_multiclass', 'gpu_param', 'logging_param', '_available_plots', 'USI', 'n_jobs_param', 'log_plots_param', 'X_train', 'fix_imbalance', 'X_test', 'seed', 'exp_name_log', 'y'}
2023-12-03 14:31:00,805:INFO:Checking environment
2023-12-03 14:31:00,805:INFO:python_version: 3.10.9
2023-12-03 14:31:00,805:INFO:python_build: ('main', 'Mar  8 2023 10:42:25')
2023-12-03 14:31:00,805:INFO:machine: AMD64
2023-12-03 14:31:00,826:INFO:platform: Windows-10-10.0.22621-SP0
2023-12-03 14:31:00,826:INFO:Memory: svmem(total=16866873344, available=9449086976, percent=44.0, used=7417786368, free=9449086976)
2023-12-03 14:31:00,826:INFO:Physical Core: 8
2023-12-03 14:31:00,826:INFO:Logical Core: 16
2023-12-03 14:31:00,826:INFO:Checking libraries
2023-12-03 14:31:00,826:INFO:System:
2023-12-03 14:31:00,826:INFO:    python: 3.10.9 | packaged by Anaconda, Inc. | (main, Mar  8 2023, 10:42:25) [MSC v.1916 64 bit (AMD64)]
2023-12-03 14:31:00,826:INFO:executable: C:\Users\Rania\anaconda3\envs\mlops\python.exe
2023-12-03 14:31:00,826:INFO:   machine: Windows-10-10.0.22621-SP0
2023-12-03 14:31:00,826:INFO:PyCaret required dependencies:
2023-12-03 14:31:00,868:INFO:                 pip: 23.2.1
2023-12-03 14:31:00,868:INFO:          setuptools: 68.0.0
2023-12-03 14:31:00,868:INFO:             pycaret: 3.2.0
2023-12-03 14:31:00,868:INFO:             IPython: 8.18.1
2023-12-03 14:31:00,868:INFO:          ipywidgets: 7.8.1
2023-12-03 14:31:00,868:INFO:                tqdm: 4.66.1
2023-12-03 14:31:00,868:INFO:               numpy: 1.25.2
2023-12-03 14:31:00,868:INFO:              pandas: 1.5.3
2023-12-03 14:31:00,868:INFO:              jinja2: 3.1.2
2023-12-03 14:31:00,868:INFO:               scipy: 1.10.1
2023-12-03 14:31:00,868:INFO:              joblib: 1.3.2
2023-12-03 14:31:00,868:INFO:             sklearn: 1.3.1
2023-12-03 14:31:00,868:INFO:                pyod: 1.1.2
2023-12-03 14:31:00,868:INFO:            imblearn: 0.11.0
2023-12-03 14:31:00,868:INFO:   category_encoders: 2.6.2
2023-12-03 14:31:00,868:INFO:            lightgbm: 4.1.0
2023-12-03 14:31:00,868:INFO:               numba: 0.58.1
2023-12-03 14:31:00,868:INFO:            requests: 2.31.0
2023-12-03 14:31:00,868:INFO:          matplotlib: 3.8.0
2023-12-03 14:31:00,868:INFO:          scikitplot: 0.3.7
2023-12-03 14:31:00,868:INFO:         yellowbrick: 1.5
2023-12-03 14:31:00,868:INFO:              plotly: 5.17.0
2023-12-03 14:31:00,868:INFO:    plotly-resampler: Not installed
2023-12-03 14:31:00,868:INFO:             kaleido: 0.2.1
2023-12-03 14:31:00,868:INFO:           schemdraw: 0.15
2023-12-03 14:31:00,868:INFO:         statsmodels: 0.14.0
2023-12-03 14:31:00,868:INFO:              sktime: 0.21.1
2023-12-03 14:31:00,868:INFO:               tbats: 1.1.3
2023-12-03 14:31:00,868:INFO:            pmdarima: 2.0.4
2023-12-03 14:31:00,868:INFO:              psutil: 5.9.5
2023-12-03 14:31:00,868:INFO:          markupsafe: 2.1.3
2023-12-03 14:31:00,868:INFO:             pickle5: Not installed
2023-12-03 14:31:00,868:INFO:         cloudpickle: 2.2.1
2023-12-03 14:31:00,868:INFO:         deprecation: 2.1.0
2023-12-03 14:31:00,868:INFO:              xxhash: 3.4.1
2023-12-03 14:31:00,868:INFO:           wurlitzer: Not installed
2023-12-03 14:31:00,868:INFO:PyCaret optional dependencies:
2023-12-03 14:31:01,269:INFO:                shap: 0.43.0
2023-12-03 14:31:01,269:INFO:           interpret: Not installed
2023-12-03 14:31:01,269:INFO:                umap: 0.5.5
2023-12-03 14:31:01,269:INFO:     ydata_profiling: Not installed
2023-12-03 14:31:01,269:INFO:  explainerdashboard: Not installed
2023-12-03 14:31:01,269:INFO:             autoviz: Not installed
2023-12-03 14:31:01,269:INFO:           fairlearn: Not installed
2023-12-03 14:31:01,269:INFO:          deepchecks: 0.17.4
2023-12-03 14:31:01,269:INFO:             xgboost: 2.0.0
2023-12-03 14:31:01,269:INFO:            catboost: 1.2.2
2023-12-03 14:31:01,269:INFO:              kmodes: Not installed
2023-12-03 14:31:01,269:INFO:             mlxtend: Not installed
2023-12-03 14:31:01,269:INFO:       statsforecast: Not installed
2023-12-03 14:31:01,269:INFO:        tune_sklearn: Not installed
2023-12-03 14:31:01,269:INFO:                 ray: Not installed
2023-12-03 14:31:01,269:INFO:            hyperopt: Not installed
2023-12-03 14:31:01,269:INFO:              optuna: 3.4.0
2023-12-03 14:31:01,269:INFO:               skopt: Not installed
2023-12-03 14:31:01,269:INFO:              mlflow: 2.8.1
2023-12-03 14:31:01,269:INFO:              gradio: Not installed
2023-12-03 14:31:01,269:INFO:             fastapi: 0.103.2
2023-12-03 14:31:01,269:INFO:             uvicorn: 0.23.2
2023-12-03 14:31:01,269:INFO:              m2cgen: Not installed
2023-12-03 14:31:01,269:INFO:           evidently: Not installed
2023-12-03 14:31:01,269:INFO:               fugue: Not installed
2023-12-03 14:31:01,269:INFO:           streamlit: 1.27.1
2023-12-03 14:31:01,269:INFO:             prophet: Not installed
2023-12-03 14:31:01,269:INFO:None
2023-12-03 14:31:01,269:INFO:Set up data.
2023-12-03 14:31:01,302:INFO:Set up folding strategy.
2023-12-03 14:31:01,302:INFO:Set up train/test split.
2023-12-03 14:31:01,381:INFO:Set up index.
2023-12-03 14:31:01,381:INFO:Assigning column types.
2023-12-03 14:31:01,381:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-12-03 14:31:01,426:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-03 14:31:01,426:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-03 14:31:01,442:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:31:01,442:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:31:01,504:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-03 14:31:01,504:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-03 14:31:01,520:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:31:01,520:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:31:01,520:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-12-03 14:31:01,565:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-03 14:31:01,591:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:31:01,591:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:31:01,622:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-03 14:31:01,638:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:31:01,654:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:31:01,654:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-12-03 14:31:01,700:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:31:01,716:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:31:01,763:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:31:01,763:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:31:01,779:INFO:Preparing preprocessing pipeline...
2023-12-03 14:31:01,779:INFO:Set up label encoding.
2023-12-03 14:31:01,779:INFO:Set up simple imputation.
2023-12-03 14:31:01,779:INFO:Set up encoding of ordinal features.
2023-12-03 14:31:01,779:INFO:Set up encoding of categorical features.
2023-12-03 14:31:01,779:INFO:Set up column name cleaning.
2023-12-03 14:31:02,007:INFO:Finished creating preprocessing pipeline.
2023-12-03 14:31:02,129:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Rania\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'SeniorCitizen',
                                             'tenure', 'MonthlyCharges',
                                             'TotalCharges'],
                                    transformer=SimpleImputer(add_...
                                                                    'DeviceProtection',
                                                                    'TechSupport',
                                                                    'StreamingTV',
                                                                    'StreamingMovies',
                                                                    'Contract',
                                                                    'PaymentMethod'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-12-03 14:31:02,129:INFO:Creating final display dataframe.
2023-12-03 14:31:02,340:INFO:Setup _display_container:                     Description            Value
0                    Session id              123
1                        Target            Churn
2                   Target type           Binary
3                Target mapping    No: 0, Yes: 1
4           Original data shape       (7043, 22)
5        Transformed data shape       (7043, 42)
6   Transformed train set shape       (4930, 42)
7    Transformed test set shape       (2113, 42)
8               Ignore features                1
9              Ordinal features                5
10             Numeric features                5
11         Categorical features               15
12     Rows with missing values             0.2%
13                   Preprocess             True
14              Imputation type           simple
15           Numeric imputation             mean
16       Categorical imputation             mode
17     Maximum one-hot encoding               25
18              Encoding method             None
19               Fold Generator  StratifiedKFold
20                  Fold Number               10
21                     CPU Jobs               -1
22                      Use GPU            False
23               Log Experiment     MlflowLogger
24              Experiment Name           churn1
25                          USI             fb0f
2023-12-03 14:31:02,433:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:31:02,433:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:31:02,524:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:31:02,524:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:31:02,524:INFO:Logging experiment in loggers
2023-12-03 14:31:02,891:INFO:SubProcess save_model() called ==================================
2023-12-03 14:31:03,090:INFO:Initializing save_model()
2023-12-03 14:31:03,090:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\Rania\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'SeniorCitizen',
                                             'tenure', 'MonthlyCharges',
                                             'TotalCharges'],
                                    transformer=SimpleImputer(add_...
                                                                    'DeviceProtection',
                                                                    'TechSupport',
                                                                    'StreamingTV',
                                                                    'StreamingMovies',
                                                                    'Contract',
                                                                    'PaymentMethod'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), model_name=C:\Users\Rania\AppData\Local\Temp\tmpfluct320\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Rania\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'SeniorCitizen',
                                             'tenure', 'MonthlyCharges',
                                             'TotalCharges'],
                                    transformer=SimpleImputer(add_...
                                                                    'DeviceProtection',
                                                                    'TechSupport',
                                                                    'StreamingTV',
                                                                    'StreamingMovies',
                                                                    'Contract',
                                                                    'PaymentMethod'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2023-12-03 14:31:03,090:INFO:Adding model into prep_pipe
2023-12-03 14:31:03,090:WARNING:Only Model saved as it was a pipeline.
2023-12-03 14:31:03,114:INFO:C:\Users\Rania\AppData\Local\Temp\tmpfluct320\Transformation Pipeline.pkl saved in current working directory
2023-12-03 14:31:03,245:INFO:Pipeline(memory=FastMemory(location=C:\Users\Rania\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'SeniorCitizen',
                                             'tenure', 'MonthlyCharges',
                                             'TotalCharges'],
                                    transformer=SimpleImputer(add_...
                                                                    'DeviceProtection',
                                                                    'TechSupport',
                                                                    'StreamingTV',
                                                                    'StreamingMovies',
                                                                    'Contract',
                                                                    'PaymentMethod'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-12-03 14:31:03,245:INFO:save_model() successfully completed......................................
2023-12-03 14:31:03,332:INFO:SubProcess save_model() end ==================================
2023-12-03 14:31:03,416:INFO:setup() successfully completed in 1.72s...............
2023-12-03 14:39:56,560:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-03 14:39:56,560:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-03 14:39:56,560:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-03 14:39:56,560:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-03 14:39:57,205:INFO:PyCaret ClassificationExperiment
2023-12-03 14:39:57,205:INFO:Logging name: churn1
2023-12-03 14:39:57,205:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-12-03 14:39:57,205:INFO:version 3.2.0
2023-12-03 14:39:57,205:INFO:Initializing setup()
2023-12-03 14:39:57,205:INFO:self.USI: e56c
2023-12-03 14:39:57,205:INFO:self._variable_keys: {'y_train', 'fold_generator', 'fix_imbalance', 'X_train', 'fold_groups_param', 'target_param', 'X_test', 'y', 'gpu_n_jobs_param', 'html_param', 'pipeline', 'USI', 'logging_param', 'log_plots_param', 'exp_id', '_available_plots', 'is_multiclass', 'n_jobs_param', 'memory', 'X', 'y_test', '_ml_usecase', 'exp_name_log', 'data', 'gpu_param', 'seed', 'idx', 'fold_shuffle_param'}
2023-12-03 14:39:57,205:INFO:Checking environment
2023-12-03 14:39:57,205:INFO:python_version: 3.10.9
2023-12-03 14:39:57,205:INFO:python_build: ('main', 'Mar  8 2023 10:42:25')
2023-12-03 14:39:57,205:INFO:machine: AMD64
2023-12-03 14:39:57,221:INFO:platform: Windows-10-10.0.22621-SP0
2023-12-03 14:39:57,221:INFO:Memory: svmem(total=16866873344, available=9496879104, percent=43.7, used=7369994240, free=9496879104)
2023-12-03 14:39:57,221:INFO:Physical Core: 8
2023-12-03 14:39:57,221:INFO:Logical Core: 16
2023-12-03 14:39:57,221:INFO:Checking libraries
2023-12-03 14:39:57,221:INFO:System:
2023-12-03 14:39:57,221:INFO:    python: 3.10.9 | packaged by Anaconda, Inc. | (main, Mar  8 2023, 10:42:25) [MSC v.1916 64 bit (AMD64)]
2023-12-03 14:39:57,221:INFO:executable: C:\Users\Rania\anaconda3\envs\mlops\python.exe
2023-12-03 14:39:57,221:INFO:   machine: Windows-10-10.0.22621-SP0
2023-12-03 14:39:57,221:INFO:PyCaret required dependencies:
2023-12-03 14:39:57,253:INFO:                 pip: 23.2.1
2023-12-03 14:39:57,253:INFO:          setuptools: 68.0.0
2023-12-03 14:39:57,253:INFO:             pycaret: 3.2.0
2023-12-03 14:39:57,253:INFO:             IPython: 8.18.1
2023-12-03 14:39:57,253:INFO:          ipywidgets: 7.8.1
2023-12-03 14:39:57,253:INFO:                tqdm: 4.66.1
2023-12-03 14:39:57,253:INFO:               numpy: 1.25.2
2023-12-03 14:39:57,253:INFO:              pandas: 1.5.3
2023-12-03 14:39:57,253:INFO:              jinja2: 3.1.2
2023-12-03 14:39:57,253:INFO:               scipy: 1.10.1
2023-12-03 14:39:57,253:INFO:              joblib: 1.3.2
2023-12-03 14:39:57,253:INFO:             sklearn: 1.3.1
2023-12-03 14:39:57,253:INFO:                pyod: 1.1.2
2023-12-03 14:39:57,253:INFO:            imblearn: 0.11.0
2023-12-03 14:39:57,253:INFO:   category_encoders: 2.6.2
2023-12-03 14:39:57,253:INFO:            lightgbm: 4.1.0
2023-12-03 14:39:57,253:INFO:               numba: 0.58.1
2023-12-03 14:39:57,253:INFO:            requests: 2.31.0
2023-12-03 14:39:57,253:INFO:          matplotlib: 3.8.0
2023-12-03 14:39:57,253:INFO:          scikitplot: 0.3.7
2023-12-03 14:39:57,253:INFO:         yellowbrick: 1.5
2023-12-03 14:39:57,253:INFO:              plotly: 5.17.0
2023-12-03 14:39:57,253:INFO:    plotly-resampler: Not installed
2023-12-03 14:39:57,253:INFO:             kaleido: 0.2.1
2023-12-03 14:39:57,253:INFO:           schemdraw: 0.15
2023-12-03 14:39:57,253:INFO:         statsmodels: 0.14.0
2023-12-03 14:39:57,253:INFO:              sktime: 0.21.1
2023-12-03 14:39:57,253:INFO:               tbats: 1.1.3
2023-12-03 14:39:57,253:INFO:            pmdarima: 2.0.4
2023-12-03 14:39:57,253:INFO:              psutil: 5.9.5
2023-12-03 14:39:57,253:INFO:          markupsafe: 2.1.3
2023-12-03 14:39:57,253:INFO:             pickle5: Not installed
2023-12-03 14:39:57,253:INFO:         cloudpickle: 2.2.1
2023-12-03 14:39:57,253:INFO:         deprecation: 2.1.0
2023-12-03 14:39:57,253:INFO:              xxhash: 3.4.1
2023-12-03 14:39:57,253:INFO:           wurlitzer: Not installed
2023-12-03 14:39:57,253:INFO:PyCaret optional dependencies:
2023-12-03 14:39:57,643:INFO:                shap: 0.43.0
2023-12-03 14:39:57,643:INFO:           interpret: Not installed
2023-12-03 14:39:57,643:INFO:                umap: 0.5.5
2023-12-03 14:39:57,643:INFO:     ydata_profiling: Not installed
2023-12-03 14:39:57,643:INFO:  explainerdashboard: Not installed
2023-12-03 14:39:57,643:INFO:             autoviz: Not installed
2023-12-03 14:39:57,643:INFO:           fairlearn: Not installed
2023-12-03 14:39:57,643:INFO:          deepchecks: 0.17.4
2023-12-03 14:39:57,643:INFO:             xgboost: 2.0.0
2023-12-03 14:39:57,643:INFO:            catboost: 1.2.2
2023-12-03 14:39:57,643:INFO:              kmodes: Not installed
2023-12-03 14:39:57,643:INFO:             mlxtend: Not installed
2023-12-03 14:39:57,643:INFO:       statsforecast: Not installed
2023-12-03 14:39:57,643:INFO:        tune_sklearn: Not installed
2023-12-03 14:39:57,643:INFO:                 ray: Not installed
2023-12-03 14:39:57,643:INFO:            hyperopt: Not installed
2023-12-03 14:39:57,643:INFO:              optuna: 3.4.0
2023-12-03 14:39:57,643:INFO:               skopt: Not installed
2023-12-03 14:39:57,643:INFO:              mlflow: 2.8.1
2023-12-03 14:39:57,643:INFO:              gradio: Not installed
2023-12-03 14:39:57,643:INFO:             fastapi: 0.103.2
2023-12-03 14:39:57,643:INFO:             uvicorn: 0.23.2
2023-12-03 14:39:57,643:INFO:              m2cgen: Not installed
2023-12-03 14:39:57,643:INFO:           evidently: Not installed
2023-12-03 14:39:57,643:INFO:               fugue: Not installed
2023-12-03 14:39:57,643:INFO:           streamlit: 1.27.1
2023-12-03 14:39:57,643:INFO:             prophet: Not installed
2023-12-03 14:39:57,643:INFO:None
2023-12-03 14:39:57,643:INFO:Set up data.
2023-12-03 14:39:57,659:INFO:Set up folding strategy.
2023-12-03 14:39:57,659:INFO:Set up train/test split.
2023-12-03 14:39:57,745:INFO:Set up index.
2023-12-03 14:39:57,745:INFO:Assigning column types.
2023-12-03 14:39:57,745:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-12-03 14:39:57,776:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-03 14:39:57,776:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-03 14:39:57,808:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:39:57,808:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:39:57,871:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-03 14:39:57,873:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-03 14:39:57,902:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:39:57,902:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:39:57,902:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-12-03 14:39:57,933:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-03 14:39:57,949:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:39:57,965:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:39:57,996:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-03 14:39:58,012:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:39:58,012:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:39:58,012:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-12-03 14:39:58,090:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:39:58,090:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:39:58,153:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:39:58,153:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:39:58,153:INFO:Preparing preprocessing pipeline...
2023-12-03 14:39:58,153:INFO:Set up label encoding.
2023-12-03 14:39:58,153:INFO:Set up simple imputation.
2023-12-03 14:39:58,153:INFO:Set up encoding of ordinal features.
2023-12-03 14:39:58,168:INFO:Set up encoding of categorical features.
2023-12-03 14:39:58,168:INFO:Set up column name cleaning.
2023-12-03 14:39:58,353:INFO:Finished creating preprocessing pipeline.
2023-12-03 14:39:58,450:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Rania\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'SeniorCitizen',
                                             'tenure', 'MonthlyCharges',
                                             'TotalCharges'],
                                    transformer=SimpleImputer(add_...
                                                                    'DeviceProtection',
                                                                    'TechSupport',
                                                                    'StreamingTV',
                                                                    'StreamingMovies',
                                                                    'Contract',
                                                                    'PaymentMethod'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-12-03 14:39:58,450:INFO:Creating final display dataframe.
2023-12-03 14:39:58,613:INFO:Setup _display_container:                     Description            Value
0                    Session id              123
1                        Target            Churn
2                   Target type           Binary
3                Target mapping    No: 0, Yes: 1
4           Original data shape       (7043, 22)
5        Transformed data shape       (7043, 42)
6   Transformed train set shape       (4930, 42)
7    Transformed test set shape       (2113, 42)
8               Ignore features                1
9              Ordinal features                5
10             Numeric features                5
11         Categorical features               15
12     Rows with missing values             0.2%
13                   Preprocess             True
14              Imputation type           simple
15           Numeric imputation             mean
16       Categorical imputation             mode
17     Maximum one-hot encoding               25
18              Encoding method             None
19               Fold Generator  StratifiedKFold
20                  Fold Number               10
21                     CPU Jobs               -1
22                      Use GPU            False
23               Log Experiment     MlflowLogger
24              Experiment Name           churn1
25                          USI             e56c
2023-12-03 14:39:58,698:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:39:58,698:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:39:58,776:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:39:58,777:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:39:58,777:INFO:Logging experiment in loggers
2023-12-03 14:39:59,092:INFO:SubProcess save_model() called ==================================
2023-12-03 14:39:59,305:INFO:Initializing save_model()
2023-12-03 14:39:59,305:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\Rania\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'SeniorCitizen',
                                             'tenure', 'MonthlyCharges',
                                             'TotalCharges'],
                                    transformer=SimpleImputer(add_...
                                                                    'DeviceProtection',
                                                                    'TechSupport',
                                                                    'StreamingTV',
                                                                    'StreamingMovies',
                                                                    'Contract',
                                                                    'PaymentMethod'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), model_name=C:\Users\Rania\AppData\Local\Temp\tmp61qbe8z4\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Rania\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'SeniorCitizen',
                                             'tenure', 'MonthlyCharges',
                                             'TotalCharges'],
                                    transformer=SimpleImputer(add_...
                                                                    'DeviceProtection',
                                                                    'TechSupport',
                                                                    'StreamingTV',
                                                                    'StreamingMovies',
                                                                    'Contract',
                                                                    'PaymentMethod'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2023-12-03 14:39:59,305:INFO:Adding model into prep_pipe
2023-12-03 14:39:59,305:WARNING:Only Model saved as it was a pipeline.
2023-12-03 14:39:59,315:INFO:C:\Users\Rania\AppData\Local\Temp\tmp61qbe8z4\Transformation Pipeline.pkl saved in current working directory
2023-12-03 14:39:59,362:INFO:Pipeline(memory=FastMemory(location=C:\Users\Rania\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'SeniorCitizen',
                                             'tenure', 'MonthlyCharges',
                                             'TotalCharges'],
                                    transformer=SimpleImputer(add_...
                                                                    'DeviceProtection',
                                                                    'TechSupport',
                                                                    'StreamingTV',
                                                                    'StreamingMovies',
                                                                    'Contract',
                                                                    'PaymentMethod'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-12-03 14:39:59,362:INFO:save_model() successfully completed......................................
2023-12-03 14:39:59,440:INFO:SubProcess save_model() end ==================================
2023-12-03 14:39:59,456:INFO:setup() successfully completed in 1.57s...............
2023-12-03 14:40:46,761:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-03 14:40:46,761:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-03 14:40:46,761:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-03 14:40:46,761:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-03 14:40:47,223:INFO:PyCaret ClassificationExperiment
2023-12-03 14:40:47,223:INFO:Logging name: churn1
2023-12-03 14:40:47,223:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-12-03 14:40:47,223:INFO:version 3.2.0
2023-12-03 14:40:47,223:INFO:Initializing setup()
2023-12-03 14:40:47,223:INFO:self.USI: 2606
2023-12-03 14:40:47,223:INFO:self._variable_keys: {'exp_id', 'gpu_param', 'log_plots_param', 'X', 'X_train', 'gpu_n_jobs_param', 'target_param', 'fold_generator', 'memory', 'html_param', 'seed', '_ml_usecase', 'y_train', 'USI', 'logging_param', 'y_test', 'fold_groups_param', 'X_test', 'fold_shuffle_param', 'fix_imbalance', '_available_plots', 'data', 'pipeline', 'n_jobs_param', 'exp_name_log', 'is_multiclass', 'y', 'idx'}
2023-12-03 14:40:47,223:INFO:Checking environment
2023-12-03 14:40:47,223:INFO:python_version: 3.10.9
2023-12-03 14:40:47,223:INFO:python_build: ('main', 'Mar  8 2023 10:42:25')
2023-12-03 14:40:47,223:INFO:machine: AMD64
2023-12-03 14:40:47,238:INFO:platform: Windows-10-10.0.22621-SP0
2023-12-03 14:40:47,238:INFO:Memory: svmem(total=16866873344, available=9521283072, percent=43.6, used=7345590272, free=9521283072)
2023-12-03 14:40:47,238:INFO:Physical Core: 8
2023-12-03 14:40:47,238:INFO:Logical Core: 16
2023-12-03 14:40:47,238:INFO:Checking libraries
2023-12-03 14:40:47,238:INFO:System:
2023-12-03 14:40:47,238:INFO:    python: 3.10.9 | packaged by Anaconda, Inc. | (main, Mar  8 2023, 10:42:25) [MSC v.1916 64 bit (AMD64)]
2023-12-03 14:40:47,238:INFO:executable: C:\Users\Rania\anaconda3\envs\mlops\python.exe
2023-12-03 14:40:47,238:INFO:   machine: Windows-10-10.0.22621-SP0
2023-12-03 14:40:47,238:INFO:PyCaret required dependencies:
2023-12-03 14:40:47,269:INFO:                 pip: 23.2.1
2023-12-03 14:40:47,269:INFO:          setuptools: 68.0.0
2023-12-03 14:40:47,269:INFO:             pycaret: 3.2.0
2023-12-03 14:40:47,269:INFO:             IPython: 8.18.1
2023-12-03 14:40:47,269:INFO:          ipywidgets: 7.8.1
2023-12-03 14:40:47,269:INFO:                tqdm: 4.66.1
2023-12-03 14:40:47,269:INFO:               numpy: 1.25.2
2023-12-03 14:40:47,269:INFO:              pandas: 1.5.3
2023-12-03 14:40:47,269:INFO:              jinja2: 3.1.2
2023-12-03 14:40:47,269:INFO:               scipy: 1.10.1
2023-12-03 14:40:47,269:INFO:              joblib: 1.3.2
2023-12-03 14:40:47,269:INFO:             sklearn: 1.3.1
2023-12-03 14:40:47,269:INFO:                pyod: 1.1.2
2023-12-03 14:40:47,269:INFO:            imblearn: 0.11.0
2023-12-03 14:40:47,269:INFO:   category_encoders: 2.6.2
2023-12-03 14:40:47,269:INFO:            lightgbm: 4.1.0
2023-12-03 14:40:47,269:INFO:               numba: 0.58.1
2023-12-03 14:40:47,269:INFO:            requests: 2.31.0
2023-12-03 14:40:47,269:INFO:          matplotlib: 3.8.0
2023-12-03 14:40:47,269:INFO:          scikitplot: 0.3.7
2023-12-03 14:40:47,269:INFO:         yellowbrick: 1.5
2023-12-03 14:40:47,269:INFO:              plotly: 5.17.0
2023-12-03 14:40:47,269:INFO:    plotly-resampler: Not installed
2023-12-03 14:40:47,269:INFO:             kaleido: 0.2.1
2023-12-03 14:40:47,269:INFO:           schemdraw: 0.15
2023-12-03 14:40:47,269:INFO:         statsmodels: 0.14.0
2023-12-03 14:40:47,269:INFO:              sktime: 0.21.1
2023-12-03 14:40:47,269:INFO:               tbats: 1.1.3
2023-12-03 14:40:47,269:INFO:            pmdarima: 2.0.4
2023-12-03 14:40:47,285:INFO:              psutil: 5.9.5
2023-12-03 14:40:47,285:INFO:          markupsafe: 2.1.3
2023-12-03 14:40:47,285:INFO:             pickle5: Not installed
2023-12-03 14:40:47,285:INFO:         cloudpickle: 2.2.1
2023-12-03 14:40:47,285:INFO:         deprecation: 2.1.0
2023-12-03 14:40:47,285:INFO:              xxhash: 3.4.1
2023-12-03 14:40:47,285:INFO:           wurlitzer: Not installed
2023-12-03 14:40:47,285:INFO:PyCaret optional dependencies:
2023-12-03 14:40:47,690:INFO:                shap: 0.43.0
2023-12-03 14:40:47,690:INFO:           interpret: Not installed
2023-12-03 14:40:47,690:INFO:                umap: 0.5.5
2023-12-03 14:40:47,690:INFO:     ydata_profiling: Not installed
2023-12-03 14:40:47,690:INFO:  explainerdashboard: Not installed
2023-12-03 14:40:47,690:INFO:             autoviz: Not installed
2023-12-03 14:40:47,690:INFO:           fairlearn: Not installed
2023-12-03 14:40:47,690:INFO:          deepchecks: 0.17.4
2023-12-03 14:40:47,690:INFO:             xgboost: 2.0.0
2023-12-03 14:40:47,690:INFO:            catboost: 1.2.2
2023-12-03 14:40:47,690:INFO:              kmodes: Not installed
2023-12-03 14:40:47,690:INFO:             mlxtend: Not installed
2023-12-03 14:40:47,690:INFO:       statsforecast: Not installed
2023-12-03 14:40:47,690:INFO:        tune_sklearn: Not installed
2023-12-03 14:40:47,690:INFO:                 ray: Not installed
2023-12-03 14:40:47,690:INFO:            hyperopt: Not installed
2023-12-03 14:40:47,690:INFO:              optuna: 3.4.0
2023-12-03 14:40:47,690:INFO:               skopt: Not installed
2023-12-03 14:40:47,690:INFO:              mlflow: 2.8.1
2023-12-03 14:40:47,690:INFO:              gradio: Not installed
2023-12-03 14:40:47,690:INFO:             fastapi: 0.103.2
2023-12-03 14:40:47,690:INFO:             uvicorn: 0.23.2
2023-12-03 14:40:47,690:INFO:              m2cgen: Not installed
2023-12-03 14:40:47,690:INFO:           evidently: Not installed
2023-12-03 14:40:47,690:INFO:               fugue: Not installed
2023-12-03 14:40:47,690:INFO:           streamlit: 1.27.1
2023-12-03 14:40:47,690:INFO:             prophet: Not installed
2023-12-03 14:40:47,690:INFO:None
2023-12-03 14:40:47,690:INFO:Set up data.
2023-12-03 14:40:47,706:INFO:Set up folding strategy.
2023-12-03 14:40:47,706:INFO:Set up train/test split.
2023-12-03 14:40:47,784:INFO:Set up index.
2023-12-03 14:40:47,784:INFO:Assigning column types.
2023-12-03 14:40:47,784:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-12-03 14:40:47,831:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-03 14:40:47,831:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-03 14:40:47,846:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:40:47,846:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:40:47,909:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-03 14:40:47,909:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-03 14:40:47,940:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:40:47,940:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:40:47,940:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-12-03 14:40:47,985:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-03 14:40:47,995:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:40:47,995:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:40:48,042:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-03 14:40:48,074:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:40:48,074:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:40:48,074:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-12-03 14:40:48,136:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:40:48,136:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:40:48,199:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:40:48,199:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:40:48,199:INFO:Preparing preprocessing pipeline...
2023-12-03 14:40:48,199:INFO:Set up label encoding.
2023-12-03 14:40:48,199:INFO:Set up simple imputation.
2023-12-03 14:40:48,214:INFO:Set up encoding of ordinal features.
2023-12-03 14:40:48,214:INFO:Set up encoding of categorical features.
2023-12-03 14:40:48,214:INFO:Set up column name cleaning.
2023-12-03 14:40:48,371:INFO:Finished creating preprocessing pipeline.
2023-12-03 14:40:48,433:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Rania\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'SeniorCitizen',
                                             'tenure', 'MonthlyCharges',
                                             'TotalCharges'],
                                    transformer=SimpleImputer(add_...
                                                                    'DeviceProtection',
                                                                    'TechSupport',
                                                                    'StreamingTV',
                                                                    'StreamingMovies',
                                                                    'Contract',
                                                                    'PaymentMethod'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-12-03 14:40:48,433:INFO:Creating final display dataframe.
2023-12-03 14:40:48,552:INFO:Setup _display_container:                     Description            Value
0                    Session id              123
1                        Target            Churn
2                   Target type           Binary
3                Target mapping    No: 0, Yes: 1
4           Original data shape       (7043, 22)
5        Transformed data shape       (7043, 42)
6   Transformed train set shape       (4930, 42)
7    Transformed test set shape       (2113, 42)
8               Ignore features                1
9              Ordinal features                5
10             Numeric features                5
11         Categorical features               15
12     Rows with missing values             0.2%
13                   Preprocess             True
14              Imputation type           simple
15           Numeric imputation             mean
16       Categorical imputation             mode
17     Maximum one-hot encoding               25
18              Encoding method             None
19               Fold Generator  StratifiedKFold
20                  Fold Number               10
21                     CPU Jobs               -1
22                      Use GPU            False
23               Log Experiment     MlflowLogger
24              Experiment Name           churn1
25                          USI             2606
2023-12-03 14:40:48,648:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:40:48,659:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:40:48,721:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:40:48,721:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:40:48,721:INFO:Logging experiment in loggers
2023-12-03 14:40:49,020:INFO:SubProcess save_model() called ==================================
2023-12-03 14:40:49,138:INFO:Initializing save_model()
2023-12-03 14:40:49,138:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\Rania\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'SeniorCitizen',
                                             'tenure', 'MonthlyCharges',
                                             'TotalCharges'],
                                    transformer=SimpleImputer(add_...
                                                                    'DeviceProtection',
                                                                    'TechSupport',
                                                                    'StreamingTV',
                                                                    'StreamingMovies',
                                                                    'Contract',
                                                                    'PaymentMethod'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), model_name=C:\Users\Rania\AppData\Local\Temp\tmpwlnufhpr\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Rania\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'SeniorCitizen',
                                             'tenure', 'MonthlyCharges',
                                             'TotalCharges'],
                                    transformer=SimpleImputer(add_...
                                                                    'DeviceProtection',
                                                                    'TechSupport',
                                                                    'StreamingTV',
                                                                    'StreamingMovies',
                                                                    'Contract',
                                                                    'PaymentMethod'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2023-12-03 14:40:49,138:INFO:Adding model into prep_pipe
2023-12-03 14:40:49,138:WARNING:Only Model saved as it was a pipeline.
2023-12-03 14:40:49,169:INFO:C:\Users\Rania\AppData\Local\Temp\tmpwlnufhpr\Transformation Pipeline.pkl saved in current working directory
2023-12-03 14:40:49,216:INFO:Pipeline(memory=FastMemory(location=C:\Users\Rania\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'SeniorCitizen',
                                             'tenure', 'MonthlyCharges',
                                             'TotalCharges'],
                                    transformer=SimpleImputer(add_...
                                                                    'DeviceProtection',
                                                                    'TechSupport',
                                                                    'StreamingTV',
                                                                    'StreamingMovies',
                                                                    'Contract',
                                                                    'PaymentMethod'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-12-03 14:40:49,216:INFO:save_model() successfully completed......................................
2023-12-03 14:40:49,281:INFO:SubProcess save_model() end ==================================
2023-12-03 14:40:49,310:INFO:setup() successfully completed in 1.5s...............
2023-12-03 14:41:55,784:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-03 14:41:55,784:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-03 14:41:55,784:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-03 14:41:55,784:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-03 14:41:56,412:INFO:PyCaret ClassificationExperiment
2023-12-03 14:41:56,412:INFO:Logging name: churn1
2023-12-03 14:41:56,412:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-12-03 14:41:56,412:INFO:version 3.2.0
2023-12-03 14:41:56,412:INFO:Initializing setup()
2023-12-03 14:41:56,412:INFO:self.USI: 5397
2023-12-03 14:41:56,412:INFO:self._variable_keys: {'fold_groups_param', '_ml_usecase', 'data', 'memory', 'fold_shuffle_param', 'is_multiclass', 'pipeline', 'n_jobs_param', 'seed', 'gpu_param', 'exp_name_log', 'idx', 'target_param', '_available_plots', 'html_param', 'X', 'USI', 'exp_id', 'fix_imbalance', 'X_train', 'X_test', 'logging_param', 'y', 'gpu_n_jobs_param', 'log_plots_param', 'y_test', 'fold_generator', 'y_train'}
2023-12-03 14:41:56,412:INFO:Checking environment
2023-12-03 14:41:56,412:INFO:python_version: 3.10.9
2023-12-03 14:41:56,412:INFO:python_build: ('main', 'Mar  8 2023 10:42:25')
2023-12-03 14:41:56,412:INFO:machine: AMD64
2023-12-03 14:41:56,427:INFO:platform: Windows-10-10.0.22621-SP0
2023-12-03 14:41:56,427:INFO:Memory: svmem(total=16866873344, available=9451028480, percent=44.0, used=7415844864, free=9451028480)
2023-12-03 14:41:56,427:INFO:Physical Core: 8
2023-12-03 14:41:56,427:INFO:Logical Core: 16
2023-12-03 14:41:56,427:INFO:Checking libraries
2023-12-03 14:41:56,427:INFO:System:
2023-12-03 14:41:56,427:INFO:    python: 3.10.9 | packaged by Anaconda, Inc. | (main, Mar  8 2023, 10:42:25) [MSC v.1916 64 bit (AMD64)]
2023-12-03 14:41:56,427:INFO:executable: C:\Users\Rania\anaconda3\envs\mlops\python.exe
2023-12-03 14:41:56,427:INFO:   machine: Windows-10-10.0.22621-SP0
2023-12-03 14:41:56,427:INFO:PyCaret required dependencies:
2023-12-03 14:41:56,475:INFO:                 pip: 23.2.1
2023-12-03 14:41:56,475:INFO:          setuptools: 68.0.0
2023-12-03 14:41:56,475:INFO:             pycaret: 3.2.0
2023-12-03 14:41:56,475:INFO:             IPython: 8.18.1
2023-12-03 14:41:56,475:INFO:          ipywidgets: 7.8.1
2023-12-03 14:41:56,475:INFO:                tqdm: 4.66.1
2023-12-03 14:41:56,475:INFO:               numpy: 1.25.2
2023-12-03 14:41:56,475:INFO:              pandas: 1.5.3
2023-12-03 14:41:56,475:INFO:              jinja2: 3.1.2
2023-12-03 14:41:56,475:INFO:               scipy: 1.10.1
2023-12-03 14:41:56,475:INFO:              joblib: 1.3.2
2023-12-03 14:41:56,475:INFO:             sklearn: 1.3.1
2023-12-03 14:41:56,475:INFO:                pyod: 1.1.2
2023-12-03 14:41:56,475:INFO:            imblearn: 0.11.0
2023-12-03 14:41:56,475:INFO:   category_encoders: 2.6.2
2023-12-03 14:41:56,475:INFO:            lightgbm: 4.1.0
2023-12-03 14:41:56,475:INFO:               numba: 0.58.1
2023-12-03 14:41:56,475:INFO:            requests: 2.31.0
2023-12-03 14:41:56,475:INFO:          matplotlib: 3.8.0
2023-12-03 14:41:56,475:INFO:          scikitplot: 0.3.7
2023-12-03 14:41:56,475:INFO:         yellowbrick: 1.5
2023-12-03 14:41:56,475:INFO:              plotly: 5.17.0
2023-12-03 14:41:56,475:INFO:    plotly-resampler: Not installed
2023-12-03 14:41:56,475:INFO:             kaleido: 0.2.1
2023-12-03 14:41:56,475:INFO:           schemdraw: 0.15
2023-12-03 14:41:56,475:INFO:         statsmodels: 0.14.0
2023-12-03 14:41:56,475:INFO:              sktime: 0.21.1
2023-12-03 14:41:56,475:INFO:               tbats: 1.1.3
2023-12-03 14:41:56,475:INFO:            pmdarima: 2.0.4
2023-12-03 14:41:56,475:INFO:              psutil: 5.9.5
2023-12-03 14:41:56,475:INFO:          markupsafe: 2.1.3
2023-12-03 14:41:56,475:INFO:             pickle5: Not installed
2023-12-03 14:41:56,475:INFO:         cloudpickle: 2.2.1
2023-12-03 14:41:56,475:INFO:         deprecation: 2.1.0
2023-12-03 14:41:56,475:INFO:              xxhash: 3.4.1
2023-12-03 14:41:56,475:INFO:           wurlitzer: Not installed
2023-12-03 14:41:56,475:INFO:PyCaret optional dependencies:
2023-12-03 14:41:56,855:INFO:                shap: 0.43.0
2023-12-03 14:41:56,855:INFO:           interpret: Not installed
2023-12-03 14:41:56,855:INFO:                umap: 0.5.5
2023-12-03 14:41:56,855:INFO:     ydata_profiling: Not installed
2023-12-03 14:41:56,855:INFO:  explainerdashboard: Not installed
2023-12-03 14:41:56,855:INFO:             autoviz: Not installed
2023-12-03 14:41:56,855:INFO:           fairlearn: Not installed
2023-12-03 14:41:56,855:INFO:          deepchecks: 0.17.4
2023-12-03 14:41:56,855:INFO:             xgboost: 2.0.0
2023-12-03 14:41:56,855:INFO:            catboost: 1.2.2
2023-12-03 14:41:56,855:INFO:              kmodes: Not installed
2023-12-03 14:41:56,855:INFO:             mlxtend: Not installed
2023-12-03 14:41:56,855:INFO:       statsforecast: Not installed
2023-12-03 14:41:56,855:INFO:        tune_sklearn: Not installed
2023-12-03 14:41:56,855:INFO:                 ray: Not installed
2023-12-03 14:41:56,855:INFO:            hyperopt: Not installed
2023-12-03 14:41:56,855:INFO:              optuna: 3.4.0
2023-12-03 14:41:56,855:INFO:               skopt: Not installed
2023-12-03 14:41:56,855:INFO:              mlflow: 2.8.1
2023-12-03 14:41:56,855:INFO:              gradio: Not installed
2023-12-03 14:41:56,855:INFO:             fastapi: 0.103.2
2023-12-03 14:41:56,855:INFO:             uvicorn: 0.23.2
2023-12-03 14:41:56,855:INFO:              m2cgen: Not installed
2023-12-03 14:41:56,855:INFO:           evidently: Not installed
2023-12-03 14:41:56,855:INFO:               fugue: Not installed
2023-12-03 14:41:56,855:INFO:           streamlit: 1.27.1
2023-12-03 14:41:56,855:INFO:             prophet: Not installed
2023-12-03 14:41:56,855:INFO:None
2023-12-03 14:41:56,855:INFO:Set up data.
2023-12-03 14:41:56,895:INFO:Set up folding strategy.
2023-12-03 14:41:56,895:INFO:Set up train/test split.
2023-12-03 14:41:57,020:INFO:Set up index.
2023-12-03 14:41:57,025:INFO:Assigning column types.
2023-12-03 14:41:57,027:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-12-03 14:41:57,090:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-03 14:41:57,095:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-03 14:41:57,127:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:41:57,127:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:41:57,209:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-03 14:41:57,212:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-03 14:41:57,243:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:41:57,243:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:41:57,251:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-12-03 14:41:57,319:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-03 14:41:57,351:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:41:57,351:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:41:57,391:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-03 14:41:57,423:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:41:57,423:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:41:57,423:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-12-03 14:41:57,493:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:41:57,493:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:41:57,545:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:41:57,545:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:41:57,545:INFO:Preparing preprocessing pipeline...
2023-12-03 14:41:57,545:INFO:Set up label encoding.
2023-12-03 14:41:57,545:INFO:Set up simple imputation.
2023-12-03 14:41:57,560:INFO:Set up encoding of ordinal features.
2023-12-03 14:41:57,560:INFO:Set up encoding of categorical features.
2023-12-03 14:41:57,560:INFO:Set up column name cleaning.
2023-12-03 14:41:57,794:INFO:Finished creating preprocessing pipeline.
2023-12-03 14:41:57,930:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Rania\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'SeniorCitizen',
                                             'tenure', 'MonthlyCharges',
                                             'TotalCharges'],
                                    transformer=SimpleImputer(add_...
                                                                    'DeviceProtection',
                                                                    'TechSupport',
                                                                    'StreamingTV',
                                                                    'StreamingMovies',
                                                                    'Contract',
                                                                    'PaymentMethod'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-12-03 14:41:57,930:INFO:Creating final display dataframe.
2023-12-03 14:41:58,128:INFO:Setup _display_container:                     Description            Value
0                    Session id              123
1                        Target            Churn
2                   Target type           Binary
3                Target mapping    No: 0, Yes: 1
4           Original data shape       (7043, 22)
5        Transformed data shape       (7043, 42)
6   Transformed train set shape       (4930, 42)
7    Transformed test set shape       (2113, 42)
8               Ignore features                1
9              Ordinal features                5
10             Numeric features                5
11         Categorical features               15
12     Rows with missing values             0.2%
13                   Preprocess             True
14              Imputation type           simple
15           Numeric imputation             mean
16       Categorical imputation             mode
17     Maximum one-hot encoding               25
18              Encoding method             None
19               Fold Generator  StratifiedKFold
20                  Fold Number               10
21                     CPU Jobs               -1
22                      Use GPU            False
23               Log Experiment     MlflowLogger
24              Experiment Name           churn1
25                          USI             5397
2023-12-03 14:41:58,228:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:41:58,232:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:41:58,306:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:41:58,306:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:41:58,306:INFO:Logging experiment in loggers
2023-12-03 14:41:58,578:INFO:SubProcess save_model() called ==================================
2023-12-03 14:41:58,696:INFO:Initializing save_model()
2023-12-03 14:41:58,696:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\Rania\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'SeniorCitizen',
                                             'tenure', 'MonthlyCharges',
                                             'TotalCharges'],
                                    transformer=SimpleImputer(add_...
                                                                    'DeviceProtection',
                                                                    'TechSupport',
                                                                    'StreamingTV',
                                                                    'StreamingMovies',
                                                                    'Contract',
                                                                    'PaymentMethod'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), model_name=C:\Users\Rania\AppData\Local\Temp\tmpnpkzek1n\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Rania\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'SeniorCitizen',
                                             'tenure', 'MonthlyCharges',
                                             'TotalCharges'],
                                    transformer=SimpleImputer(add_...
                                                                    'DeviceProtection',
                                                                    'TechSupport',
                                                                    'StreamingTV',
                                                                    'StreamingMovies',
                                                                    'Contract',
                                                                    'PaymentMethod'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2023-12-03 14:41:58,696:INFO:Adding model into prep_pipe
2023-12-03 14:41:58,696:WARNING:Only Model saved as it was a pipeline.
2023-12-03 14:41:58,712:INFO:C:\Users\Rania\AppData\Local\Temp\tmpnpkzek1n\Transformation Pipeline.pkl saved in current working directory
2023-12-03 14:41:58,774:INFO:Pipeline(memory=FastMemory(location=C:\Users\Rania\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'SeniorCitizen',
                                             'tenure', 'MonthlyCharges',
                                             'TotalCharges'],
                                    transformer=SimpleImputer(add_...
                                                                    'DeviceProtection',
                                                                    'TechSupport',
                                                                    'StreamingTV',
                                                                    'StreamingMovies',
                                                                    'Contract',
                                                                    'PaymentMethod'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-12-03 14:41:58,774:INFO:save_model() successfully completed......................................
2023-12-03 14:41:58,853:INFO:SubProcess save_model() end ==================================
2023-12-03 14:41:58,916:INFO:setup() successfully completed in 1.89s...............
2023-12-03 14:43:42,898:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-03 14:43:42,898:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-03 14:43:42,898:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-03 14:43:42,898:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-03 14:43:43,667:INFO:PyCaret ClassificationExperiment
2023-12-03 14:43:43,667:INFO:Logging name: churn1
2023-12-03 14:43:43,667:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-12-03 14:43:43,667:INFO:version 3.2.0
2023-12-03 14:43:43,667:INFO:Initializing setup()
2023-12-03 14:43:43,667:INFO:self.USI: 2859
2023-12-03 14:43:43,667:INFO:self._variable_keys: {'X_test', 'fix_imbalance', 'exp_id', 'data', 'exp_name_log', 'seed', 'USI', 'logging_param', 'y', 'fold_generator', 'pipeline', 'gpu_n_jobs_param', 'log_plots_param', 'n_jobs_param', 'y_test', 'fold_groups_param', 'idx', 'is_multiclass', 'memory', 'html_param', 'X', '_available_plots', 'fold_shuffle_param', 'gpu_param', 'y_train', '_ml_usecase', 'target_param', 'X_train'}
2023-12-03 14:43:43,667:INFO:Checking environment
2023-12-03 14:43:43,667:INFO:python_version: 3.10.9
2023-12-03 14:43:43,667:INFO:python_build: ('main', 'Mar  8 2023 10:42:25')
2023-12-03 14:43:43,667:INFO:machine: AMD64
2023-12-03 14:43:43,676:INFO:platform: Windows-10-10.0.22621-SP0
2023-12-03 14:43:43,676:INFO:Memory: svmem(total=16866873344, available=9456279552, percent=43.9, used=7410593792, free=9456279552)
2023-12-03 14:43:43,676:INFO:Physical Core: 8
2023-12-03 14:43:43,676:INFO:Logical Core: 16
2023-12-03 14:43:43,676:INFO:Checking libraries
2023-12-03 14:43:43,676:INFO:System:
2023-12-03 14:43:43,676:INFO:    python: 3.10.9 | packaged by Anaconda, Inc. | (main, Mar  8 2023, 10:42:25) [MSC v.1916 64 bit (AMD64)]
2023-12-03 14:43:43,676:INFO:executable: C:\Users\Rania\anaconda3\envs\mlops\python.exe
2023-12-03 14:43:43,676:INFO:   machine: Windows-10-10.0.22621-SP0
2023-12-03 14:43:43,676:INFO:PyCaret required dependencies:
2023-12-03 14:43:43,731:INFO:                 pip: 23.2.1
2023-12-03 14:43:43,731:INFO:          setuptools: 68.0.0
2023-12-03 14:43:43,731:INFO:             pycaret: 3.2.0
2023-12-03 14:43:43,731:INFO:             IPython: 8.18.1
2023-12-03 14:43:43,731:INFO:          ipywidgets: 7.8.1
2023-12-03 14:43:43,731:INFO:                tqdm: 4.66.1
2023-12-03 14:43:43,731:INFO:               numpy: 1.25.2
2023-12-03 14:43:43,731:INFO:              pandas: 1.5.3
2023-12-03 14:43:43,731:INFO:              jinja2: 3.1.2
2023-12-03 14:43:43,731:INFO:               scipy: 1.10.1
2023-12-03 14:43:43,731:INFO:              joblib: 1.3.2
2023-12-03 14:43:43,731:INFO:             sklearn: 1.3.1
2023-12-03 14:43:43,731:INFO:                pyod: 1.1.2
2023-12-03 14:43:43,731:INFO:            imblearn: 0.11.0
2023-12-03 14:43:43,731:INFO:   category_encoders: 2.6.2
2023-12-03 14:43:43,731:INFO:            lightgbm: 4.1.0
2023-12-03 14:43:43,731:INFO:               numba: 0.58.1
2023-12-03 14:43:43,731:INFO:            requests: 2.31.0
2023-12-03 14:43:43,731:INFO:          matplotlib: 3.8.0
2023-12-03 14:43:43,731:INFO:          scikitplot: 0.3.7
2023-12-03 14:43:43,731:INFO:         yellowbrick: 1.5
2023-12-03 14:43:43,731:INFO:              plotly: 5.17.0
2023-12-03 14:43:43,731:INFO:    plotly-resampler: Not installed
2023-12-03 14:43:43,731:INFO:             kaleido: 0.2.1
2023-12-03 14:43:43,731:INFO:           schemdraw: 0.15
2023-12-03 14:43:43,731:INFO:         statsmodels: 0.14.0
2023-12-03 14:43:43,731:INFO:              sktime: 0.21.1
2023-12-03 14:43:43,731:INFO:               tbats: 1.1.3
2023-12-03 14:43:43,731:INFO:            pmdarima: 2.0.4
2023-12-03 14:43:43,731:INFO:              psutil: 5.9.5
2023-12-03 14:43:43,731:INFO:          markupsafe: 2.1.3
2023-12-03 14:43:43,731:INFO:             pickle5: Not installed
2023-12-03 14:43:43,731:INFO:         cloudpickle: 2.2.1
2023-12-03 14:43:43,731:INFO:         deprecation: 2.1.0
2023-12-03 14:43:43,731:INFO:              xxhash: 3.4.1
2023-12-03 14:43:43,731:INFO:           wurlitzer: Not installed
2023-12-03 14:43:43,731:INFO:PyCaret optional dependencies:
2023-12-03 14:43:44,240:INFO:                shap: 0.43.0
2023-12-03 14:43:44,240:INFO:           interpret: Not installed
2023-12-03 14:43:44,240:INFO:                umap: 0.5.5
2023-12-03 14:43:44,240:INFO:     ydata_profiling: Not installed
2023-12-03 14:43:44,240:INFO:  explainerdashboard: Not installed
2023-12-03 14:43:44,240:INFO:             autoviz: Not installed
2023-12-03 14:43:44,240:INFO:           fairlearn: Not installed
2023-12-03 14:43:44,240:INFO:          deepchecks: 0.17.4
2023-12-03 14:43:44,240:INFO:             xgboost: 2.0.0
2023-12-03 14:43:44,240:INFO:            catboost: 1.2.2
2023-12-03 14:43:44,240:INFO:              kmodes: Not installed
2023-12-03 14:43:44,240:INFO:             mlxtend: Not installed
2023-12-03 14:43:44,240:INFO:       statsforecast: Not installed
2023-12-03 14:43:44,240:INFO:        tune_sklearn: Not installed
2023-12-03 14:43:44,240:INFO:                 ray: Not installed
2023-12-03 14:43:44,240:INFO:            hyperopt: Not installed
2023-12-03 14:43:44,240:INFO:              optuna: 3.4.0
2023-12-03 14:43:44,240:INFO:               skopt: Not installed
2023-12-03 14:43:44,240:INFO:              mlflow: 2.8.1
2023-12-03 14:43:44,240:INFO:              gradio: Not installed
2023-12-03 14:43:44,240:INFO:             fastapi: 0.103.2
2023-12-03 14:43:44,240:INFO:             uvicorn: 0.23.2
2023-12-03 14:43:44,240:INFO:              m2cgen: Not installed
2023-12-03 14:43:44,240:INFO:           evidently: Not installed
2023-12-03 14:43:44,240:INFO:               fugue: Not installed
2023-12-03 14:43:44,240:INFO:           streamlit: 1.27.1
2023-12-03 14:43:44,240:INFO:             prophet: Not installed
2023-12-03 14:43:44,240:INFO:None
2023-12-03 14:43:44,240:INFO:Set up data.
2023-12-03 14:43:44,269:INFO:Set up folding strategy.
2023-12-03 14:43:44,269:INFO:Set up train/test split.
2023-12-03 14:43:44,366:INFO:Set up index.
2023-12-03 14:43:44,366:INFO:Assigning column types.
2023-12-03 14:43:44,366:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-12-03 14:43:44,421:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-03 14:43:44,421:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-03 14:43:44,456:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:43:44,456:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:43:44,525:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-03 14:43:44,525:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-03 14:43:44,552:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:43:44,553:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:43:44,553:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-12-03 14:43:44,595:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-03 14:43:44,623:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:43:44,623:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:43:44,662:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-03 14:43:44,692:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:43:44,711:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:43:44,725:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-12-03 14:43:44,772:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:43:44,772:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:43:44,850:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:43:44,850:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:43:44,850:INFO:Preparing preprocessing pipeline...
2023-12-03 14:43:44,850:INFO:Set up label encoding.
2023-12-03 14:43:44,850:INFO:Set up simple imputation.
2023-12-03 14:43:44,850:INFO:Set up encoding of ordinal features.
2023-12-03 14:43:44,866:INFO:Set up encoding of categorical features.
2023-12-03 14:43:44,866:INFO:Set up column name cleaning.
2023-12-03 14:43:45,040:INFO:Finished creating preprocessing pipeline.
2023-12-03 14:43:45,134:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Rania\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'SeniorCitizen',
                                             'tenure', 'MonthlyCharges',
                                             'TotalCharges'],
                                    transformer=SimpleImputer(add_...
                                                                    'DeviceProtection',
                                                                    'TechSupport',
                                                                    'StreamingTV',
                                                                    'StreamingMovies',
                                                                    'Contract',
                                                                    'PaymentMethod'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-12-03 14:43:45,134:INFO:Creating final display dataframe.
2023-12-03 14:43:45,259:INFO:Setup _display_container:                     Description            Value
0                    Session id              123
1                        Target            Churn
2                   Target type           Binary
3                Target mapping    No: 0, Yes: 1
4           Original data shape       (7043, 22)
5        Transformed data shape       (7043, 42)
6   Transformed train set shape       (4930, 42)
7    Transformed test set shape       (2113, 42)
8               Ignore features                1
9              Ordinal features                5
10             Numeric features                5
11         Categorical features               15
12     Rows with missing values             0.2%
13                   Preprocess             True
14              Imputation type           simple
15           Numeric imputation             mean
16       Categorical imputation             mode
17     Maximum one-hot encoding               25
18              Encoding method             None
19               Fold Generator  StratifiedKFold
20                  Fold Number               10
21                     CPU Jobs               -1
22                      Use GPU            False
23               Log Experiment     MlflowLogger
24              Experiment Name           churn1
25                          USI             2859
2023-12-03 14:43:45,351:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:43:45,357:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:43:45,459:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:43:45,463:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:43:45,463:INFO:Logging experiment in loggers
2023-12-03 14:43:45,773:INFO:SubProcess save_model() called ==================================
2023-12-03 14:43:45,989:INFO:Initializing save_model()
2023-12-03 14:43:45,989:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\Rania\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'SeniorCitizen',
                                             'tenure', 'MonthlyCharges',
                                             'TotalCharges'],
                                    transformer=SimpleImputer(add_...
                                                                    'DeviceProtection',
                                                                    'TechSupport',
                                                                    'StreamingTV',
                                                                    'StreamingMovies',
                                                                    'Contract',
                                                                    'PaymentMethod'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), model_name=C:\Users\Rania\AppData\Local\Temp\tmp015ujhz7\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Rania\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'SeniorCitizen',
                                             'tenure', 'MonthlyCharges',
                                             'TotalCharges'],
                                    transformer=SimpleImputer(add_...
                                                                    'DeviceProtection',
                                                                    'TechSupport',
                                                                    'StreamingTV',
                                                                    'StreamingMovies',
                                                                    'Contract',
                                                                    'PaymentMethod'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2023-12-03 14:43:45,989:INFO:Adding model into prep_pipe
2023-12-03 14:43:45,989:WARNING:Only Model saved as it was a pipeline.
2023-12-03 14:43:46,045:INFO:C:\Users\Rania\AppData\Local\Temp\tmp015ujhz7\Transformation Pipeline.pkl saved in current working directory
2023-12-03 14:43:46,127:INFO:Pipeline(memory=FastMemory(location=C:\Users\Rania\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'SeniorCitizen',
                                             'tenure', 'MonthlyCharges',
                                             'TotalCharges'],
                                    transformer=SimpleImputer(add_...
                                                                    'DeviceProtection',
                                                                    'TechSupport',
                                                                    'StreamingTV',
                                                                    'StreamingMovies',
                                                                    'Contract',
                                                                    'PaymentMethod'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-12-03 14:43:46,127:INFO:save_model() successfully completed......................................
2023-12-03 14:43:46,206:INFO:SubProcess save_model() end ==================================
2023-12-03 14:43:46,281:INFO:setup() successfully completed in 1.8s...............
2023-12-03 14:44:46,939:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-03 14:44:46,939:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-03 14:44:46,939:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-03 14:44:46,939:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-03 14:44:47,787:INFO:PyCaret ClassificationExperiment
2023-12-03 14:44:47,787:INFO:Logging name: churn1
2023-12-03 14:44:47,787:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-12-03 14:44:47,787:INFO:version 3.2.0
2023-12-03 14:44:47,787:INFO:Initializing setup()
2023-12-03 14:44:47,787:INFO:self.USI: bd83
2023-12-03 14:44:47,787:INFO:self._variable_keys: {'fold_shuffle_param', 'gpu_param', 'fold_generator', 'y', 'is_multiclass', 'idx', 'n_jobs_param', 'memory', 'y_train', 'seed', '_ml_usecase', 'exp_name_log', 'fix_imbalance', 'log_plots_param', 'X_test', 'pipeline', 'X_train', 'html_param', 'exp_id', 'USI', 'data', '_available_plots', 'fold_groups_param', 'target_param', 'X', 'y_test', 'gpu_n_jobs_param', 'logging_param'}
2023-12-03 14:44:47,787:INFO:Checking environment
2023-12-03 14:44:47,787:INFO:python_version: 3.10.9
2023-12-03 14:44:47,787:INFO:python_build: ('main', 'Mar  8 2023 10:42:25')
2023-12-03 14:44:47,787:INFO:machine: AMD64
2023-12-03 14:44:47,800:INFO:platform: Windows-10-10.0.22621-SP0
2023-12-03 14:44:47,800:INFO:Memory: svmem(total=16866873344, available=9466130432, percent=43.9, used=7400742912, free=9466130432)
2023-12-03 14:44:47,800:INFO:Physical Core: 8
2023-12-03 14:44:47,800:INFO:Logical Core: 16
2023-12-03 14:44:47,800:INFO:Checking libraries
2023-12-03 14:44:47,800:INFO:System:
2023-12-03 14:44:47,800:INFO:    python: 3.10.9 | packaged by Anaconda, Inc. | (main, Mar  8 2023, 10:42:25) [MSC v.1916 64 bit (AMD64)]
2023-12-03 14:44:47,800:INFO:executable: C:\Users\Rania\anaconda3\envs\mlops\python.exe
2023-12-03 14:44:47,800:INFO:   machine: Windows-10-10.0.22621-SP0
2023-12-03 14:44:47,800:INFO:PyCaret required dependencies:
2023-12-03 14:44:47,867:INFO:                 pip: 23.2.1
2023-12-03 14:44:47,867:INFO:          setuptools: 68.0.0
2023-12-03 14:44:47,867:INFO:             pycaret: 3.2.0
2023-12-03 14:44:47,867:INFO:             IPython: 8.18.1
2023-12-03 14:44:47,867:INFO:          ipywidgets: 7.8.1
2023-12-03 14:44:47,867:INFO:                tqdm: 4.66.1
2023-12-03 14:44:47,867:INFO:               numpy: 1.25.2
2023-12-03 14:44:47,867:INFO:              pandas: 1.5.3
2023-12-03 14:44:47,867:INFO:              jinja2: 3.1.2
2023-12-03 14:44:47,867:INFO:               scipy: 1.10.1
2023-12-03 14:44:47,867:INFO:              joblib: 1.3.2
2023-12-03 14:44:47,867:INFO:             sklearn: 1.3.1
2023-12-03 14:44:47,867:INFO:                pyod: 1.1.2
2023-12-03 14:44:47,867:INFO:            imblearn: 0.11.0
2023-12-03 14:44:47,867:INFO:   category_encoders: 2.6.2
2023-12-03 14:44:47,867:INFO:            lightgbm: 4.1.0
2023-12-03 14:44:47,867:INFO:               numba: 0.58.1
2023-12-03 14:44:47,867:INFO:            requests: 2.31.0
2023-12-03 14:44:47,867:INFO:          matplotlib: 3.8.0
2023-12-03 14:44:47,867:INFO:          scikitplot: 0.3.7
2023-12-03 14:44:47,867:INFO:         yellowbrick: 1.5
2023-12-03 14:44:47,867:INFO:              plotly: 5.17.0
2023-12-03 14:44:47,867:INFO:    plotly-resampler: Not installed
2023-12-03 14:44:47,867:INFO:             kaleido: 0.2.1
2023-12-03 14:44:47,867:INFO:           schemdraw: 0.15
2023-12-03 14:44:47,867:INFO:         statsmodels: 0.14.0
2023-12-03 14:44:47,867:INFO:              sktime: 0.21.1
2023-12-03 14:44:47,867:INFO:               tbats: 1.1.3
2023-12-03 14:44:47,867:INFO:            pmdarima: 2.0.4
2023-12-03 14:44:47,867:INFO:              psutil: 5.9.5
2023-12-03 14:44:47,867:INFO:          markupsafe: 2.1.3
2023-12-03 14:44:47,867:INFO:             pickle5: Not installed
2023-12-03 14:44:47,867:INFO:         cloudpickle: 2.2.1
2023-12-03 14:44:47,867:INFO:         deprecation: 2.1.0
2023-12-03 14:44:47,867:INFO:              xxhash: 3.4.1
2023-12-03 14:44:47,867:INFO:           wurlitzer: Not installed
2023-12-03 14:44:47,867:INFO:PyCaret optional dependencies:
2023-12-03 14:44:48,373:INFO:                shap: 0.43.0
2023-12-03 14:44:48,373:INFO:           interpret: Not installed
2023-12-03 14:44:48,373:INFO:                umap: 0.5.5
2023-12-03 14:44:48,373:INFO:     ydata_profiling: Not installed
2023-12-03 14:44:48,373:INFO:  explainerdashboard: Not installed
2023-12-03 14:44:48,373:INFO:             autoviz: Not installed
2023-12-03 14:44:48,373:INFO:           fairlearn: Not installed
2023-12-03 14:44:48,373:INFO:          deepchecks: 0.17.4
2023-12-03 14:44:48,373:INFO:             xgboost: 2.0.0
2023-12-03 14:44:48,373:INFO:            catboost: 1.2.2
2023-12-03 14:44:48,373:INFO:              kmodes: Not installed
2023-12-03 14:44:48,373:INFO:             mlxtend: Not installed
2023-12-03 14:44:48,373:INFO:       statsforecast: Not installed
2023-12-03 14:44:48,373:INFO:        tune_sklearn: Not installed
2023-12-03 14:44:48,373:INFO:                 ray: Not installed
2023-12-03 14:44:48,373:INFO:            hyperopt: Not installed
2023-12-03 14:44:48,373:INFO:              optuna: 3.4.0
2023-12-03 14:44:48,373:INFO:               skopt: Not installed
2023-12-03 14:44:48,373:INFO:              mlflow: 2.8.1
2023-12-03 14:44:48,373:INFO:              gradio: Not installed
2023-12-03 14:44:48,373:INFO:             fastapi: 0.103.2
2023-12-03 14:44:48,373:INFO:             uvicorn: 0.23.2
2023-12-03 14:44:48,373:INFO:              m2cgen: Not installed
2023-12-03 14:44:48,373:INFO:           evidently: Not installed
2023-12-03 14:44:48,373:INFO:               fugue: Not installed
2023-12-03 14:44:48,373:INFO:           streamlit: 1.27.1
2023-12-03 14:44:48,373:INFO:             prophet: Not installed
2023-12-03 14:44:48,373:INFO:None
2023-12-03 14:44:48,373:INFO:Set up data.
2023-12-03 14:44:48,402:INFO:Set up folding strategy.
2023-12-03 14:44:48,402:INFO:Set up train/test split.
2023-12-03 14:44:48,481:INFO:Set up index.
2023-12-03 14:44:48,481:INFO:Assigning column types.
2023-12-03 14:44:48,481:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-12-03 14:44:48,528:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-03 14:44:48,530:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-03 14:44:48,559:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:44:48,559:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:44:48,606:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-03 14:44:48,606:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-03 14:44:48,637:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:44:48,637:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:44:48,637:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-12-03 14:44:48,677:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-03 14:44:48,709:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:44:48,709:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:44:48,750:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-03 14:44:48,774:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:44:48,782:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:44:48,782:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-12-03 14:44:48,845:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:44:48,845:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:44:48,912:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:44:48,912:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:44:48,912:INFO:Preparing preprocessing pipeline...
2023-12-03 14:44:48,912:INFO:Set up label encoding.
2023-12-03 14:44:48,912:INFO:Set up simple imputation.
2023-12-03 14:44:48,912:INFO:Set up encoding of ordinal features.
2023-12-03 14:44:48,928:INFO:Set up encoding of categorical features.
2023-12-03 14:44:48,928:INFO:Set up column name cleaning.
2023-12-03 14:44:49,084:INFO:Finished creating preprocessing pipeline.
2023-12-03 14:44:49,131:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Rania\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'SeniorCitizen',
                                             'tenure', 'MonthlyCharges',
                                             'TotalCharges'],
                                    transformer=SimpleImputer(add_...
                                                                    'DeviceProtection',
                                                                    'TechSupport',
                                                                    'StreamingTV',
                                                                    'StreamingMovies',
                                                                    'Contract',
                                                                    'PaymentMethod'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-12-03 14:44:49,131:INFO:Creating final display dataframe.
2023-12-03 14:44:49,278:INFO:Setup _display_container:                     Description            Value
0                    Session id              123
1                        Target            Churn
2                   Target type           Binary
3                Target mapping    No: 0, Yes: 1
4           Original data shape       (7043, 22)
5        Transformed data shape       (7043, 42)
6   Transformed train set shape       (4930, 42)
7    Transformed test set shape       (2113, 42)
8               Ignore features                1
9              Ordinal features                5
10             Numeric features                5
11         Categorical features               15
12     Rows with missing values             0.2%
13                   Preprocess             True
14              Imputation type           simple
15           Numeric imputation             mean
16       Categorical imputation             mode
17     Maximum one-hot encoding               25
18              Encoding method             None
19               Fold Generator  StratifiedKFold
20                  Fold Number               10
21                     CPU Jobs               -1
22                      Use GPU            False
23               Log Experiment     MlflowLogger
24              Experiment Name           churn1
25                          USI             bd83
2023-12-03 14:44:49,360:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:44:49,360:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:44:49,423:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:44:49,423:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:44:49,423:INFO:Logging experiment in loggers
2023-12-03 14:44:49,750:INFO:SubProcess save_model() called ==================================
2023-12-03 14:44:49,906:INFO:Initializing save_model()
2023-12-03 14:44:49,906:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\Rania\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'SeniorCitizen',
                                             'tenure', 'MonthlyCharges',
                                             'TotalCharges'],
                                    transformer=SimpleImputer(add_...
                                                                    'DeviceProtection',
                                                                    'TechSupport',
                                                                    'StreamingTV',
                                                                    'StreamingMovies',
                                                                    'Contract',
                                                                    'PaymentMethod'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), model_name=C:\Users\Rania\AppData\Local\Temp\tmpdod9i3xr\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Rania\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'SeniorCitizen',
                                             'tenure', 'MonthlyCharges',
                                             'TotalCharges'],
                                    transformer=SimpleImputer(add_...
                                                                    'DeviceProtection',
                                                                    'TechSupport',
                                                                    'StreamingTV',
                                                                    'StreamingMovies',
                                                                    'Contract',
                                                                    'PaymentMethod'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2023-12-03 14:44:49,906:INFO:Adding model into prep_pipe
2023-12-03 14:44:49,906:WARNING:Only Model saved as it was a pipeline.
2023-12-03 14:44:49,922:INFO:C:\Users\Rania\AppData\Local\Temp\tmpdod9i3xr\Transformation Pipeline.pkl saved in current working directory
2023-12-03 14:44:50,000:INFO:Pipeline(memory=FastMemory(location=C:\Users\Rania\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'SeniorCitizen',
                                             'tenure', 'MonthlyCharges',
                                             'TotalCharges'],
                                    transformer=SimpleImputer(add_...
                                                                    'DeviceProtection',
                                                                    'TechSupport',
                                                                    'StreamingTV',
                                                                    'StreamingMovies',
                                                                    'Contract',
                                                                    'PaymentMethod'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-12-03 14:44:50,000:INFO:save_model() successfully completed......................................
2023-12-03 14:44:50,063:INFO:SubProcess save_model() end ==================================
2023-12-03 14:44:50,137:INFO:setup() successfully completed in 1.65s...............
2023-12-03 14:46:44,959:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-03 14:46:44,959:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-03 14:46:44,959:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-03 14:46:44,959:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-03 14:46:45,720:INFO:PyCaret ClassificationExperiment
2023-12-03 14:46:45,720:INFO:Logging name: churn1
2023-12-03 14:46:45,720:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-12-03 14:46:45,722:INFO:version 3.2.0
2023-12-03 14:46:45,722:INFO:Initializing setup()
2023-12-03 14:46:45,722:INFO:self.USI: a27b
2023-12-03 14:46:45,722:INFO:self._variable_keys: {'gpu_param', 'X_test', 'X_train', 'log_plots_param', '_available_plots', 'fold_groups_param', 'X', 'logging_param', 'memory', 'pipeline', 'fold_shuffle_param', 'y_test', 'n_jobs_param', 'gpu_n_jobs_param', 'USI', 'idx', 'y_train', 'is_multiclass', 'exp_id', 'html_param', 'y', 'seed', 'target_param', '_ml_usecase', 'exp_name_log', 'fold_generator', 'data', 'fix_imbalance'}
2023-12-03 14:46:45,722:INFO:Checking environment
2023-12-03 14:46:45,722:INFO:python_version: 3.10.9
2023-12-03 14:46:45,722:INFO:python_build: ('main', 'Mar  8 2023 10:42:25')
2023-12-03 14:46:45,722:INFO:machine: AMD64
2023-12-03 14:46:45,733:INFO:platform: Windows-10-10.0.22621-SP0
2023-12-03 14:46:45,733:INFO:Memory: svmem(total=16866873344, available=8998744064, percent=46.6, used=7868129280, free=8998744064)
2023-12-03 14:46:45,733:INFO:Physical Core: 8
2023-12-03 14:46:45,733:INFO:Logical Core: 16
2023-12-03 14:46:45,733:INFO:Checking libraries
2023-12-03 14:46:45,733:INFO:System:
2023-12-03 14:46:45,733:INFO:    python: 3.10.9 | packaged by Anaconda, Inc. | (main, Mar  8 2023, 10:42:25) [MSC v.1916 64 bit (AMD64)]
2023-12-03 14:46:45,733:INFO:executable: C:\Users\Rania\anaconda3\envs\mlops\python.exe
2023-12-03 14:46:45,733:INFO:   machine: Windows-10-10.0.22621-SP0
2023-12-03 14:46:45,733:INFO:PyCaret required dependencies:
2023-12-03 14:46:45,782:INFO:                 pip: 23.2.1
2023-12-03 14:46:45,782:INFO:          setuptools: 68.0.0
2023-12-03 14:46:45,782:INFO:             pycaret: 3.2.0
2023-12-03 14:46:45,782:INFO:             IPython: 8.18.1
2023-12-03 14:46:45,782:INFO:          ipywidgets: 7.8.1
2023-12-03 14:46:45,782:INFO:                tqdm: 4.66.1
2023-12-03 14:46:45,782:INFO:               numpy: 1.25.2
2023-12-03 14:46:45,782:INFO:              pandas: 1.5.3
2023-12-03 14:46:45,782:INFO:              jinja2: 3.1.2
2023-12-03 14:46:45,782:INFO:               scipy: 1.10.1
2023-12-03 14:46:45,782:INFO:              joblib: 1.3.2
2023-12-03 14:46:45,782:INFO:             sklearn: 1.3.1
2023-12-03 14:46:45,782:INFO:                pyod: 1.1.2
2023-12-03 14:46:45,782:INFO:            imblearn: 0.11.0
2023-12-03 14:46:45,782:INFO:   category_encoders: 2.6.2
2023-12-03 14:46:45,782:INFO:            lightgbm: 4.1.0
2023-12-03 14:46:45,782:INFO:               numba: 0.58.1
2023-12-03 14:46:45,782:INFO:            requests: 2.31.0
2023-12-03 14:46:45,782:INFO:          matplotlib: 3.8.0
2023-12-03 14:46:45,782:INFO:          scikitplot: 0.3.7
2023-12-03 14:46:45,782:INFO:         yellowbrick: 1.5
2023-12-03 14:46:45,782:INFO:              plotly: 5.17.0
2023-12-03 14:46:45,782:INFO:    plotly-resampler: Not installed
2023-12-03 14:46:45,782:INFO:             kaleido: 0.2.1
2023-12-03 14:46:45,782:INFO:           schemdraw: 0.15
2023-12-03 14:46:45,782:INFO:         statsmodels: 0.14.0
2023-12-03 14:46:45,782:INFO:              sktime: 0.21.1
2023-12-03 14:46:45,782:INFO:               tbats: 1.1.3
2023-12-03 14:46:45,782:INFO:            pmdarima: 2.0.4
2023-12-03 14:46:45,782:INFO:              psutil: 5.9.5
2023-12-03 14:46:45,782:INFO:          markupsafe: 2.1.3
2023-12-03 14:46:45,782:INFO:             pickle5: Not installed
2023-12-03 14:46:45,782:INFO:         cloudpickle: 2.2.1
2023-12-03 14:46:45,782:INFO:         deprecation: 2.1.0
2023-12-03 14:46:45,782:INFO:              xxhash: 3.4.1
2023-12-03 14:46:45,782:INFO:           wurlitzer: Not installed
2023-12-03 14:46:45,782:INFO:PyCaret optional dependencies:
2023-12-03 14:46:46,327:INFO:                shap: 0.43.0
2023-12-03 14:46:46,327:INFO:           interpret: Not installed
2023-12-03 14:46:46,327:INFO:                umap: 0.5.5
2023-12-03 14:46:46,327:INFO:     ydata_profiling: Not installed
2023-12-03 14:46:46,327:INFO:  explainerdashboard: Not installed
2023-12-03 14:46:46,327:INFO:             autoviz: Not installed
2023-12-03 14:46:46,327:INFO:           fairlearn: Not installed
2023-12-03 14:46:46,327:INFO:          deepchecks: 0.17.4
2023-12-03 14:46:46,327:INFO:             xgboost: 2.0.0
2023-12-03 14:46:46,327:INFO:            catboost: 1.2.2
2023-12-03 14:46:46,327:INFO:              kmodes: Not installed
2023-12-03 14:46:46,327:INFO:             mlxtend: Not installed
2023-12-03 14:46:46,329:INFO:       statsforecast: Not installed
2023-12-03 14:46:46,329:INFO:        tune_sklearn: Not installed
2023-12-03 14:46:46,329:INFO:                 ray: Not installed
2023-12-03 14:46:46,330:INFO:            hyperopt: Not installed
2023-12-03 14:46:46,330:INFO:              optuna: 3.4.0
2023-12-03 14:46:46,330:INFO:               skopt: Not installed
2023-12-03 14:46:46,330:INFO:              mlflow: 2.8.1
2023-12-03 14:46:46,330:INFO:              gradio: Not installed
2023-12-03 14:46:46,330:INFO:             fastapi: 0.103.2
2023-12-03 14:46:46,330:INFO:             uvicorn: 0.23.2
2023-12-03 14:46:46,330:INFO:              m2cgen: Not installed
2023-12-03 14:46:46,330:INFO:           evidently: Not installed
2023-12-03 14:46:46,330:INFO:               fugue: Not installed
2023-12-03 14:46:46,330:INFO:           streamlit: 1.27.1
2023-12-03 14:46:46,330:INFO:             prophet: Not installed
2023-12-03 14:46:46,330:INFO:None
2023-12-03 14:46:46,330:INFO:Set up data.
2023-12-03 14:46:46,371:INFO:Set up folding strategy.
2023-12-03 14:46:46,371:INFO:Set up train/test split.
2023-12-03 14:46:46,472:INFO:Set up index.
2023-12-03 14:46:46,475:INFO:Assigning column types.
2023-12-03 14:46:46,475:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-12-03 14:46:46,505:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-03 14:46:46,521:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-03 14:46:46,552:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:46:46,552:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:46:46,635:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-03 14:46:46,635:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-03 14:46:46,662:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:46:46,662:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:46:46,662:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-12-03 14:46:46,713:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-03 14:46:46,752:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:46:46,752:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:46:46,808:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-03 14:46:46,850:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:46:46,850:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:46:46,857:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-12-03 14:46:46,940:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:46:46,940:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:46:47,017:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:46:47,033:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:46:47,033:INFO:Preparing preprocessing pipeline...
2023-12-03 14:46:47,033:INFO:Set up label encoding.
2023-12-03 14:46:47,033:INFO:Set up simple imputation.
2023-12-03 14:46:47,033:INFO:Set up encoding of ordinal features.
2023-12-03 14:46:47,048:INFO:Set up encoding of categorical features.
2023-12-03 14:46:47,048:INFO:Set up column name cleaning.
2023-12-03 14:46:47,287:INFO:Finished creating preprocessing pipeline.
2023-12-03 14:46:47,427:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Rania\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'SeniorCitizen',
                                             'tenure', 'MonthlyCharges',
                                             'TotalCharges'],
                                    transformer=SimpleImputer(add_...
                                                                    'DeviceProtection',
                                                                    'TechSupport',
                                                                    'StreamingTV',
                                                                    'StreamingMovies',
                                                                    'Contract',
                                                                    'PaymentMethod'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-12-03 14:46:47,428:INFO:Creating final display dataframe.
2023-12-03 14:46:47,653:INFO:Setup _display_container:                     Description            Value
0                    Session id              123
1                        Target            Churn
2                   Target type           Binary
3                Target mapping    No: 0, Yes: 1
4           Original data shape       (7043, 22)
5        Transformed data shape       (7043, 42)
6   Transformed train set shape       (4930, 42)
7    Transformed test set shape       (2113, 42)
8               Ignore features                1
9              Ordinal features                5
10             Numeric features                5
11         Categorical features               15
12     Rows with missing values             0.2%
13                   Preprocess             True
14              Imputation type           simple
15           Numeric imputation             mean
16       Categorical imputation             mode
17     Maximum one-hot encoding               25
18              Encoding method             None
19               Fold Generator  StratifiedKFold
20                  Fold Number               10
21                     CPU Jobs               -1
22                      Use GPU            False
23               Log Experiment     MlflowLogger
24              Experiment Name           churn1
25                          USI             a27b
2023-12-03 14:46:47,774:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:46:47,779:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:46:47,858:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:46:47,858:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:46:47,862:INFO:Logging experiment in loggers
2023-12-03 14:46:48,216:INFO:SubProcess save_model() called ==================================
2023-12-03 14:46:48,424:INFO:Initializing save_model()
2023-12-03 14:46:48,424:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\Rania\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'SeniorCitizen',
                                             'tenure', 'MonthlyCharges',
                                             'TotalCharges'],
                                    transformer=SimpleImputer(add_...
                                                                    'DeviceProtection',
                                                                    'TechSupport',
                                                                    'StreamingTV',
                                                                    'StreamingMovies',
                                                                    'Contract',
                                                                    'PaymentMethod'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), model_name=C:\Users\Rania\AppData\Local\Temp\tmpzg0ug6d3\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Rania\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'SeniorCitizen',
                                             'tenure', 'MonthlyCharges',
                                             'TotalCharges'],
                                    transformer=SimpleImputer(add_...
                                                                    'DeviceProtection',
                                                                    'TechSupport',
                                                                    'StreamingTV',
                                                                    'StreamingMovies',
                                                                    'Contract',
                                                                    'PaymentMethod'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2023-12-03 14:46:48,424:INFO:Adding model into prep_pipe
2023-12-03 14:46:48,424:WARNING:Only Model saved as it was a pipeline.
2023-12-03 14:46:48,447:INFO:C:\Users\Rania\AppData\Local\Temp\tmpzg0ug6d3\Transformation Pipeline.pkl saved in current working directory
2023-12-03 14:46:48,537:INFO:Pipeline(memory=FastMemory(location=C:\Users\Rania\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'SeniorCitizen',
                                             'tenure', 'MonthlyCharges',
                                             'TotalCharges'],
                                    transformer=SimpleImputer(add_...
                                                                    'DeviceProtection',
                                                                    'TechSupport',
                                                                    'StreamingTV',
                                                                    'StreamingMovies',
                                                                    'Contract',
                                                                    'PaymentMethod'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-12-03 14:46:48,537:INFO:save_model() successfully completed......................................
2023-12-03 14:46:48,636:INFO:SubProcess save_model() end ==================================
2023-12-03 14:46:48,684:INFO:setup() successfully completed in 2.15s...............
2023-12-03 14:51:26,021:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-03 14:51:26,021:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-03 14:51:26,021:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-03 14:51:26,021:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-03 14:51:26,538:INFO:PyCaret ClassificationExperiment
2023-12-03 14:51:26,538:INFO:Logging name: churn1
2023-12-03 14:51:26,538:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-12-03 14:51:26,538:INFO:version 3.2.0
2023-12-03 14:51:26,538:INFO:Initializing setup()
2023-12-03 14:51:26,538:INFO:self.USI: 7f1d
2023-12-03 14:51:26,538:INFO:self._variable_keys: {'X_train', 'is_multiclass', 'y', 'y_test', 'html_param', 'y_train', 'n_jobs_param', 'fold_generator', 'X_test', '_available_plots', 'gpu_n_jobs_param', 'exp_id', 'memory', 'gpu_param', 'pipeline', 'seed', 'logging_param', '_ml_usecase', 'data', 'idx', 'fold_shuffle_param', 'X', 'fix_imbalance', 'fold_groups_param', 'target_param', 'log_plots_param', 'exp_name_log', 'USI'}
2023-12-03 14:51:26,538:INFO:Checking environment
2023-12-03 14:51:26,538:INFO:python_version: 3.10.9
2023-12-03 14:51:26,538:INFO:python_build: ('main', 'Mar  8 2023 10:42:25')
2023-12-03 14:51:26,538:INFO:machine: AMD64
2023-12-03 14:51:26,538:INFO:platform: Windows-10-10.0.22621-SP0
2023-12-03 14:51:26,538:INFO:Memory: svmem(total=16866873344, available=9400750080, percent=44.3, used=7466123264, free=9400750080)
2023-12-03 14:51:26,538:INFO:Physical Core: 8
2023-12-03 14:51:26,538:INFO:Logical Core: 16
2023-12-03 14:51:26,538:INFO:Checking libraries
2023-12-03 14:51:26,538:INFO:System:
2023-12-03 14:51:26,538:INFO:    python: 3.10.9 | packaged by Anaconda, Inc. | (main, Mar  8 2023, 10:42:25) [MSC v.1916 64 bit (AMD64)]
2023-12-03 14:51:26,538:INFO:executable: C:\Users\Rania\anaconda3\envs\mlops\python.exe
2023-12-03 14:51:26,538:INFO:   machine: Windows-10-10.0.22621-SP0
2023-12-03 14:51:26,538:INFO:PyCaret required dependencies:
2023-12-03 14:51:26,585:INFO:                 pip: 23.2.1
2023-12-03 14:51:26,585:INFO:          setuptools: 68.0.0
2023-12-03 14:51:26,585:INFO:             pycaret: 3.2.0
2023-12-03 14:51:26,585:INFO:             IPython: 8.18.1
2023-12-03 14:51:26,585:INFO:          ipywidgets: 7.8.1
2023-12-03 14:51:26,585:INFO:                tqdm: 4.66.1
2023-12-03 14:51:26,585:INFO:               numpy: 1.25.2
2023-12-03 14:51:26,585:INFO:              pandas: 1.5.3
2023-12-03 14:51:26,585:INFO:              jinja2: 3.1.2
2023-12-03 14:51:26,585:INFO:               scipy: 1.10.1
2023-12-03 14:51:26,585:INFO:              joblib: 1.3.2
2023-12-03 14:51:26,585:INFO:             sklearn: 1.3.1
2023-12-03 14:51:26,585:INFO:                pyod: 1.1.2
2023-12-03 14:51:26,585:INFO:            imblearn: 0.11.0
2023-12-03 14:51:26,585:INFO:   category_encoders: 2.6.2
2023-12-03 14:51:26,585:INFO:            lightgbm: 4.1.0
2023-12-03 14:51:26,585:INFO:               numba: 0.58.1
2023-12-03 14:51:26,585:INFO:            requests: 2.31.0
2023-12-03 14:51:26,585:INFO:          matplotlib: 3.8.0
2023-12-03 14:51:26,585:INFO:          scikitplot: 0.3.7
2023-12-03 14:51:26,585:INFO:         yellowbrick: 1.5
2023-12-03 14:51:26,585:INFO:              plotly: 5.17.0
2023-12-03 14:51:26,585:INFO:    plotly-resampler: Not installed
2023-12-03 14:51:26,585:INFO:             kaleido: 0.2.1
2023-12-03 14:51:26,585:INFO:           schemdraw: 0.15
2023-12-03 14:51:26,585:INFO:         statsmodels: 0.14.0
2023-12-03 14:51:26,585:INFO:              sktime: 0.21.1
2023-12-03 14:51:26,585:INFO:               tbats: 1.1.3
2023-12-03 14:51:26,585:INFO:            pmdarima: 2.0.4
2023-12-03 14:51:26,585:INFO:              psutil: 5.9.5
2023-12-03 14:51:26,585:INFO:          markupsafe: 2.1.3
2023-12-03 14:51:26,585:INFO:             pickle5: Not installed
2023-12-03 14:51:26,585:INFO:         cloudpickle: 2.2.1
2023-12-03 14:51:26,585:INFO:         deprecation: 2.1.0
2023-12-03 14:51:26,585:INFO:              xxhash: 3.4.1
2023-12-03 14:51:26,585:INFO:           wurlitzer: Not installed
2023-12-03 14:51:26,585:INFO:PyCaret optional dependencies:
2023-12-03 14:51:26,974:INFO:                shap: 0.43.0
2023-12-03 14:51:26,974:INFO:           interpret: Not installed
2023-12-03 14:51:26,974:INFO:                umap: 0.5.5
2023-12-03 14:51:26,974:INFO:     ydata_profiling: Not installed
2023-12-03 14:51:26,974:INFO:  explainerdashboard: Not installed
2023-12-03 14:51:26,974:INFO:             autoviz: Not installed
2023-12-03 14:51:26,974:INFO:           fairlearn: Not installed
2023-12-03 14:51:26,974:INFO:          deepchecks: 0.17.4
2023-12-03 14:51:26,974:INFO:             xgboost: 2.0.0
2023-12-03 14:51:26,974:INFO:            catboost: 1.2.2
2023-12-03 14:51:26,974:INFO:              kmodes: Not installed
2023-12-03 14:51:26,974:INFO:             mlxtend: Not installed
2023-12-03 14:51:26,974:INFO:       statsforecast: Not installed
2023-12-03 14:51:26,974:INFO:        tune_sklearn: Not installed
2023-12-03 14:51:26,974:INFO:                 ray: Not installed
2023-12-03 14:51:26,974:INFO:            hyperopt: Not installed
2023-12-03 14:51:26,974:INFO:              optuna: 3.4.0
2023-12-03 14:51:26,974:INFO:               skopt: Not installed
2023-12-03 14:51:26,974:INFO:              mlflow: 2.8.1
2023-12-03 14:51:26,974:INFO:              gradio: Not installed
2023-12-03 14:51:26,974:INFO:             fastapi: 0.103.2
2023-12-03 14:51:26,974:INFO:             uvicorn: 0.23.2
2023-12-03 14:51:26,974:INFO:              m2cgen: Not installed
2023-12-03 14:51:26,974:INFO:           evidently: Not installed
2023-12-03 14:51:26,974:INFO:               fugue: Not installed
2023-12-03 14:51:26,974:INFO:           streamlit: 1.27.1
2023-12-03 14:51:26,974:INFO:             prophet: Not installed
2023-12-03 14:51:26,974:INFO:None
2023-12-03 14:51:26,974:INFO:Set up data.
2023-12-03 14:51:27,005:INFO:Set up folding strategy.
2023-12-03 14:51:27,005:INFO:Set up train/test split.
2023-12-03 14:51:27,084:INFO:Set up index.
2023-12-03 14:51:27,084:INFO:Assigning column types.
2023-12-03 14:51:27,084:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-12-03 14:51:27,115:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-03 14:51:27,115:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-03 14:51:27,146:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:51:27,146:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:51:27,209:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-03 14:51:27,209:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-03 14:51:27,224:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:51:27,224:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:51:27,224:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-12-03 14:51:27,270:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-03 14:51:27,303:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:51:27,303:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:51:27,350:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-03 14:51:27,366:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:51:27,366:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:51:27,366:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-12-03 14:51:27,438:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:51:27,438:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:51:27,485:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:51:27,485:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:51:27,485:INFO:Preparing preprocessing pipeline...
2023-12-03 14:51:27,485:INFO:Set up label encoding.
2023-12-03 14:51:27,485:INFO:Set up simple imputation.
2023-12-03 14:51:27,500:INFO:Set up encoding of ordinal features.
2023-12-03 14:51:27,500:INFO:Set up encoding of categorical features.
2023-12-03 14:51:27,500:INFO:Set up column name cleaning.
2023-12-03 14:51:27,672:INFO:Finished creating preprocessing pipeline.
2023-12-03 14:51:27,750:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Rania\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'SeniorCitizen',
                                             'tenure', 'MonthlyCharges',
                                             'TotalCharges'],
                                    transformer=SimpleImputer(add_...
                                                                    'DeviceProtection',
                                                                    'TechSupport',
                                                                    'StreamingTV',
                                                                    'StreamingMovies',
                                                                    'Contract',
                                                                    'PaymentMethod'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-12-03 14:51:27,750:INFO:Creating final display dataframe.
2023-12-03 14:51:27,875:INFO:Setup _display_container:                     Description            Value
0                    Session id              123
1                        Target            Churn
2                   Target type           Binary
3                Target mapping    No: 0, Yes: 1
4           Original data shape       (7043, 22)
5        Transformed data shape       (7043, 42)
6   Transformed train set shape       (4930, 42)
7    Transformed test set shape       (2113, 42)
8               Ignore features                1
9              Ordinal features                5
10             Numeric features                5
11         Categorical features               15
12     Rows with missing values             0.2%
13                   Preprocess             True
14              Imputation type           simple
15           Numeric imputation             mean
16       Categorical imputation             mode
17     Maximum one-hot encoding               25
18              Encoding method             None
19               Fold Generator  StratifiedKFold
20                  Fold Number               10
21                     CPU Jobs               -1
22                      Use GPU            False
23               Log Experiment     MlflowLogger
24              Experiment Name           churn1
25                          USI             7f1d
2023-12-03 14:51:27,961:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:51:27,961:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:51:28,008:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:51:28,024:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:51:28,024:INFO:Logging experiment in loggers
2023-12-03 14:51:28,259:INFO:SubProcess save_model() called ==================================
2023-12-03 14:51:28,447:INFO:Initializing save_model()
2023-12-03 14:51:28,447:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\Rania\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'SeniorCitizen',
                                             'tenure', 'MonthlyCharges',
                                             'TotalCharges'],
                                    transformer=SimpleImputer(add_...
                                                                    'DeviceProtection',
                                                                    'TechSupport',
                                                                    'StreamingTV',
                                                                    'StreamingMovies',
                                                                    'Contract',
                                                                    'PaymentMethod'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), model_name=C:\Users\Rania\AppData\Local\Temp\tmpqth920eq\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Rania\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'SeniorCitizen',
                                             'tenure', 'MonthlyCharges',
                                             'TotalCharges'],
                                    transformer=SimpleImputer(add_...
                                                                    'DeviceProtection',
                                                                    'TechSupport',
                                                                    'StreamingTV',
                                                                    'StreamingMovies',
                                                                    'Contract',
                                                                    'PaymentMethod'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2023-12-03 14:51:28,447:INFO:Adding model into prep_pipe
2023-12-03 14:51:28,447:WARNING:Only Model saved as it was a pipeline.
2023-12-03 14:51:28,465:INFO:C:\Users\Rania\AppData\Local\Temp\tmpqth920eq\Transformation Pipeline.pkl saved in current working directory
2023-12-03 14:51:28,518:INFO:Pipeline(memory=FastMemory(location=C:\Users\Rania\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'SeniorCitizen',
                                             'tenure', 'MonthlyCharges',
                                             'TotalCharges'],
                                    transformer=SimpleImputer(add_...
                                                                    'DeviceProtection',
                                                                    'TechSupport',
                                                                    'StreamingTV',
                                                                    'StreamingMovies',
                                                                    'Contract',
                                                                    'PaymentMethod'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-12-03 14:51:28,518:INFO:save_model() successfully completed......................................
2023-12-03 14:51:28,581:INFO:SubProcess save_model() end ==================================
2023-12-03 14:51:28,659:INFO:setup() successfully completed in 1.5s...............
2023-12-03 14:52:12,968:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-03 14:52:12,968:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-03 14:52:12,968:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-03 14:52:12,968:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-03 14:52:13,604:INFO:PyCaret ClassificationExperiment
2023-12-03 14:52:13,604:INFO:Logging name: churn1
2023-12-03 14:52:13,604:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-12-03 14:52:13,604:INFO:version 3.2.0
2023-12-03 14:52:13,604:INFO:Initializing setup()
2023-12-03 14:52:13,604:INFO:self.USI: 263b
2023-12-03 14:52:13,604:INFO:self._variable_keys: {'X', 'seed', 'target_param', 'html_param', 'gpu_param', 'exp_name_log', 'idx', 'X_train', 'pipeline', 'exp_id', '_available_plots', 'y_test', 'X_test', 'is_multiclass', 'log_plots_param', '_ml_usecase', 'USI', 'logging_param', 'fix_imbalance', 'gpu_n_jobs_param', 'fold_groups_param', 'n_jobs_param', 'data', 'y_train', 'fold_shuffle_param', 'memory', 'y', 'fold_generator'}
2023-12-03 14:52:13,604:INFO:Checking environment
2023-12-03 14:52:13,604:INFO:python_version: 3.10.9
2023-12-03 14:52:13,604:INFO:python_build: ('main', 'Mar  8 2023 10:42:25')
2023-12-03 14:52:13,604:INFO:machine: AMD64
2023-12-03 14:52:13,621:INFO:platform: Windows-10-10.0.22621-SP0
2023-12-03 14:52:13,643:INFO:Memory: svmem(total=16866873344, available=9386037248, percent=44.4, used=7480836096, free=9386037248)
2023-12-03 14:52:13,643:INFO:Physical Core: 8
2023-12-03 14:52:13,643:INFO:Logical Core: 16
2023-12-03 14:52:13,643:INFO:Checking libraries
2023-12-03 14:52:13,643:INFO:System:
2023-12-03 14:52:13,643:INFO:    python: 3.10.9 | packaged by Anaconda, Inc. | (main, Mar  8 2023, 10:42:25) [MSC v.1916 64 bit (AMD64)]
2023-12-03 14:52:13,643:INFO:executable: C:\Users\Rania\anaconda3\envs\mlops\python.exe
2023-12-03 14:52:13,643:INFO:   machine: Windows-10-10.0.22621-SP0
2023-12-03 14:52:13,643:INFO:PyCaret required dependencies:
2023-12-03 14:52:13,682:INFO:                 pip: 23.2.1
2023-12-03 14:52:13,682:INFO:          setuptools: 68.0.0
2023-12-03 14:52:13,682:INFO:             pycaret: 3.2.0
2023-12-03 14:52:13,682:INFO:             IPython: 8.18.1
2023-12-03 14:52:13,682:INFO:          ipywidgets: 7.8.1
2023-12-03 14:52:13,682:INFO:                tqdm: 4.66.1
2023-12-03 14:52:13,682:INFO:               numpy: 1.25.2
2023-12-03 14:52:13,682:INFO:              pandas: 1.5.3
2023-12-03 14:52:13,682:INFO:              jinja2: 3.1.2
2023-12-03 14:52:13,682:INFO:               scipy: 1.10.1
2023-12-03 14:52:13,682:INFO:              joblib: 1.3.2
2023-12-03 14:52:13,682:INFO:             sklearn: 1.3.1
2023-12-03 14:52:13,682:INFO:                pyod: 1.1.2
2023-12-03 14:52:13,682:INFO:            imblearn: 0.11.0
2023-12-03 14:52:13,682:INFO:   category_encoders: 2.6.2
2023-12-03 14:52:13,682:INFO:            lightgbm: 4.1.0
2023-12-03 14:52:13,682:INFO:               numba: 0.58.1
2023-12-03 14:52:13,682:INFO:            requests: 2.31.0
2023-12-03 14:52:13,682:INFO:          matplotlib: 3.8.0
2023-12-03 14:52:13,682:INFO:          scikitplot: 0.3.7
2023-12-03 14:52:13,682:INFO:         yellowbrick: 1.5
2023-12-03 14:52:13,682:INFO:              plotly: 5.17.0
2023-12-03 14:52:13,682:INFO:    plotly-resampler: Not installed
2023-12-03 14:52:13,682:INFO:             kaleido: 0.2.1
2023-12-03 14:52:13,682:INFO:           schemdraw: 0.15
2023-12-03 14:52:13,682:INFO:         statsmodels: 0.14.0
2023-12-03 14:52:13,682:INFO:              sktime: 0.21.1
2023-12-03 14:52:13,682:INFO:               tbats: 1.1.3
2023-12-03 14:52:13,682:INFO:            pmdarima: 2.0.4
2023-12-03 14:52:13,682:INFO:              psutil: 5.9.5
2023-12-03 14:52:13,682:INFO:          markupsafe: 2.1.3
2023-12-03 14:52:13,682:INFO:             pickle5: Not installed
2023-12-03 14:52:13,682:INFO:         cloudpickle: 2.2.1
2023-12-03 14:52:13,682:INFO:         deprecation: 2.1.0
2023-12-03 14:52:13,682:INFO:              xxhash: 3.4.1
2023-12-03 14:52:13,682:INFO:           wurlitzer: Not installed
2023-12-03 14:52:13,682:INFO:PyCaret optional dependencies:
2023-12-03 14:52:14,057:INFO:                shap: 0.43.0
2023-12-03 14:52:14,057:INFO:           interpret: Not installed
2023-12-03 14:52:14,057:INFO:                umap: 0.5.5
2023-12-03 14:52:14,057:INFO:     ydata_profiling: Not installed
2023-12-03 14:52:14,057:INFO:  explainerdashboard: Not installed
2023-12-03 14:52:14,057:INFO:             autoviz: Not installed
2023-12-03 14:52:14,057:INFO:           fairlearn: Not installed
2023-12-03 14:52:14,057:INFO:          deepchecks: 0.17.4
2023-12-03 14:52:14,057:INFO:             xgboost: 2.0.0
2023-12-03 14:52:14,057:INFO:            catboost: 1.2.2
2023-12-03 14:52:14,057:INFO:              kmodes: Not installed
2023-12-03 14:52:14,057:INFO:             mlxtend: Not installed
2023-12-03 14:52:14,057:INFO:       statsforecast: Not installed
2023-12-03 14:52:14,057:INFO:        tune_sklearn: Not installed
2023-12-03 14:52:14,057:INFO:                 ray: Not installed
2023-12-03 14:52:14,057:INFO:            hyperopt: Not installed
2023-12-03 14:52:14,057:INFO:              optuna: 3.4.0
2023-12-03 14:52:14,057:INFO:               skopt: Not installed
2023-12-03 14:52:14,057:INFO:              mlflow: 2.8.1
2023-12-03 14:52:14,057:INFO:              gradio: Not installed
2023-12-03 14:52:14,057:INFO:             fastapi: 0.103.2
2023-12-03 14:52:14,057:INFO:             uvicorn: 0.23.2
2023-12-03 14:52:14,057:INFO:              m2cgen: Not installed
2023-12-03 14:52:14,057:INFO:           evidently: Not installed
2023-12-03 14:52:14,057:INFO:               fugue: Not installed
2023-12-03 14:52:14,057:INFO:           streamlit: 1.27.1
2023-12-03 14:52:14,057:INFO:             prophet: Not installed
2023-12-03 14:52:14,057:INFO:None
2023-12-03 14:52:14,057:INFO:Set up data.
2023-12-03 14:52:14,082:INFO:Set up folding strategy.
2023-12-03 14:52:14,082:INFO:Set up train/test split.
2023-12-03 14:52:14,161:INFO:Set up index.
2023-12-03 14:52:14,161:INFO:Assigning column types.
2023-12-03 14:52:14,161:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-12-03 14:52:14,208:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-03 14:52:14,208:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-03 14:52:14,240:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:52:14,240:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:52:14,301:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-03 14:52:14,301:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-03 14:52:14,317:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:52:14,317:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:52:14,317:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-12-03 14:52:14,372:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-03 14:52:14,388:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:52:14,388:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:52:14,419:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-03 14:52:14,466:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:52:14,470:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:52:14,471:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-12-03 14:52:14,560:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:52:14,562:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:52:14,632:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:52:14,643:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:52:14,643:INFO:Preparing preprocessing pipeline...
2023-12-03 14:52:14,648:INFO:Set up label encoding.
2023-12-03 14:52:14,648:INFO:Set up simple imputation.
2023-12-03 14:52:14,648:INFO:Set up encoding of ordinal features.
2023-12-03 14:52:14,664:INFO:Set up encoding of categorical features.
2023-12-03 14:52:14,664:INFO:Set up column name cleaning.
2023-12-03 14:52:14,840:INFO:Finished creating preprocessing pipeline.
2023-12-03 14:52:14,887:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Rania\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'SeniorCitizen',
                                             'tenure', 'MonthlyCharges',
                                             'TotalCharges'],
                                    transformer=SimpleImputer(add_...
                                                                    'DeviceProtection',
                                                                    'TechSupport',
                                                                    'StreamingTV',
                                                                    'StreamingMovies',
                                                                    'Contract',
                                                                    'PaymentMethod'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-12-03 14:52:14,887:INFO:Creating final display dataframe.
2023-12-03 14:52:15,071:INFO:Setup _display_container:                     Description            Value
0                    Session id              123
1                        Target            Churn
2                   Target type           Binary
3                Target mapping    No: 0, Yes: 1
4           Original data shape       (7043, 22)
5        Transformed data shape       (7043, 42)
6   Transformed train set shape       (4930, 42)
7    Transformed test set shape       (2113, 42)
8               Ignore features                1
9              Ordinal features                5
10             Numeric features                5
11         Categorical features               15
12     Rows with missing values             0.2%
13                   Preprocess             True
14              Imputation type           simple
15           Numeric imputation             mean
16       Categorical imputation             mode
17     Maximum one-hot encoding               25
18              Encoding method             None
19               Fold Generator  StratifiedKFold
20                  Fold Number               10
21                     CPU Jobs               -1
22                      Use GPU            False
23               Log Experiment     MlflowLogger
24              Experiment Name           churn1
25                          USI             263b
2023-12-03 14:52:15,175:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:52:15,183:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:52:15,252:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:52:15,252:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:52:15,260:INFO:Logging experiment in loggers
2023-12-03 14:52:15,626:INFO:SubProcess save_model() called ==================================
2023-12-03 14:52:15,793:INFO:Initializing save_model()
2023-12-03 14:52:15,793:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\Rania\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'SeniorCitizen',
                                             'tenure', 'MonthlyCharges',
                                             'TotalCharges'],
                                    transformer=SimpleImputer(add_...
                                                                    'DeviceProtection',
                                                                    'TechSupport',
                                                                    'StreamingTV',
                                                                    'StreamingMovies',
                                                                    'Contract',
                                                                    'PaymentMethod'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), model_name=C:\Users\Rania\AppData\Local\Temp\tmpt_a7tfgz\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Rania\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'SeniorCitizen',
                                             'tenure', 'MonthlyCharges',
                                             'TotalCharges'],
                                    transformer=SimpleImputer(add_...
                                                                    'DeviceProtection',
                                                                    'TechSupport',
                                                                    'StreamingTV',
                                                                    'StreamingMovies',
                                                                    'Contract',
                                                                    'PaymentMethod'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2023-12-03 14:52:15,793:INFO:Adding model into prep_pipe
2023-12-03 14:52:15,798:WARNING:Only Model saved as it was a pipeline.
2023-12-03 14:52:15,813:INFO:C:\Users\Rania\AppData\Local\Temp\tmpt_a7tfgz\Transformation Pipeline.pkl saved in current working directory
2023-12-03 14:52:15,896:INFO:Pipeline(memory=FastMemory(location=C:\Users\Rania\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'SeniorCitizen',
                                             'tenure', 'MonthlyCharges',
                                             'TotalCharges'],
                                    transformer=SimpleImputer(add_...
                                                                    'DeviceProtection',
                                                                    'TechSupport',
                                                                    'StreamingTV',
                                                                    'StreamingMovies',
                                                                    'Contract',
                                                                    'PaymentMethod'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-12-03 14:52:15,896:INFO:save_model() successfully completed......................................
2023-12-03 14:52:15,995:INFO:SubProcess save_model() end ==================================
2023-12-03 14:52:16,035:INFO:setup() successfully completed in 1.67s...............
2023-12-03 14:53:34,412:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-03 14:53:34,412:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-03 14:53:34,412:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-03 14:53:34,412:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-03 14:53:35,054:INFO:PyCaret ClassificationExperiment
2023-12-03 14:53:35,054:INFO:Logging name: churn1
2023-12-03 14:53:35,054:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-12-03 14:53:35,054:INFO:version 3.2.0
2023-12-03 14:53:35,054:INFO:Initializing setup()
2023-12-03 14:53:35,054:INFO:self.USI: b2ae
2023-12-03 14:53:35,054:INFO:self._variable_keys: {'html_param', 'pipeline', 'USI', 'fold_generator', 'memory', 'gpu_n_jobs_param', 'logging_param', 'idx', 'fold_groups_param', 'n_jobs_param', 'X_test', 'exp_name_log', 'is_multiclass', 'y_train', 'exp_id', 'target_param', 'fold_shuffle_param', 'fix_imbalance', 'y', 'seed', 'data', '_ml_usecase', 'X_train', 'y_test', 'gpu_param', '_available_plots', 'log_plots_param', 'X'}
2023-12-03 14:53:35,054:INFO:Checking environment
2023-12-03 14:53:35,054:INFO:python_version: 3.10.9
2023-12-03 14:53:35,054:INFO:python_build: ('main', 'Mar  8 2023 10:42:25')
2023-12-03 14:53:35,054:INFO:machine: AMD64
2023-12-03 14:53:35,062:INFO:platform: Windows-10-10.0.22621-SP0
2023-12-03 14:53:35,062:INFO:Memory: svmem(total=16866873344, available=9198915584, percent=45.5, used=7667957760, free=9198915584)
2023-12-03 14:53:35,062:INFO:Physical Core: 8
2023-12-03 14:53:35,062:INFO:Logical Core: 16
2023-12-03 14:53:35,062:INFO:Checking libraries
2023-12-03 14:53:35,062:INFO:System:
2023-12-03 14:53:35,062:INFO:    python: 3.10.9 | packaged by Anaconda, Inc. | (main, Mar  8 2023, 10:42:25) [MSC v.1916 64 bit (AMD64)]
2023-12-03 14:53:35,062:INFO:executable: C:\Users\Rania\anaconda3\envs\mlops\python.exe
2023-12-03 14:53:35,062:INFO:   machine: Windows-10-10.0.22621-SP0
2023-12-03 14:53:35,062:INFO:PyCaret required dependencies:
2023-12-03 14:53:35,110:INFO:                 pip: 23.2.1
2023-12-03 14:53:35,110:INFO:          setuptools: 68.0.0
2023-12-03 14:53:35,110:INFO:             pycaret: 3.2.0
2023-12-03 14:53:35,110:INFO:             IPython: 8.18.1
2023-12-03 14:53:35,110:INFO:          ipywidgets: 7.8.1
2023-12-03 14:53:35,110:INFO:                tqdm: 4.66.1
2023-12-03 14:53:35,110:INFO:               numpy: 1.25.2
2023-12-03 14:53:35,110:INFO:              pandas: 1.5.3
2023-12-03 14:53:35,115:INFO:              jinja2: 3.1.2
2023-12-03 14:53:35,115:INFO:               scipy: 1.10.1
2023-12-03 14:53:35,115:INFO:              joblib: 1.3.2
2023-12-03 14:53:35,115:INFO:             sklearn: 1.3.1
2023-12-03 14:53:35,115:INFO:                pyod: 1.1.2
2023-12-03 14:53:35,115:INFO:            imblearn: 0.11.0
2023-12-03 14:53:35,115:INFO:   category_encoders: 2.6.2
2023-12-03 14:53:35,115:INFO:            lightgbm: 4.1.0
2023-12-03 14:53:35,115:INFO:               numba: 0.58.1
2023-12-03 14:53:35,115:INFO:            requests: 2.31.0
2023-12-03 14:53:35,115:INFO:          matplotlib: 3.8.0
2023-12-03 14:53:35,115:INFO:          scikitplot: 0.3.7
2023-12-03 14:53:35,115:INFO:         yellowbrick: 1.5
2023-12-03 14:53:35,115:INFO:              plotly: 5.17.0
2023-12-03 14:53:35,115:INFO:    plotly-resampler: Not installed
2023-12-03 14:53:35,115:INFO:             kaleido: 0.2.1
2023-12-03 14:53:35,115:INFO:           schemdraw: 0.15
2023-12-03 14:53:35,115:INFO:         statsmodels: 0.14.0
2023-12-03 14:53:35,115:INFO:              sktime: 0.21.1
2023-12-03 14:53:35,115:INFO:               tbats: 1.1.3
2023-12-03 14:53:35,115:INFO:            pmdarima: 2.0.4
2023-12-03 14:53:35,115:INFO:              psutil: 5.9.5
2023-12-03 14:53:35,115:INFO:          markupsafe: 2.1.3
2023-12-03 14:53:35,115:INFO:             pickle5: Not installed
2023-12-03 14:53:35,115:INFO:         cloudpickle: 2.2.1
2023-12-03 14:53:35,115:INFO:         deprecation: 2.1.0
2023-12-03 14:53:35,115:INFO:              xxhash: 3.4.1
2023-12-03 14:53:35,115:INFO:           wurlitzer: Not installed
2023-12-03 14:53:35,115:INFO:PyCaret optional dependencies:
2023-12-03 14:53:35,596:INFO:                shap: 0.43.0
2023-12-03 14:53:35,596:INFO:           interpret: Not installed
2023-12-03 14:53:35,596:INFO:                umap: 0.5.5
2023-12-03 14:53:35,596:INFO:     ydata_profiling: Not installed
2023-12-03 14:53:35,596:INFO:  explainerdashboard: Not installed
2023-12-03 14:53:35,596:INFO:             autoviz: Not installed
2023-12-03 14:53:35,596:INFO:           fairlearn: Not installed
2023-12-03 14:53:35,596:INFO:          deepchecks: 0.17.4
2023-12-03 14:53:35,596:INFO:             xgboost: 2.0.0
2023-12-03 14:53:35,596:INFO:            catboost: 1.2.2
2023-12-03 14:53:35,596:INFO:              kmodes: Not installed
2023-12-03 14:53:35,596:INFO:             mlxtend: Not installed
2023-12-03 14:53:35,596:INFO:       statsforecast: Not installed
2023-12-03 14:53:35,596:INFO:        tune_sklearn: Not installed
2023-12-03 14:53:35,596:INFO:                 ray: Not installed
2023-12-03 14:53:35,596:INFO:            hyperopt: Not installed
2023-12-03 14:53:35,596:INFO:              optuna: 3.4.0
2023-12-03 14:53:35,596:INFO:               skopt: Not installed
2023-12-03 14:53:35,596:INFO:              mlflow: 2.8.1
2023-12-03 14:53:35,596:INFO:              gradio: Not installed
2023-12-03 14:53:35,596:INFO:             fastapi: 0.103.2
2023-12-03 14:53:35,596:INFO:             uvicorn: 0.23.2
2023-12-03 14:53:35,596:INFO:              m2cgen: Not installed
2023-12-03 14:53:35,596:INFO:           evidently: Not installed
2023-12-03 14:53:35,596:INFO:               fugue: Not installed
2023-12-03 14:53:35,596:INFO:           streamlit: 1.27.1
2023-12-03 14:53:35,596:INFO:             prophet: Not installed
2023-12-03 14:53:35,596:INFO:None
2023-12-03 14:53:35,596:INFO:Set up data.
2023-12-03 14:53:35,621:INFO:Set up folding strategy.
2023-12-03 14:53:35,621:INFO:Set up train/test split.
2023-12-03 14:53:35,699:INFO:Set up index.
2023-12-03 14:53:35,699:INFO:Assigning column types.
2023-12-03 14:53:35,699:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-12-03 14:53:35,746:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-03 14:53:35,746:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-03 14:53:35,777:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:53:35,777:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:53:35,842:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-12-03 14:53:35,842:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-03 14:53:35,875:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:53:35,878:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:53:35,878:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-12-03 14:53:35,915:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-03 14:53:35,939:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:53:35,943:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:53:35,980:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-12-03 14:53:36,012:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:53:36,012:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:53:36,012:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-12-03 14:53:36,076:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:53:36,076:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:53:36,140:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:53:36,140:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:53:36,140:INFO:Preparing preprocessing pipeline...
2023-12-03 14:53:36,140:INFO:Set up label encoding.
2023-12-03 14:53:36,140:INFO:Set up simple imputation.
2023-12-03 14:53:36,156:INFO:Set up encoding of ordinal features.
2023-12-03 14:53:36,156:INFO:Set up encoding of categorical features.
2023-12-03 14:53:36,156:INFO:Set up column name cleaning.
2023-12-03 14:53:36,343:INFO:Finished creating preprocessing pipeline.
2023-12-03 14:53:36,390:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Rania\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'SeniorCitizen',
                                             'tenure', 'MonthlyCharges',
                                             'TotalCharges'],
                                    transformer=SimpleImputer(add_...
                                                                    'DeviceProtection',
                                                                    'TechSupport',
                                                                    'StreamingTV',
                                                                    'StreamingMovies',
                                                                    'Contract',
                                                                    'PaymentMethod'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-12-03 14:53:36,390:INFO:Creating final display dataframe.
2023-12-03 14:53:36,539:INFO:Setup _display_container:                     Description            Value
0                    Session id              123
1                        Target            Churn
2                   Target type           Binary
3                Target mapping    No: 0, Yes: 1
4           Original data shape       (7043, 22)
5        Transformed data shape       (7043, 42)
6   Transformed train set shape       (4930, 42)
7    Transformed test set shape       (2113, 42)
8               Ignore features                1
9              Ordinal features                5
10             Numeric features                5
11         Categorical features               15
12     Rows with missing values             0.2%
13                   Preprocess             True
14              Imputation type           simple
15           Numeric imputation             mean
16       Categorical imputation             mode
17     Maximum one-hot encoding               25
18              Encoding method             None
19               Fold Generator  StratifiedKFold
20                  Fold Number               10
21                     CPU Jobs               -1
22                      Use GPU            False
23               Log Experiment     MlflowLogger
24              Experiment Name           churn1
25                          USI             b2ae
2023-12-03 14:53:36,626:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:53:36,626:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:53:36,682:INFO:Soft dependency imported: xgboost: 2.0.0
2023-12-03 14:53:36,682:INFO:Soft dependency imported: catboost: 1.2.2
2023-12-03 14:53:36,682:INFO:Logging experiment in loggers
2023-12-03 14:53:36,965:INFO:SubProcess save_model() called ==================================
2023-12-03 14:53:37,105:INFO:Initializing save_model()
2023-12-03 14:53:37,105:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\Rania\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'SeniorCitizen',
                                             'tenure', 'MonthlyCharges',
                                             'TotalCharges'],
                                    transformer=SimpleImputer(add_...
                                                                    'DeviceProtection',
                                                                    'TechSupport',
                                                                    'StreamingTV',
                                                                    'StreamingMovies',
                                                                    'Contract',
                                                                    'PaymentMethod'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), model_name=C:\Users\Rania\AppData\Local\Temp\tmpuidw2wd6\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Rania\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'SeniorCitizen',
                                             'tenure', 'MonthlyCharges',
                                             'TotalCharges'],
                                    transformer=SimpleImputer(add_...
                                                                    'DeviceProtection',
                                                                    'TechSupport',
                                                                    'StreamingTV',
                                                                    'StreamingMovies',
                                                                    'Contract',
                                                                    'PaymentMethod'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2023-12-03 14:53:37,105:INFO:Adding model into prep_pipe
2023-12-03 14:53:37,105:WARNING:Only Model saved as it was a pipeline.
2023-12-03 14:53:37,121:INFO:C:\Users\Rania\AppData\Local\Temp\tmpuidw2wd6\Transformation Pipeline.pkl saved in current working directory
2023-12-03 14:53:37,185:INFO:Pipeline(memory=FastMemory(location=C:\Users\Rania\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'SeniorCitizen',
                                             'tenure', 'MonthlyCharges',
                                             'TotalCharges'],
                                    transformer=SimpleImputer(add_...
                                                                    'DeviceProtection',
                                                                    'TechSupport',
                                                                    'StreamingTV',
                                                                    'StreamingMovies',
                                                                    'Contract',
                                                                    'PaymentMethod'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-12-03 14:53:37,185:INFO:save_model() successfully completed......................................
2023-12-03 14:53:37,262:INFO:SubProcess save_model() end ==================================
2023-12-03 14:53:37,335:INFO:setup() successfully completed in 1.63s...............
2023-12-07 19:51:11,799:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-07 19:51:11,799:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-07 19:51:11,799:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-07 19:51:11,799:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-12-07 19:51:12,694:WARNING:c:\Users\Rania\anaconda3\envs\mlops\lib\site-packages\pydantic\_internal\_fields.py:128: UserWarning: Field "model_server_url" has conflict with protected namespace "model_".

You may be able to resolve this warning by setting `model_config['protected_namespaces'] = ()`.
  warnings.warn(

2023-12-07 19:51:12,694:WARNING:c:\Users\Rania\anaconda3\envs\mlops\lib\site-packages\pydantic\_internal\_config.py:317: UserWarning: Valid config keys have changed in V2:
* 'schema_extra' has been renamed to 'json_schema_extra'
  warnings.warn(message, UserWarning)

2023-12-07 19:51:53,483:INFO:Initializing load_model()
2023-12-07 19:51:53,483:INFO:load_model(model_name=path_to_save_model, platform=None, authentication=None, verbose=True)
2023-12-07 20:57:46,648:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\preprocessing\_encoders.py:868: FutureWarning: `sparse` was renamed to `sparse_output` in version 1.2 and will be removed in 1.4. `sparse_output` is ignored unless you leave `sparse` to its default value.
  warnings.warn(

2023-12-07 21:01:18,411:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\preprocessing\_encoders.py:868: FutureWarning: `sparse` was renamed to `sparse_output` in version 1.2 and will be removed in 1.4. `sparse_output` is ignored unless you leave `sparse` to its default value.
  warnings.warn(

2023-12-07 21:05:18,969:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\preprocessing\_encoders.py:868: FutureWarning: `sparse` was renamed to `sparse_output` in version 1.2 and will be removed in 1.4. `sparse_output` is ignored unless you leave `sparse` to its default value.
  warnings.warn(

2023-12-07 21:05:36,620:WARNING:C:\Users\Rania\AppData\Roaming\Python\Python310\site-packages\sklearn\preprocessing\_encoders.py:868: FutureWarning: `sparse` was renamed to `sparse_output` in version 1.2 and will be removed in 1.4. `sparse_output` is ignored unless you leave `sparse` to its default value.
  warnings.warn(

2023-12-10 20:41:00,593:WARNING:c:\Users\Rania\anaconda3\envs\mlops\lib\site-packages\pydantic\_internal\_fields.py:128: UserWarning: Field "model_server_url" has conflict with protected namespace "model_".

You may be able to resolve this warning by setting `model_config['protected_namespaces'] = ()`.
  warnings.warn(

2023-12-10 20:41:00,605:WARNING:c:\Users\Rania\anaconda3\envs\mlops\lib\site-packages\pydantic\_internal\_config.py:317: UserWarning: Valid config keys have changed in V2:
* 'schema_extra' has been renamed to 'json_schema_extra'
  warnings.warn(message, UserWarning)

